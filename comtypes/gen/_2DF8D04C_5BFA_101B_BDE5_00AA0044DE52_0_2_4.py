# -*- coding: mbcs -*-
typelib_path = 'C:\\Program Files\\Common Files\\Microsoft Shared\\OFFICE12\\MSO.DLL'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from comtypes.automation import IDispatch
from ctypes import HRESULT
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
from comtypes import IUnknown
from comtypes.automation import VARIANT
from comtypes import BSTR
from ctypes.wintypes import VARIANT_BOOL
from comtypes import CoClass
from comtypes import DISPMETHOD, DISPPROPERTY, helpstring
MsoRGBType = c_int
from comtypes.automation import _midlSAFEARRAY



# values for enumeration 'XlErrorBarInclude'
xlErrorBarIncludeBoth = 1
xlErrorBarIncludeMinusValues = 3
xlErrorBarIncludeNone = -4142
xlErrorBarIncludePlusValues = 2
XlErrorBarInclude = c_int # enum

# values for enumeration 'XlChartPictureType'
xlStackScale = 3
xlStack = 2
xlStretch = 1
XlChartPictureType = c_int # enum

# values for enumeration 'XlErrorBarType'
xlErrorBarTypeCustom = -4114
xlErrorBarTypeFixedValue = 1
xlErrorBarTypePercent = 2
xlErrorBarTypeStDev = -4155
xlErrorBarTypeStError = 4
XlErrorBarType = c_int # enum
class _IMsoDispObj(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0300-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class TextColumn2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03B2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_IMsoDispObj._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'plCreator' )),
]
################################################################
## code template for _IMsoDispObj implementation
##class _IMsoDispObj_Impl(object):
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##


# values for enumeration 'MsoTextDirection'
msoTextDirectionMixed = -2
msoTextDirectionLeftToRight = 1
msoTextDirectionRightToLeft = 2
MsoTextDirection = c_int # enum
TextColumn2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Number',
              ( ['retval', 'out'], POINTER(c_int), 'Number' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Number',
              ( ['in'], c_int, 'Number' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Spacing',
              ( ['retval', 'out'], POINTER(c_float), 'Spacing' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_float, 'Spacing' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'TextDirection',
              ( ['retval', 'out'], POINTER(MsoTextDirection), 'Direction' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'TextDirection',
              ( ['in'], MsoTextDirection, 'Direction' )),
]
################################################################
## code template for TextColumn2 implementation
##class TextColumn2_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Spacing
##    def _set(self, Spacing):
##        '-no docstring-'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Direction
##    def _set(self, Direction):
##        '-no docstring-'
##    TextDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Number
##    def _set(self, Number):
##        '-no docstring-'
##    Number = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlErrorBarDirection'
xlChartX = -4168
xlChartY = 1
XlErrorBarDirection = c_int # enum
class FileDialogFilters(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0365-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class FileDialogFilter(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0364-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FileDialogFilters._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcFilters' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(FileDialogFilter)), 'Item' )),
    COMMETHOD([dispid(1610809348)], HRESULT, 'Delete',
              ( ['in', 'optional'], VARIANT, 'filter' )),
    COMMETHOD([dispid(1610809349)], HRESULT, 'Clear'),
    COMMETHOD([dispid(1610809350)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Description' ),
              ( ['in'], BSTR, 'Extensions' ),
              ( ['in', 'optional'], VARIANT, 'Position' ),
              ( ['retval', 'out'], POINTER(POINTER(FileDialogFilter)), 'Add' )),
]
################################################################
## code template for FileDialogFilters implementation
##class FileDialogFilters_Impl(object):
##    def Add(self, Description, Extensions, Position):
##        '-no docstring-'
##        #return Add
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self, filter):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcFilters
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##

class FileDialog(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0362-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoFileDialogView'
msoFileDialogViewList = 1
msoFileDialogViewDetails = 2
msoFileDialogViewProperties = 3
msoFileDialogViewPreview = 4
msoFileDialogViewThumbnail = 5
msoFileDialogViewLargeIcons = 6
msoFileDialogViewSmallIcons = 7
msoFileDialogViewWebView = 8
msoFileDialogViewTiles = 9
MsoFileDialogView = c_int # enum
class FileDialogSelectedItems(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0363-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoFileDialogType'
msoFileDialogOpen = 1
msoFileDialogSaveAs = 2
msoFileDialogFilePicker = 3
msoFileDialogFolderPicker = 4
MsoFileDialogType = c_int # enum
FileDialog._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Filters',
              ( ['retval', 'out'], POINTER(POINTER(FileDialogFilters)), 'Filters' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'FilterIndex',
              ( ['retval', 'out'], POINTER(c_int), 'FilterIndex' )),
    COMMETHOD([dispid(1610809346), 'propput'], HRESULT, 'FilterIndex',
              ( ['in'], c_int, 'FilterIndex' )),
    COMMETHOD([dispid(1610809348), 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'Title' )),
    COMMETHOD([dispid(1610809348), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'Title' )),
    COMMETHOD([dispid(1610809350), 'propget'], HRESULT, 'ButtonName',
              ( ['retval', 'out'], POINTER(BSTR), 'ButtonName' )),
    COMMETHOD([dispid(1610809350), 'propput'], HRESULT, 'ButtonName',
              ( ['in'], BSTR, 'ButtonName' )),
    COMMETHOD([dispid(1610809352), 'propget'], HRESULT, 'AllowMultiSelect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfAllowMultiSelect' )),
    COMMETHOD([dispid(1610809352), 'propput'], HRESULT, 'AllowMultiSelect',
              ( ['in'], VARIANT_BOOL, 'pvarfAllowMultiSelect' )),
    COMMETHOD([dispid(1610809354), 'propget'], HRESULT, 'InitialView',
              ( ['retval', 'out'], POINTER(MsoFileDialogView), 'pinitialview' )),
    COMMETHOD([dispid(1610809354), 'propput'], HRESULT, 'InitialView',
              ( ['in'], MsoFileDialogView, 'pinitialview' )),
    COMMETHOD([dispid(1610809356), 'propget'], HRESULT, 'InitialFileName',
              ( ['retval', 'out'], POINTER(BSTR), 'InitialFileName' )),
    COMMETHOD([dispid(1610809356), 'propput'], HRESULT, 'InitialFileName',
              ( ['in'], BSTR, 'InitialFileName' )),
    COMMETHOD([dispid(1610809358), 'propget'], HRESULT, 'SelectedItems',
              ( ['retval', 'out'], POINTER(POINTER(FileDialogSelectedItems)), 'Files' )),
    COMMETHOD([dispid(1610809359), 'propget'], HRESULT, 'DialogType',
              ( ['retval', 'out'], POINTER(MsoFileDialogType), 'pdialogtype' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(1610809361)], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(c_int), 'rval' )),
    COMMETHOD([dispid(1610809362)], HRESULT, 'Execute'),
]
################################################################
## code template for FileDialog implementation
##class FileDialog_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pinitialview
##    def _set(self, pinitialview):
##        '-no docstring-'
##    InitialView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return InitialFileName
##    def _set(self, InitialFileName):
##        '-no docstring-'
##    InitialFileName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SelectedItems(self):
##        '-no docstring-'
##        #return Files
##
##    @property
##    def DialogType(self):
##        '-no docstring-'
##        #return pdialogtype
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Title
##    def _set(self, Title):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FilterIndex
##    def _set(self, FilterIndex):
##        '-no docstring-'
##    FilterIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Filters(self):
##        '-no docstring-'
##        #return Filters
##
##    @property
##    def Item(self):
##        '-no docstring-'
##        #return Name
##
##    def Show(self):
##        '-no docstring-'
##        #return rval
##
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfAllowMultiSelect
##    def _set(self, pvarfAllowMultiSelect):
##        '-no docstring-'
##    AllowMultiSelect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ButtonName
##    def _set(self, ButtonName):
##        '-no docstring-'
##    ButtonName = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlDataLabelPosition'
xlLabelPositionCenter = -4108
xlLabelPositionAbove = 0
xlLabelPositionBelow = 1
xlLabelPositionLeft = -4131
xlLabelPositionRight = -4152
xlLabelPositionOutsideEnd = 2
xlLabelPositionInsideEnd = 3
xlLabelPositionInsideBase = 4
xlLabelPositionBestFit = 5
xlLabelPositionMixed = 6
xlLabelPositionCustom = 7
XlDataLabelPosition = c_int # enum

# values for enumeration 'MsoWizardMsgType'
msoWizardMsgLocalStateOn = 1
msoWizardMsgLocalStateOff = 2
msoWizardMsgShowHelp = 3
msoWizardMsgSuspending = 4
msoWizardMsgResuming = 5
MsoWizardMsgType = c_int # enum
class CustomXMLPrefixMappings(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB00-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CustomXMLPrefixMapping(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB10-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CustomXMLPrefixMappings._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLPrefixMapping)), 'ppPrefixMapping' )),
    COMMETHOD([dispid(1610809347)], HRESULT, 'AddNamespace',
              ( ['in'], BSTR, 'Prefix' ),
              ( ['in'], BSTR, 'NamespaceURI' )),
    COMMETHOD([dispid(1610809348)], HRESULT, 'LookupNamespace',
              ( ['in'], BSTR, 'Prefix' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNamespaceURI' )),
    COMMETHOD([dispid(1610809349)], HRESULT, 'LookupPrefix',
              ( ['in'], BSTR, 'NamespaceURI' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPrefix' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for CustomXMLPrefixMappings implementation
##class CustomXMLPrefixMappings_Impl(object):
##    def LookupNamespace(self, Prefix):
##        '-no docstring-'
##        #return pbstrNamespaceURI
##
##    def LookupPrefix(self, NamespaceURI):
##        '-no docstring-'
##        #return pbstrPrefix
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppPrefixMapping
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    def AddNamespace(self, Prefix, NamespaceURI):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoLanguageIDHidden'
msoLanguageIDChineseHongKong = 3076
msoLanguageIDChineseMacao = 5124
msoLanguageIDEnglishTrinidad = 11273
MsoLanguageIDHidden = c_int # enum

# values for enumeration 'MsoTextCharWrap'
msoCharWrapMixed = -2
msoNoCharWrap = 0
msoStandardCharWrap = 1
msoStrictCharWrap = 2
msoCustomCharWrap = 3
MsoTextCharWrap = c_int # enum

# values for enumeration 'MsoButtonSetType'
msoButtonSetNone = 0
msoButtonSetOK = 1
msoButtonSetCancel = 2
msoButtonSetOkCancel = 3
msoButtonSetYesNo = 4
msoButtonSetYesNoCancel = 5
msoButtonSetBackClose = 6
msoButtonSetNextClose = 7
msoButtonSetBackNextClose = 8
msoButtonSetRetryCancel = 9
msoButtonSetAbortRetryIgnore = 10
msoButtonSetSearchClose = 11
msoButtonSetBackNextSnooze = 12
msoButtonSetTipsOptionsClose = 13
msoButtonSetYesAllNoCancel = 14
MsoButtonSetType = c_int # enum
class IMsoLegendKey(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C171E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class IMsoBorder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1717-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoInterior(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C171B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class ChartFillFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C171C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlColorIndex'
xlColorIndexAutomatic = -4105
xlColorIndexNone = -4142
XlColorIndex = c_int # enum

# values for enumeration 'XlMarkerStyle'
xlMarkerStyleAutomatic = -4105
xlMarkerStyleCircle = 8
xlMarkerStyleDash = -4115
xlMarkerStyleDiamond = 2
xlMarkerStyleDot = -4118
xlMarkerStyleNone = -4142
xlMarkerStylePicture = -4147
xlMarkerStylePlus = 9
xlMarkerStyleSquare = 1
xlMarkerStyleStar = 5
xlMarkerStyleTriangle = 3
xlMarkerStyleX = -4168
XlMarkerStyle = c_int # enum
class IMsoChartFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1730-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoLegendKey._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerStyle',
              ( ['retval', 'out'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Smooth',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for IMsoLegendKey implementation
##class IMsoLegendKey_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##

class ODSOFilters(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1534-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoFilterComparison'
msoFilterComparisonEqual = 0
msoFilterComparisonNotEqual = 1
msoFilterComparisonLessThan = 2
msoFilterComparisonGreaterThan = 3
msoFilterComparisonLessThanEqual = 4
msoFilterComparisonGreaterThanEqual = 5
msoFilterComparisonIsBlank = 6
msoFilterComparisonIsNotBlank = 7
msoFilterComparisonContains = 8
msoFilterComparisonNotContains = 9
MsoFilterComparison = c_int # enum

# values for enumeration 'MsoFilterConjunction'
msoFilterConjunctionAnd = 0
msoFilterConjunctionOr = 1
MsoFilterConjunction = c_int # enum
ODSOFilters._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParentOdso' )),
    COMMETHOD([dispid(1610809346)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppColumn' )),
    COMMETHOD([dispid(1610809347)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Column' ),
              ( ['in'], MsoFilterComparison, 'Comparison' ),
              ( ['in'], MsoFilterConjunction, 'Conjunction' ),
              ( ['in', 'optional'], BSTR, 'bstrCompareTo', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DeferUpdate', False )),
    COMMETHOD([dispid(1610809348)], HRESULT, 'Delete',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DeferUpdate', False )),
]
################################################################
## code template for ODSOFilters implementation
##class ODSOFilters_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParentOdso
##
##    def Delete(self, Index, DeferUpdate):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    def Add(self, Column, Comparison, Conjunction, bstrCompareTo, DeferUpdate):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppColumn
##


# values for enumeration 'XlHAlign'
xlHAlignCenter = -4108
xlHAlignCenterAcrossSelection = 7
xlHAlignDistributed = -4117
xlHAlignFill = 5
xlHAlignGeneral = 1
xlHAlignJustify = -4130
xlHAlignLeft = -4131
xlHAlignRight = -4152
XlHAlign = c_int # enum
class IMsoChartTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C170F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoCharacters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1731-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class ChartFont(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1718-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlChartElementPosition'
xlChartElementPositionAutomatic = -4105
xlChartElementPositionCustom = -4114
XlChartElementPosition = c_int # enum
IMsoChartTitle._methods_ = [
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoCharacters)), 'RHS' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'ppfont' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'Val' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'Val' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'Val' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'Val' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'Val' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'Val' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'Val' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'Val' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'ppinterior' )),
    COMMETHOD([dispid(1610743831), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'ppinterior' )),
    COMMETHOD([dispid(1610743832)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743833), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pval' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(1610743836)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlChartElementPosition), 'pval' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'pval' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppval' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoChartTitle implementation
##class IMsoChartTitle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Val
##    def _set(self, Val):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def Select(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Val
##    def _set(self, Val):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppfont
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppval
##
##    def Delete(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Val
##    def _set(self, Val):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Val
##    def _set(self, Val):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##

class IMsoEServicesDialog(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0372-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoEServicesDialog._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Close',
              ( ['in', 'optional'], VARIANT_BOOL, 'ApplyWebComponentChanges', False )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'AddTrustedDomain',
              ( ['in'], BSTR, 'Domain' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ApplicationName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdisp' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'WebComponent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdisp' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'ClipArt',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdisp' )),
]
################################################################
## code template for IMsoEServicesDialog implementation
##class IMsoEServicesDialog_Impl(object):
##    @property
##    def ClipArt(self):
##        '-no docstring-'
##        #return ppdisp
##
##    @property
##    def WebComponent(self):
##        '-no docstring-'
##        #return ppdisp
##
##    @property
##    def ApplicationName(self):
##        '-no docstring-'
##        #return retval
##
##    def Close(self, ApplyWebComponentChanges):
##        '-no docstring-'
##        #return 
##
##    def AddTrustedDomain(self, Domain):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppdisp
##


# values for enumeration 'XlChartItem'
xlDataLabel = 0
xlChartArea = 2
xlSeries = 3
xlChartTitle = 4
xlWalls = 5
xlCorners = 6
xlDataTable = 7
xlTrendline = 8
xlErrorBars = 9
xlXErrorBars = 10
xlYErrorBars = 11
xlLegendEntry = 12
xlLegendKey = 13
xlShape = 14
xlMajorGridlines = 15
xlMinorGridlines = 16
xlAxisTitle = 17
xlUpBars = 18
xlPlotArea = 19
xlDownBars = 20
xlAxis = 21
xlSeriesLines = 22
xlFloor = 23
xlLegend = 24
xlHiLoLines = 25
xlDropLines = 26
xlRadarAxisLabels = 27
xlNothing = 28
xlLeaderLines = 29
xlDisplayUnitLabel = 30
xlPivotChartFieldButton = 31
xlPivotChartDropZone = 32
XlChartItem = c_int # enum
class ICommandBarComboBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{55F88896-7708-11D1-ACEB-006008961DA5}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class CommandBarComboBox(CoClass):
    _reg_clsid_ = GUID('{55F88897-7708-11D1-ACEB-006008961DA5}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
class IAccessible(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{618736E0-3C3D-11CF-810C-00AA00389B71}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
class _IMsoOleAccDispObj(IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0301-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class CommandBarControl(_IMsoOleAccDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0308-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
class _CommandBarComboBox(CommandBarControl):
    _case_insensitive_ = True
    _iid_ = GUID('{000C030C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class _CommandBarComboBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0354-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CommandBarComboBox._com_interfaces_ = [_CommandBarComboBox]
CommandBarComboBox._outgoing_interfaces_ = [_CommandBarComboBoxEvents]

ICommandBarComboBoxEvents._methods_ = [
    COMMETHOD([dispid(1)], None, 'Change',
              ( ['in'], POINTER(CommandBarComboBox), 'Ctrl' )),
]
################################################################
## code template for ICommandBarComboBoxEvents implementation
##class ICommandBarComboBoxEvents_Impl(object):
##    def Change(self, Ctrl):
##        '-no docstring-'
##        #return 
##

class CommandBars(CoClass):
    _reg_clsid_ = GUID('{55F88893-7708-11D1-ACEB-006008961DA5}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
class _CommandBars(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0302-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class _CommandBarsEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0352-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CommandBars._com_interfaces_ = [_CommandBars]
CommandBars._outgoing_interfaces_ = [_CommandBarsEvents]

class WebPageFont(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0913-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
WebPageFont._methods_ = [
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ProportionalFont',
              ( ['retval', 'out'], POINTER(BSTR), 'pstr' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'ProportionalFont',
              ( ['in'], BSTR, 'pstr' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'ProportionalFontSize',
              ( ['retval', 'out'], POINTER(c_float), 'pf' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'ProportionalFontSize',
              ( ['in'], c_float, 'pf' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'FixedWidthFont',
              ( ['retval', 'out'], POINTER(BSTR), 'pstr' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'FixedWidthFont',
              ( ['in'], BSTR, 'pstr' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'FixedWidthFontSize',
              ( ['retval', 'out'], POINTER(c_float), 'pf' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'FixedWidthFontSize',
              ( ['in'], c_float, 'pf' )),
]
################################################################
## code template for WebPageFont implementation
##class WebPageFont_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pstr
##    def _set(self, pstr):
##        '-no docstring-'
##    ProportionalFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pf
##    def _set(self, pf):
##        '-no docstring-'
##    FixedWidthFontSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pstr
##    def _set(self, pstr):
##        '-no docstring-'
##    FixedWidthFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pf
##    def _set(self, pf):
##        '-no docstring-'
##    ProportionalFontSize = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoExtrusionColorType'
msoExtrusionColorTypeMixed = -2
msoExtrusionColorAutomatic = 1
msoExtrusionColorCustom = 2
MsoExtrusionColorType = c_int # enum
class BalloonLabel(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0330-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
BalloonLabel._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809347), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
]
################################################################
## code template for BalloonLabel implementation
##class BalloonLabel_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Item(self):
##        '-no docstring-'
##        #return pbstrName
##


# values for enumeration 'MsoComboStyle'
msoComboNormal = 0
msoComboLabel = 1
MsoComboStyle = c_int # enum

# values for enumeration 'XlDataLabelsType'
xlDataLabelsShowNone = -4142
xlDataLabelsShowValue = 2
xlDataLabelsShowPercent = 3
xlDataLabelsShowLabel = 4
xlDataLabelsShowLabelAndPercent = 5
xlDataLabelsShowBubbleSizes = 6
XlDataLabelsType = c_int # enum
class ILicValidator(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{919AA22C-B9AD-11D3-8D59-0050048384E3}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ILicValidator._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Products',
              ( ['retval', 'out'], POINTER(VARIANT), 'pVariant' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Selection',
              ( ['retval', 'out'], POINTER(c_int), 'piSel' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Selection',
              ( ['in'], c_int, 'piSel' )),
]
################################################################
## code template for ILicValidator implementation
##class ILicValidator_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return piSel
##    def _set(self, piSel):
##        '-no docstring-'
##    Selection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Products(self):
##        '-no docstring-'
##        #return pVariant
##

class UserPermission(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0375-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
UserPermission._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'UserId',
              ( ['retval', 'out'], POINTER(BSTR), 'UserId' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Permission',
              ( ['retval', 'out'], POINTER(c_int), 'Permission' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Permission',
              ( ['in'], c_int, 'Permission' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ExpirationDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'ExpirationDate' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ExpirationDate',
              ( ['in'], VARIANT, 'ExpirationDate' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(4)], HRESULT, 'Remove'),
]
################################################################
## code template for UserPermission implementation
##class UserPermission_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def _get(self):
##        '-no docstring-'
##        #return Permission
##    def _set(self, Permission):
##        '-no docstring-'
##    Permission = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ExpirationDate
##    def _set(self, ExpirationDate):
##        '-no docstring-'
##    ExpirationDate = property(_get, _set, doc = _set.__doc__)
##
##    def Remove(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UserId(self):
##        '-no docstring-'
##        #return UserId
##


# values for enumeration 'MsoCustomXMLValidationErrorType'
msoCustomXMLValidationErrorSchemaGenerated = 0
msoCustomXMLValidationErrorAutomaticallyCleared = 1
msoCustomXMLValidationErrorManual = 2
MsoCustomXMLValidationErrorType = c_int # enum
class _CustomXMLSchemaCollection(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB02-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CustomXMLSchema(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB01-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CustomXMLSchemaCollection(CoClass):
    _reg_clsid_ = GUID('{000CDB0D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
CustomXMLSchemaCollection._com_interfaces_ = [_CustomXMLSchemaCollection]

_CustomXMLSchemaCollection._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLSchema)), 'ppSchema' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'NamespaceURI',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNamespaceURI' )),
    COMMETHOD([dispid(1610809348)], HRESULT, 'Add',
              ( ['in', 'optional'], BSTR, 'NamespaceURI', '' ),
              ( ['in', 'optional'], BSTR, 'Alias', '' ),
              ( ['in', 'optional'], BSTR, 'FileName', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'InstallForAllUsers', False ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLSchema)), 'ppSchema' )),
    COMMETHOD([dispid(1610809349)], HRESULT, 'AddCollection',
              ( ['in'], POINTER(CustomXMLSchemaCollection), 'SchemaCollection' )),
    COMMETHOD([dispid(1610809350)], HRESULT, 'Validate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfResult' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for _CustomXMLSchemaCollection implementation
##class _CustomXMLSchemaCollection_Impl(object):
##    def AddCollection(self, SchemaCollection):
##        '-no docstring-'
##        #return 
##
##    def Validate(self):
##        '-no docstring-'
##        #return pfResult
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Add(self, NamespaceURI, Alias, FileName, InstallForAllUsers):
##        '-no docstring-'
##        #return ppSchema
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppSchema
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    @property
##    def NamespaceURI(self, Index):
##        '-no docstring-'
##        #return pbstrNamespaceURI
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##

CustomXMLSchema._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrLocation' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'NamespaceURI',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNamespaceURI' )),
    COMMETHOD([dispid(1610809347)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610809348)], HRESULT, 'Reload'),
]
################################################################
## code template for CustomXMLSchema implementation
##class CustomXMLSchema_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def NamespaceURI(self):
##        '-no docstring-'
##        #return pbstrNamespaceURI
##
##    @property
##    def Location(self):
##        '-no docstring-'
##        #return pbstrLocation
##
##    def Reload(self):
##        '-no docstring-'
##        #return 
##

class IMsoCorners(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1714-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoCorners._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoCorners implementation
##class IMsoCorners_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##


# values for enumeration 'MsoCustomXMLNodeType'
msoCustomXMLNodeElement = 1
msoCustomXMLNodeAttribute = 2
msoCustomXMLNodeText = 3
msoCustomXMLNodeCData = 4
msoCustomXMLNodeProcessingInstruction = 7
msoCustomXMLNodeComment = 8
msoCustomXMLNodeDocument = 9
MsoCustomXMLNodeType = c_int # enum
class MsoDebugOptions_UTRunResult(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C038C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
MsoDebugOptions_UTRunResult._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Passed',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Passed' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ErrorString',
              ( ['retval', 'out'], POINTER(BSTR), 'Error' )),
]
################################################################
## code template for MsoDebugOptions_UTRunResult implementation
##class MsoDebugOptions_UTRunResult_Impl(object):
##    @property
##    def Passed(self):
##        '-no docstring-'
##        #return Passed
##
##    @property
##    def ErrorString(self):
##        '-no docstring-'
##        #return Error
##


# values for enumeration 'MsoPermission'
msoPermissionView = 1
msoPermissionRead = 1
msoPermissionEdit = 2
msoPermissionSave = 4
msoPermissionExtract = 8
msoPermissionChange = 15
msoPermissionPrint = 16
msoPermissionObjModel = 32
msoPermissionFullControl = 64
msoPermissionAllCommon = 127
MsoPermission = c_int # enum

# values for enumeration 'MsoOrientation'
msoOrientationMixed = -2
msoOrientationHorizontal = 1
msoOrientationVertical = 2
MsoOrientation = c_int # enum

# values for enumeration 'XlEndStyleCap'
xlCap = 1
xlNoCap = 2
XlEndStyleCap = c_int # enum
class CommandBarButton(CoClass):
    _reg_clsid_ = GUID('{55F88891-7708-11D1-ACEB-006008961DA5}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
class _CommandBarButton(CommandBarControl):
    _case_insensitive_ = True
    _iid_ = GUID('{000C030E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class _CommandBarButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0351-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CommandBarButton._com_interfaces_ = [_CommandBarButton]
CommandBarButton._outgoing_interfaces_ = [_CommandBarButtonEvents]

class AnswerWizardFiles(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0361-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
AnswerWizardFiles._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pCount' )),
    COMMETHOD([dispid(1610809347)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(1610809348)], HRESULT, 'Delete',
              ( ['in'], BSTR, 'FileName' )),
]
################################################################
## code template for AnswerWizardFiles implementation
##class AnswerWizardFiles_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Delete(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pCount
##
##    def Add(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return pbstr
##


# values for enumeration 'MsoCharacterSet'
msoCharacterSetArabic = 1
msoCharacterSetCyrillic = 2
msoCharacterSetEnglishWesternEuropeanOtherLatinScript = 3
msoCharacterSetGreek = 4
msoCharacterSetHebrew = 5
msoCharacterSetJapanese = 6
msoCharacterSetKorean = 7
msoCharacterSetMultilingualUnicode = 8
msoCharacterSetSimplifiedChinese = 9
msoCharacterSetThai = 10
msoCharacterSetTraditionalChinese = 11
msoCharacterSetVietnamese = 12
MsoCharacterSet = c_int # enum

# values for enumeration 'MsoHorizontalAnchor'
msoHorizontalAnchorMixed = -2
msoAnchorNone = 1
msoAnchorCenter = 2
MsoHorizontalAnchor = c_int # enum

# values for enumeration 'MsoFileNewSection'
msoOpenDocument = 0
msoNew = 1
msoNewfromExistingFile = 2
msoNewfromTemplate = 3
msoBottomSection = 4
MsoFileNewSection = c_int # enum
class FreeformBuilder(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0315-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoSegmentType'
msoSegmentLine = 0
msoSegmentCurve = 1
MsoSegmentType = c_int # enum

# values for enumeration 'MsoEditingType'
msoEditingAuto = 0
msoEditingCorner = 1
msoEditingSmooth = 2
msoEditingSymmetric = 3
MsoEditingType = c_int # enum
class Shape(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
FreeformBuilder._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNodes',
              ( ['in'], MsoSegmentType, 'SegmentType' ),
              ( ['in'], MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], c_float, 'X2', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y2', 0.0 ),
              ( ['in', 'optional'], c_float, 'X3', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y3', 0.0 )),
    COMMETHOD([dispid(11)], HRESULT, 'ConvertToShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Freeform' )),
]
################################################################
## code template for FreeformBuilder implementation
##class FreeformBuilder_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def ConvertToShape(self):
##        '-no docstring-'
##        #return Freeform
##
##    def AddNodes(self, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##

_CommandBarButtonEvents._disp_methods_ = [
    DISPMETHOD([dispid(1)], None, 'Click',
               ( ['in'], POINTER(CommandBarButton), 'Ctrl' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
]
class Points(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C170D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class ChartPoint(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C170C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
Points._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ChartPoint)), 'RHS' )),
    COMMETHOD(['nonbrowsable'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ChartPoint)), 'RHS' )),
]
################################################################
## code template for Points implementation
##class Points_Impl(object):
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##


# values for enumeration 'MsoVerticalAnchor'
msoVerticalAnchorMixed = -2
msoAnchorTop = 1
msoAnchorTopBaseline = 2
msoAnchorMiddle = 3
msoAnchorBottom = 4
msoAnchorBottomBaseLine = 5
MsoVerticalAnchor = c_int # enum

# values for enumeration 'XlScaleType'
xlScaleLinear = -4132
xlScaleLogarithmic = -4133
XlScaleType = c_int # enum

# values for enumeration 'XlAxisType'
xlCategory = 1
xlSeriesAxis = 3
xlValue = 2
XlAxisType = c_int # enum

# values for enumeration 'MsoScreenSize'
msoScreenSize544x376 = 0
msoScreenSize640x480 = 1
msoScreenSize720x512 = 2
msoScreenSize800x600 = 3
msoScreenSize1024x768 = 4
msoScreenSize1152x882 = 5
msoScreenSize1152x900 = 6
msoScreenSize1280x1024 = 7
msoScreenSize1600x1200 = 8
msoScreenSize1800x1440 = 9
msoScreenSize1920x1200 = 10
MsoScreenSize = c_int # enum

# values for enumeration 'XlAxisCrosses'
xlAxisCrossesAutomatic = -4105
xlAxisCrossesCustom = -4114
xlAxisCrossesMaximum = 2
xlAxisCrossesMinimum = 4
XlAxisCrosses = c_int # enum

# values for enumeration 'MsoZOrderCmd'
msoBringToFront = 0
msoSendToBack = 1
msoBringForward = 2
msoSendBackward = 3
msoBringInFrontOfText = 4
msoSendBehindText = 5
MsoZOrderCmd = c_int # enum

# values for enumeration 'MsoDocProperties'
msoPropertyTypeNumber = 1
msoPropertyTypeBoolean = 2
msoPropertyTypeDate = 3
msoPropertyTypeString = 4
msoPropertyTypeFloat = 5
MsoDocProperties = c_int # enum

# values for enumeration 'XlCategoryType'
xlCategoryScale = 2
xlTimeScale = 3
xlAutomaticScale = -4105
XlCategoryType = c_int # enum
class IMsoDataLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1720-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ChartPoint._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['nonbrowsable', 'hidden'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'IMsoLegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataLabel',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDataLabel)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Explosion',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasDataLabel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasDataLabel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerStyle',
              ( ['retval', 'out'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(XlChartPictureType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToSides',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToFront',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToEnd',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SecondaryPlot',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SecondaryPlot',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'IMsoLegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Has3DEffect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for ChartPoint implementation
##class ChartPoint_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataLabel = property(_get, _set, doc = _set.__doc__)
##
##    def _ApplyDataLabels(self, Type, IMsoLegendKey, AutoText, HasLeaderLines):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyDataLabels(self, Type, IMsoLegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SecondaryPlot = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##


# values for enumeration 'XlChartType'
xlColumnClustered = 51
xlColumnStacked = 52
xlColumnStacked100 = 53
xl3DColumnClustered = 54
xl3DColumnStacked = 55
xl3DColumnStacked100 = 56
xlBarClustered = 57
xlBarStacked = 58
xlBarStacked100 = 59
xl3DBarClustered = 60
xl3DBarStacked = 61
xl3DBarStacked100 = 62
xlLineStacked = 63
xlLineStacked100 = 64
xlLineMarkers = 65
xlLineMarkersStacked = 66
xlLineMarkersStacked100 = 67
xlPieOfPie = 68
xlPieExploded = 69
xl3DPieExploded = 70
xlBarOfPie = 71
xlXYScatterSmooth = 72
xlXYScatterSmoothNoMarkers = 73
xlXYScatterLines = 74
xlXYScatterLinesNoMarkers = 75
xlAreaStacked = 76
xlAreaStacked100 = 77
xl3DAreaStacked = 78
xl3DAreaStacked100 = 79
xlDoughnutExploded = 80
xlRadarMarkers = 81
xlRadarFilled = 82
xlSurface = 83
xlSurfaceWireframe = 84
xlSurfaceTopView = 85
xlSurfaceTopViewWireframe = 86
xlBubble = 15
xlBubble3DEffect = 87
xlStockHLC = 88
xlStockOHLC = 89
xlStockVHLC = 90
xlStockVOHLC = 91
xlCylinderColClustered = 92
xlCylinderColStacked = 93
xlCylinderColStacked100 = 94
xlCylinderBarClustered = 95
xlCylinderBarStacked = 96
xlCylinderBarStacked100 = 97
xlCylinderCol = 98
xlConeColClustered = 99
xlConeColStacked = 100
xlConeColStacked100 = 101
xlConeBarClustered = 102
xlConeBarStacked = 103
xlConeBarStacked100 = 104
xlConeCol = 105
xlPyramidColClustered = 106
xlPyramidColStacked = 107
xlPyramidColStacked100 = 108
xlPyramidBarClustered = 109
xlPyramidBarStacked = 110
xlPyramidBarStacked100 = 111
xlPyramidCol = 112
xl3DColumn = -4100
xlLine = 4
xl3DLine = -4101
xl3DPie = -4102
xlPie = 5
xlXYScatter = -4169
xl3DArea = -4098
xlArea = 1
xlDoughnut = -4120
xlRadar = -4151
XlChartType = c_int # enum

# values for enumeration 'XlTickLabelPosition'
xlTickLabelPositionHigh = -4127
xlTickLabelPositionLow = -4134
xlTickLabelPositionNextToAxis = 4
xlTickLabelPositionNone = -4142
XlTickLabelPosition = c_int # enum

# values for enumeration 'MsoAutoShapeType'
msoShapeMixed = -2
msoShapeRectangle = 1
msoShapeParallelogram = 2
msoShapeTrapezoid = 3
msoShapeDiamond = 4
msoShapeRoundedRectangle = 5
msoShapeOctagon = 6
msoShapeIsoscelesTriangle = 7
msoShapeRightTriangle = 8
msoShapeOval = 9
msoShapeHexagon = 10
msoShapeCross = 11
msoShapeRegularPentagon = 12
msoShapeCan = 13
msoShapeCube = 14
msoShapeBevel = 15
msoShapeFoldedCorner = 16
msoShapeSmileyFace = 17
msoShapeDonut = 18
msoShapeNoSymbol = 19
msoShapeBlockArc = 20
msoShapeHeart = 21
msoShapeLightningBolt = 22
msoShapeSun = 23
msoShapeMoon = 24
msoShapeArc = 25
msoShapeDoubleBracket = 26
msoShapeDoubleBrace = 27
msoShapePlaque = 28
msoShapeLeftBracket = 29
msoShapeRightBracket = 30
msoShapeLeftBrace = 31
msoShapeRightBrace = 32
msoShapeRightArrow = 33
msoShapeLeftArrow = 34
msoShapeUpArrow = 35
msoShapeDownArrow = 36
msoShapeLeftRightArrow = 37
msoShapeUpDownArrow = 38
msoShapeQuadArrow = 39
msoShapeLeftRightUpArrow = 40
msoShapeBentArrow = 41
msoShapeUTurnArrow = 42
msoShapeLeftUpArrow = 43
msoShapeBentUpArrow = 44
msoShapeCurvedRightArrow = 45
msoShapeCurvedLeftArrow = 46
msoShapeCurvedUpArrow = 47
msoShapeCurvedDownArrow = 48
msoShapeStripedRightArrow = 49
msoShapeNotchedRightArrow = 50
msoShapePentagon = 51
msoShapeChevron = 52
msoShapeRightArrowCallout = 53
msoShapeLeftArrowCallout = 54
msoShapeUpArrowCallout = 55
msoShapeDownArrowCallout = 56
msoShapeLeftRightArrowCallout = 57
msoShapeUpDownArrowCallout = 58
msoShapeQuadArrowCallout = 59
msoShapeCircularArrow = 60
msoShapeFlowchartProcess = 61
msoShapeFlowchartAlternateProcess = 62
msoShapeFlowchartDecision = 63
msoShapeFlowchartData = 64
msoShapeFlowchartPredefinedProcess = 65
msoShapeFlowchartInternalStorage = 66
msoShapeFlowchartDocument = 67
msoShapeFlowchartMultidocument = 68
msoShapeFlowchartTerminator = 69
msoShapeFlowchartPreparation = 70
msoShapeFlowchartManualInput = 71
msoShapeFlowchartManualOperation = 72
msoShapeFlowchartConnector = 73
msoShapeFlowchartOffpageConnector = 74
msoShapeFlowchartCard = 75
msoShapeFlowchartPunchedTape = 76
msoShapeFlowchartSummingJunction = 77
msoShapeFlowchartOr = 78
msoShapeFlowchartCollate = 79
msoShapeFlowchartSort = 80
msoShapeFlowchartExtract = 81
msoShapeFlowchartMerge = 82
msoShapeFlowchartStoredData = 83
msoShapeFlowchartDelay = 84
msoShapeFlowchartSequentialAccessStorage = 85
msoShapeFlowchartMagneticDisk = 86
msoShapeFlowchartDirectAccessStorage = 87
msoShapeFlowchartDisplay = 88
msoShapeExplosion1 = 89
msoShapeExplosion2 = 90
msoShape4pointStar = 91
msoShape5pointStar = 92
msoShape8pointStar = 93
msoShape16pointStar = 94
msoShape24pointStar = 95
msoShape32pointStar = 96
msoShapeUpRibbon = 97
msoShapeDownRibbon = 98
msoShapeCurvedUpRibbon = 99
msoShapeCurvedDownRibbon = 100
msoShapeVerticalScroll = 101
msoShapeHorizontalScroll = 102
msoShapeWave = 103
msoShapeDoubleWave = 104
msoShapeRectangularCallout = 105
msoShapeRoundedRectangularCallout = 106
msoShapeOvalCallout = 107
msoShapeCloudCallout = 108
msoShapeLineCallout1 = 109
msoShapeLineCallout2 = 110
msoShapeLineCallout3 = 111
msoShapeLineCallout4 = 112
msoShapeLineCallout1AccentBar = 113
msoShapeLineCallout2AccentBar = 114
msoShapeLineCallout3AccentBar = 115
msoShapeLineCallout4AccentBar = 116
msoShapeLineCallout1NoBorder = 117
msoShapeLineCallout2NoBorder = 118
msoShapeLineCallout3NoBorder = 119
msoShapeLineCallout4NoBorder = 120
msoShapeLineCallout1BorderandAccentBar = 121
msoShapeLineCallout2BorderandAccentBar = 122
msoShapeLineCallout3BorderandAccentBar = 123
msoShapeLineCallout4BorderandAccentBar = 124
msoShapeActionButtonCustom = 125
msoShapeActionButtonHome = 126
msoShapeActionButtonHelp = 127
msoShapeActionButtonInformation = 128
msoShapeActionButtonBackorPrevious = 129
msoShapeActionButtonForwardorNext = 130
msoShapeActionButtonBeginning = 131
msoShapeActionButtonEnd = 132
msoShapeActionButtonReturn = 133
msoShapeActionButtonDocument = 134
msoShapeActionButtonSound = 135
msoShapeActionButtonMovie = 136
msoShapeBalloon = 137
msoShapeNotPrimitive = 138
msoShapeFlowchartOfflineStorage = 139
msoShapeLeftRightRibbon = 140
msoShapeDiagonalStripe = 141
msoShapePie = 142
msoShapeNonIsoscelesTrapezoid = 143
msoShapeDecagon = 144
msoShapeHeptagon = 145
msoShapeDodecagon = 146
msoShape6pointStar = 147
msoShape7pointStar = 148
msoShape10pointStar = 149
msoShape12pointStar = 150
msoShapeRound1Rectangle = 151
msoShapeRound2SameRectangle = 152
msoShapeRound2DiagRectangle = 153
msoShapeSnipRoundRectangle = 154
msoShapeSnip1Rectangle = 155
msoShapeSnip2SameRectangle = 156
msoShapeSnip2DiagRectangle = 157
msoShapeFrame = 158
msoShapeHalfFrame = 159
msoShapeTear = 160
msoShapeChord = 161
msoShapeCorner = 162
msoShapeMathPlus = 163
msoShapeMathMinus = 164
msoShapeMathMultiply = 165
msoShapeMathDivide = 166
msoShapeMathEqual = 167
msoShapeMathNotEqual = 168
msoShapeCornerTabs = 169
msoShapeSquareTabs = 170
msoShapePlaqueTabs = 171
msoShapeGear6 = 172
msoShapeGear9 = 173
msoShapeFunnel = 174
msoShapePieWedge = 175
msoShapeLeftCircularArrow = 176
msoShapeLeftRightCircularArrow = 177
msoShapeSwooshArrow = 178
msoShapeCloud = 179
msoShapeChartX = 180
msoShapeChartStar = 181
msoShapeChartPlus = 182
msoShapeLineInverse = 183
MsoAutoShapeType = c_int # enum
class ILicAgent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'ILicAgent Interface'
    _iid_ = GUID('{00194002-D9C3-11D3-8D59-0050048384E3}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ILicAgent._methods_ = [
    COMMETHOD([dispid(1), helpstring('method Initialize')], HRESULT, 'Initialize',
              ( ['in'], c_ulong, 'dwBPC' ),
              ( ['in'], c_ulong, 'dwMode' ),
              ( ['in'], BSTR, 'bstrLicSource' ),
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwRetCode' )),
    COMMETHOD([dispid(3), helpstring('method GetFirstName')], HRESULT, 'GetFirstName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(4), helpstring('method SetFirstName')], HRESULT, 'SetFirstName',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(5), helpstring('method GetLastName')], HRESULT, 'GetLastName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(6), helpstring('method SetLastName')], HRESULT, 'SetLastName',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(7), helpstring('method GetOrgName')], HRESULT, 'GetOrgName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(8), helpstring('method SetOrgName')], HRESULT, 'SetOrgName',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(9), helpstring('method GetEmail')], HRESULT, 'GetEmail',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(10), helpstring('method SetEmail')], HRESULT, 'SetEmail',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(11), helpstring('method GetPhone')], HRESULT, 'GetPhone',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(12), helpstring('method SetPhone')], HRESULT, 'SetPhone',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(13), helpstring('method GetAddress1')], HRESULT, 'GetAddress1',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(14), helpstring('method SetAddress1')], HRESULT, 'SetAddress1',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(15), helpstring('method GetCity')], HRESULT, 'GetCity',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(16), helpstring('method SetCity')], HRESULT, 'SetCity',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(17), helpstring('method GetState')], HRESULT, 'GetState',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(18), helpstring('method SetState')], HRESULT, 'SetState',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(19), helpstring('method GetCountryCode')], HRESULT, 'GetCountryCode',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(20), helpstring('method SetCountryCode')], HRESULT, 'SetCountryCode',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(21), helpstring('method GetCountryDesc')], HRESULT, 'GetCountryDesc',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(22), helpstring('method SetCountryDesc')], HRESULT, 'SetCountryDesc',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(23), helpstring('method GetZip')], HRESULT, 'GetZip',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(24), helpstring('method SetZip')], HRESULT, 'SetZip',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(25), helpstring('method GetIsoLanguage')], HRESULT, 'GetIsoLanguage',
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwVal' )),
    COMMETHOD([dispid(26), helpstring('method SetIsoLanguage')], HRESULT, 'SetIsoLanguage',
              ( ['in'], c_ulong, 'dwNewVal' )),
    COMMETHOD([dispid(32), helpstring('method GetMSUpdate')], HRESULT, 'GetMSUpdate',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(33), helpstring('method SetMSUpdate')], HRESULT, 'SetMSUpdate',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(34), helpstring('method GetMSOffer')], HRESULT, 'GetMSOffer',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(35), helpstring('method SetMSOffer')], HRESULT, 'SetMSOffer',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(36), helpstring('method GetOtherOffer')], HRESULT, 'GetOtherOffer',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(37), helpstring('method SetOtherOffer')], HRESULT, 'SetOtherOffer',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(38), helpstring('method GetAddress2')], HRESULT, 'GetAddress2',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(39), helpstring('method SetAddress2')], HRESULT, 'SetAddress2',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(40), helpstring('method CheckSystemClock')], HRESULT, 'CheckSystemClock',
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwRetCode' )),
    COMMETHOD([dispid(41), helpstring('method GetExistingExpiryDate')], HRESULT, 'GetExistingExpiryDate',
              ( ['retval', 'out'], POINTER(c_double), 'pDateVal' )),
    COMMETHOD([dispid(42), helpstring('method GetNewExpiryDate')], HRESULT, 'GetNewExpiryDate',
              ( ['retval', 'out'], POINTER(c_double), 'pDateVal' )),
    COMMETHOD([dispid(43), helpstring('method GetBillingFirstName')], HRESULT, 'GetBillingFirstName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(44), helpstring('method SetBillingFirstName')], HRESULT, 'SetBillingFirstName',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(45), helpstring('method GetBillingLastName')], HRESULT, 'GetBillingLastName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(46), helpstring('method SetBillingLastName')], HRESULT, 'SetBillingLastName',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(47), helpstring('method GetBillingPhone')], HRESULT, 'GetBillingPhone',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(48), helpstring('method SetBillingPhone')], HRESULT, 'SetBillingPhone',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(49), helpstring('method GetBillingAddress1')], HRESULT, 'GetBillingAddress1',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(50), helpstring('method SetBillingAddress1')], HRESULT, 'SetBillingAddress1',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(51), helpstring('method GetBillingAddress2')], HRESULT, 'GetBillingAddress2',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(52), helpstring('method SetBillingAddress2')], HRESULT, 'SetBillingAddress2',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(53), helpstring('method GetBillingCity')], HRESULT, 'GetBillingCity',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(54), helpstring('method SetBillingCity')], HRESULT, 'SetBillingCity',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(55), helpstring('method GetBillingState')], HRESULT, 'GetBillingState',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(56), helpstring('method SetBillingState')], HRESULT, 'SetBillingState',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(57), helpstring('method GetBillingCountryCode')], HRESULT, 'GetBillingCountryCode',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(58), helpstring('method SetBillingCountryCode')], HRESULT, 'SetBillingCountryCode',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(59), helpstring('method GetBillingZip')], HRESULT, 'GetBillingZip',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(60), helpstring('method SetBillingZip')], HRESULT, 'SetBillingZip',
              ( ['in'], BSTR, 'bstrNewVal' )),
    COMMETHOD([dispid(61), helpstring('method SaveBillingInfo')], HRESULT, 'SaveBillingInfo',
              ( ['in'], c_int, 'bSave' ),
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwRetVal' )),
    COMMETHOD([dispid(64), helpstring('method IsCCRenewalCountry')], HRESULT, 'IsCCRenewalCountry',
              ( ['in'], BSTR, 'bstrCountryCode' ),
              ( ['retval', 'out'], POINTER(c_int), 'pbRetVal' )),
    COMMETHOD([dispid(65), helpstring('method GetVATLabel')], HRESULT, 'GetVATLabel',
              ( ['in'], BSTR, 'bstrCountryCode' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVATLabel' )),
    COMMETHOD([dispid(66), helpstring('method GetCCRenewalExpiryDate')], HRESULT, 'GetCCRenewalExpiryDate',
              ( ['retval', 'out'], POINTER(c_double), 'pDateVal' )),
    COMMETHOD([dispid(67), helpstring('method SetVATNumber')], HRESULT, 'SetVATNumber',
              ( ['in'], BSTR, 'bstrVATNumber' )),
    COMMETHOD([dispid(68), helpstring('method SetCreditCardType')], HRESULT, 'SetCreditCardType',
              ( ['in'], BSTR, 'bstrCCCode' )),
    COMMETHOD([dispid(69), helpstring('method SetCreditCardNumber')], HRESULT, 'SetCreditCardNumber',
              ( ['in'], BSTR, 'bstrCCNumber' )),
    COMMETHOD([dispid(70), helpstring('method SetCreditCardExpiryYear')], HRESULT, 'SetCreditCardExpiryYear',
              ( ['in'], c_ulong, 'dwCCYear' )),
    COMMETHOD([dispid(71), helpstring('method SetCreditCardExpiryMonth')], HRESULT, 'SetCreditCardExpiryMonth',
              ( ['in'], c_ulong, 'dwCCMonth' )),
    COMMETHOD([dispid(72), helpstring('method GetCreditCardCount')], HRESULT, 'GetCreditCardCount',
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwCount' )),
    COMMETHOD([dispid(73), helpstring('method GetCreditCardCode')], HRESULT, 'GetCreditCardCode',
              ( ['in'], c_ulong, 'dwIndex' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCode' )),
    COMMETHOD([dispid(74), helpstring('method GetCreditCardName')], HRESULT, 'GetCreditCardName',
              ( ['in'], c_ulong, 'dwIndex' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(75), helpstring('method GetVATNumber')], HRESULT, 'GetVATNumber',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVATNumber' )),
    COMMETHOD([dispid(76), helpstring('method GetCreditCardType')], HRESULT, 'GetCreditCardType',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCCCode' )),
    COMMETHOD([dispid(77), helpstring('method GetCreditCardNumber')], HRESULT, 'GetCreditCardNumber',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCCNumber' )),
    COMMETHOD([dispid(78), helpstring('method GetCreditCardExpiryYear')], HRESULT, 'GetCreditCardExpiryYear',
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwCCYear' )),
    COMMETHOD([dispid(79), helpstring('method GetCreditCardExpiryMonth')], HRESULT, 'GetCreditCardExpiryMonth',
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwCCMonth' )),
    COMMETHOD([dispid(80), helpstring('method GetDisconnectOption')], HRESULT, 'GetDisconnectOption',
              ( ['retval', 'out'], POINTER(c_int), 'pbRetVal' )),
    COMMETHOD([dispid(81), helpstring('method SetDisconnectOption')], HRESULT, 'SetDisconnectOption',
              ( ['in'], c_int, 'bNewVal' )),
    COMMETHOD([dispid(82), helpstring('method AsyncProcessHandshakeRequest')], HRESULT, 'AsyncProcessHandshakeRequest',
              ( ['in'], c_int, 'bReviseCustInfo' )),
    COMMETHOD([dispid(83), helpstring('method AsyncProcessNewLicenseRequest')], HRESULT, 'AsyncProcessNewLicenseRequest'),
    COMMETHOD([dispid(84), helpstring('method AsyncProcessReissueLicenseRequest')], HRESULT, 'AsyncProcessReissueLicenseRequest'),
    COMMETHOD([dispid(85), helpstring('method AsyncProcessRetailRenewalLicenseRequest')], HRESULT, 'AsyncProcessRetailRenewalLicenseRequest'),
    COMMETHOD([dispid(86), helpstring('method AsyncProcessReviseCustInfoRequest')], HRESULT, 'AsyncProcessReviseCustInfoRequest'),
    COMMETHOD([dispid(87), helpstring('method AsyncProcessCCRenewalPriceRequest')], HRESULT, 'AsyncProcessCCRenewalPriceRequest'),
    COMMETHOD([dispid(88), helpstring('method AsyncProcessCCRenewalLicenseRequest')], HRESULT, 'AsyncProcessCCRenewalLicenseRequest'),
    COMMETHOD([dispid(90), helpstring('method GetAsyncProcessReturnCode')], HRESULT, 'GetAsyncProcessReturnCode',
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwRetCode' )),
    COMMETHOD([dispid(91), helpstring('method IsUpgradeAvailable')], HRESULT, 'IsUpgradeAvailable',
              ( ['retval', 'out'], POINTER(c_int), 'pbUpgradeAvailable' )),
    COMMETHOD([dispid(92), helpstring('method WantUpgrade')], HRESULT, 'WantUpgrade',
              ( ['in'], c_int, 'bWantUpgrade' )),
    COMMETHOD([dispid(93), helpstring('method AsyncProcessDroppedLicenseRequest')], HRESULT, 'AsyncProcessDroppedLicenseRequest'),
    COMMETHOD([dispid(94), helpstring('method GenerateInstallationId')], HRESULT, 'GenerateInstallationId',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(95), helpstring('method DepositConfirmationId')], HRESULT, 'DepositConfirmationId',
              ( ['in'], BSTR, 'bstrVal' ),
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwRetCode' )),
    COMMETHOD([dispid(96), helpstring('method VerifyCheckDigits')], HRESULT, 'VerifyCheckDigits',
              ( ['in'], BSTR, 'bstrCIDIID' ),
              ( ['retval', 'out'], POINTER(c_int), 'pbValue' )),
    COMMETHOD([dispid(97), helpstring('method GetCurrentExpiryDate')], HRESULT, 'GetCurrentExpiryDate',
              ( ['retval', 'out'], POINTER(c_double), 'pDateVal' )),
    COMMETHOD([dispid(98), helpstring('method CancelAsyncProcessRequest')], HRESULT, 'CancelAsyncProcessRequest',
              ( ['in'], c_int, 'bIsLicenseRequest' )),
    COMMETHOD([dispid(100), helpstring('method GetCurrencyDescription')], HRESULT, 'GetCurrencyDescription',
              ( ['in'], c_ulong, 'dwCurrencyIndex' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(101), helpstring('method GetPriceItemCount')], HRESULT, 'GetPriceItemCount',
              ( ['retval', 'out'], POINTER(c_ulong), 'pdwCount' )),
    COMMETHOD([dispid(102), helpstring('method GetPriceItemLabel')], HRESULT, 'GetPriceItemLabel',
              ( ['in'], c_ulong, 'dwIndex' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(103), helpstring('method GetPriceItemValue')], HRESULT, 'GetPriceItemValue',
              ( ['in'], c_ulong, 'dwCurrencyIndex' ),
              ( ['in'], c_ulong, 'dwIndex' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrVal' )),
    COMMETHOD([dispid(104), helpstring('method GetInvoiceText')], HRESULT, 'GetInvoiceText',
              ( ['retval', 'out'], POINTER(BSTR), 'pNewVal' )),
    COMMETHOD([dispid(105), helpstring('method GetBackendErrorMsg')], HRESULT, 'GetBackendErrorMsg',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrErrMsg' )),
    COMMETHOD([dispid(106), helpstring('method GetCurrencyOption')], HRESULT, 'GetCurrencyOption',
              ( ['retval', 'out'], POINTER(c_ulong), 'dwCurrencyOption' )),
    COMMETHOD([dispid(107), helpstring('method SetCurrencyOption')], HRESULT, 'SetCurrencyOption',
              ( ['in'], c_ulong, 'dwCurrencyOption' )),
    COMMETHOD([dispid(108), helpstring('method GetEndOfLifeHtmlText')], HRESULT, 'GetEndOfLifeHtmlText',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrHtmlText' )),
    COMMETHOD([dispid(109), helpstring('method DisplaySSLCert')], HRESULT, 'DisplaySSLCert',
              ( ['retval', 'out'], POINTER(c_ulong), 'dwRetCode' )),
]
################################################################
## code template for ILicAgent implementation
##class ILicAgent_Impl(object):
##    def GetAsyncProcessReturnCode(self):
##        'method GetAsyncProcessReturnCode'
##        #return pdwRetCode
##
##    def GetPriceItemLabel(self, dwIndex):
##        'method GetPriceItemLabel'
##        #return pbstrVal
##
##    def SetBillingState(self, bstrNewVal):
##        'method SetBillingState'
##        #return 
##
##    def GetMSUpdate(self):
##        'method GetMSUpdate'
##        #return pbstrVal
##
##    def DisplaySSLCert(self):
##        'method DisplaySSLCert'
##        #return dwRetCode
##
##    def SetBillingFirstName(self, bstrNewVal):
##        'method SetBillingFirstName'
##        #return 
##
##    def GetVATNumber(self):
##        'method GetVATNumber'
##        #return pbstrVATNumber
##
##    def AsyncProcessDroppedLicenseRequest(self):
##        'method AsyncProcessDroppedLicenseRequest'
##        #return 
##
##    def GetPhone(self):
##        'method GetPhone'
##        #return pbstrVal
##
##    def SetBillingAddress1(self, bstrNewVal):
##        'method SetBillingAddress1'
##        #return 
##
##    def SetBillingAddress2(self, bstrNewVal):
##        'method SetBillingAddress2'
##        #return 
##
##    def GetPriceItemValue(self, dwCurrencyIndex, dwIndex):
##        'method GetPriceItemValue'
##        #return pbstrVal
##
##    def SetBillingCountryCode(self, bstrNewVal):
##        'method SetBillingCountryCode'
##        #return 
##
##    def AsyncProcessCCRenewalPriceRequest(self):
##        'method AsyncProcessCCRenewalPriceRequest'
##        #return 
##
##    def GetCurrencyDescription(self, dwCurrencyIndex):
##        'method GetCurrencyDescription'
##        #return pbstrVal
##
##    def SetBillingZip(self, bstrNewVal):
##        'method SetBillingZip'
##        #return 
##
##    def SetCreditCardExpiryMonth(self, dwCCMonth):
##        'method SetCreditCardExpiryMonth'
##        #return 
##
##    def GetBillingState(self):
##        'method GetBillingState'
##        #return pbstrVal
##
##    def AsyncProcessReviseCustInfoRequest(self):
##        'method AsyncProcessReviseCustInfoRequest'
##        #return 
##
##    def SetVATNumber(self, bstrVATNumber):
##        'method SetVATNumber'
##        #return 
##
##    def IsCCRenewalCountry(self, bstrCountryCode):
##        'method IsCCRenewalCountry'
##        #return pbRetVal
##
##    def GetCreditCardName(self, dwIndex):
##        'method GetCreditCardName'
##        #return pbstrName
##
##    def GetEmail(self):
##        'method GetEmail'
##        #return pbstrVal
##
##    def GetExistingExpiryDate(self):
##        'method GetExistingExpiryDate'
##        #return pDateVal
##
##    def SetIsoLanguage(self, dwNewVal):
##        'method SetIsoLanguage'
##        #return 
##
##    def GetNewExpiryDate(self):
##        'method GetNewExpiryDate'
##        #return pDateVal
##
##    def GetVATLabel(self, bstrCountryCode):
##        'method GetVATLabel'
##        #return pbstrVATLabel
##
##    def CancelAsyncProcessRequest(self, bIsLicenseRequest):
##        'method CancelAsyncProcessRequest'
##        #return 
##
##    def SetMSUpdate(self, bstrNewVal):
##        'method SetMSUpdate'
##        #return 
##
##    def SetAddress2(self, bstrNewVal):
##        'method SetAddress2'
##        #return 
##
##    def SetAddress1(self, bstrNewVal):
##        'method SetAddress1'
##        #return 
##
##    def AsyncProcessHandshakeRequest(self, bReviseCustInfo):
##        'method AsyncProcessHandshakeRequest'
##        #return 
##
##    def CheckSystemClock(self):
##        'method CheckSystemClock'
##        #return pdwRetCode
##
##    def GetCreditCardCode(self, dwIndex):
##        'method GetCreditCardCode'
##        #return pbstrCode
##
##    def GetCountryCode(self):
##        'method GetCountryCode'
##        #return pbstrVal
##
##    def GetCCRenewalExpiryDate(self):
##        'method GetCCRenewalExpiryDate'
##        #return pDateVal
##
##    def SetBillingCity(self, bstrNewVal):
##        'method SetBillingCity'
##        #return 
##
##    def IsUpgradeAvailable(self):
##        'method IsUpgradeAvailable'
##        #return pbUpgradeAvailable
##
##    def GetCity(self):
##        'method GetCity'
##        #return pbstrVal
##
##    def Initialize(self, dwBPC, dwMode, bstrLicSource):
##        'method Initialize'
##        #return pdwRetCode
##
##    def GetBillingCity(self):
##        'method GetBillingCity'
##        #return pbstrVal
##
##    def GetCurrentExpiryDate(self):
##        'method GetCurrentExpiryDate'
##        #return pDateVal
##
##    def SetCity(self, bstrNewVal):
##        'method SetCity'
##        #return 
##
##    def AsyncProcessReissueLicenseRequest(self):
##        'method AsyncProcessReissueLicenseRequest'
##        #return 
##
##    def AsyncProcessCCRenewalLicenseRequest(self):
##        'method AsyncProcessCCRenewalLicenseRequest'
##        #return 
##
##    def SetLastName(self, bstrNewVal):
##        'method SetLastName'
##        #return 
##
##    def GetCreditCardCount(self):
##        'method GetCreditCardCount'
##        #return pdwCount
##
##    def GetFirstName(self):
##        'method GetFirstName'
##        #return pbstrVal
##
##    def GetCreditCardType(self):
##        'method GetCreditCardType'
##        #return pbstrCCCode
##
##    def SetState(self, bstrNewVal):
##        'method SetState'
##        #return 
##
##    def GetEndOfLifeHtmlText(self):
##        'method GetEndOfLifeHtmlText'
##        #return pbstrHtmlText
##
##    def SetCurrencyOption(self, dwCurrencyOption):
##        'method SetCurrencyOption'
##        #return 
##
##    def GetCreditCardExpiryMonth(self):
##        'method GetCreditCardExpiryMonth'
##        #return pdwCCMonth
##
##    def SetPhone(self, bstrNewVal):
##        'method SetPhone'
##        #return 
##
##    def SetOrgName(self, bstrNewVal):
##        'method SetOrgName'
##        #return 
##
##    def SetMSOffer(self, bstrNewVal):
##        'method SetMSOffer'
##        #return 
##
##    def AsyncProcessRetailRenewalLicenseRequest(self):
##        'method AsyncProcessRetailRenewalLicenseRequest'
##        #return 
##
##    def SetEmail(self, bstrNewVal):
##        'method SetEmail'
##        #return 
##
##    def SetZip(self, bstrNewVal):
##        'method SetZip'
##        #return 
##
##    def GetOrgName(self):
##        'method GetOrgName'
##        #return pbstrVal
##
##    def GetIsoLanguage(self):
##        'method GetIsoLanguage'
##        #return pdwVal
##
##    def SetCountryDesc(self, bstrNewVal):
##        'method SetCountryDesc'
##        #return 
##
##    def GetCreditCardExpiryYear(self):
##        'method GetCreditCardExpiryYear'
##        #return pdwCCYear
##
##    def SetFirstName(self, bstrNewVal):
##        'method SetFirstName'
##        #return 
##
##    def AsyncProcessNewLicenseRequest(self):
##        'method AsyncProcessNewLicenseRequest'
##        #return 
##
##    def GetBillingZip(self):
##        'method GetBillingZip'
##        #return pbstrVal
##
##    def SaveBillingInfo(self, bSave):
##        'method SaveBillingInfo'
##        #return pdwRetVal
##
##    def SetCreditCardType(self, bstrCCCode):
##        'method SetCreditCardType'
##        #return 
##
##    def GetAddress2(self):
##        'method GetAddress2'
##        #return pbstrVal
##
##    def GetAddress1(self):
##        'method GetAddress1'
##        #return pbstrVal
##
##    def SetOtherOffer(self, bstrNewVal):
##        'method SetOtherOffer'
##        #return 
##
##    def GetLastName(self):
##        'method GetLastName'
##        #return pbstrVal
##
##    def GetPriceItemCount(self):
##        'method GetPriceItemCount'
##        #return pdwCount
##
##    def GetBillingAddress1(self):
##        'method GetBillingAddress1'
##        #return pbstrVal
##
##    def GetBillingAddress2(self):
##        'method GetBillingAddress2'
##        #return pbstrVal
##
##    def VerifyCheckDigits(self, bstrCIDIID):
##        'method VerifyCheckDigits'
##        #return pbValue
##
##    def GetDisconnectOption(self):
##        'method GetDisconnectOption'
##        #return pbRetVal
##
##    def GetCurrencyOption(self):
##        'method GetCurrencyOption'
##        #return dwCurrencyOption
##
##    def GetBillingPhone(self):
##        'method GetBillingPhone'
##        #return pbstrVal
##
##    def WantUpgrade(self, bWantUpgrade):
##        'method WantUpgrade'
##        #return 
##
##    def SetCountryCode(self, bstrNewVal):
##        'method SetCountryCode'
##        #return 
##
##    def GetCreditCardNumber(self):
##        'method GetCreditCardNumber'
##        #return pbstrCCNumber
##
##    def SetCreditCardExpiryYear(self, dwCCYear):
##        'method SetCreditCardExpiryYear'
##        #return 
##
##    def DepositConfirmationId(self, bstrVal):
##        'method DepositConfirmationId'
##        #return pdwRetCode
##
##    def SetDisconnectOption(self, bNewVal):
##        'method SetDisconnectOption'
##        #return 
##
##    def GetBillingFirstName(self):
##        'method GetBillingFirstName'
##        #return pbstrVal
##
##    def GetState(self):
##        'method GetState'
##        #return pbstrVal
##
##    def SetBillingPhone(self, bstrNewVal):
##        'method SetBillingPhone'
##        #return 
##
##    def GetBillingCountryCode(self):
##        'method GetBillingCountryCode'
##        #return pbstrVal
##
##    def GetCountryDesc(self):
##        'method GetCountryDesc'
##        #return pbstrVal
##
##    def GetBackendErrorMsg(self):
##        'method GetBackendErrorMsg'
##        #return pbstrErrMsg
##
##    def GetBillingLastName(self):
##        'method GetBillingLastName'
##        #return pbstrVal
##
##    def GenerateInstallationId(self):
##        'method GenerateInstallationId'
##        #return pbstrVal
##
##    def SetBillingLastName(self, bstrNewVal):
##        'method SetBillingLastName'
##        #return 
##
##    def GetOtherOffer(self):
##        'method GetOtherOffer'
##        #return pbstrVal
##
##    def GetMSOffer(self):
##        'method GetMSOffer'
##        #return pbstrVal
##
##    def GetInvoiceText(self):
##        'method GetInvoiceText'
##        #return pNewVal
##
##    def GetZip(self):
##        'method GetZip'
##        #return pbstrVal
##
##    def SetCreditCardNumber(self, bstrCCNumber):
##        'method SetCreditCardNumber'
##        #return 
##

class ConnectorFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0313-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoTriState'
msoTrue = -1
msoFalse = 0
msoCTrue = 1
msoTriStateToggle = -3
msoTriStateMixed = -2
MsoTriState = c_int # enum

# values for enumeration 'MsoConnectorType'
msoConnectorTypeMixed = -2
msoConnectorStraight = 1
msoConnectorElbow = 2
msoConnectorCurve = 3
MsoConnectorType = c_int # enum
ConnectorFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'BeginConnect',
              ( ['in'], POINTER(Shape), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([dispid(11)], HRESULT, 'BeginDisconnect'),
    COMMETHOD([dispid(12)], HRESULT, 'EndConnect',
              ( ['in'], POINTER(Shape), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([dispid(13)], HRESULT, 'EndDisconnect'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BeginConnected',
              ( ['retval', 'out'], POINTER(MsoTriState), 'BeginConnected' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BeginConnectedShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'BeginConnectedShape' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BeginConnectionSite',
              ( ['retval', 'out'], POINTER(c_int), 'BeginConnectionSite' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'EndConnected',
              ( ['retval', 'out'], POINTER(MsoTriState), 'EndConnected' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'EndConnectedShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'EndConnectedShape' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EndConnectionSite',
              ( ['retval', 'out'], POINTER(c_int), 'EndConnectionSite' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoConnectorType), 'Type' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoConnectorType, 'Type' )),
]
################################################################
## code template for ConnectorFormat implementation
##class ConnectorFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EndConnectionSite(self):
##        '-no docstring-'
##        #return EndConnectionSite
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def BeginConnectionSite(self):
##        '-no docstring-'
##        #return BeginConnectionSite
##
##    def BeginDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def EndConnectedShape(self):
##        '-no docstring-'
##        #return EndConnectedShape
##
##    @property
##    def BeginConnectedShape(self):
##        '-no docstring-'
##        #return BeginConnectedShape
##
##    def EndDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    def BeginConnect(self, ConnectedShape, ConnectionSite):
##        '-no docstring-'
##        #return 
##
##    @property
##    def EndConnected(self):
##        '-no docstring-'
##        #return EndConnected
##
##    def EndConnect(self, ConnectedShape, ConnectionSite):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BeginConnected(self):
##        '-no docstring-'
##        #return BeginConnected
##

class CustomXMLNodes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB03-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CustomXMLNode(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB04-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CustomXMLNodes._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppNode' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for CustomXMLNodes implementation
##class CustomXMLNodes_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppNode
##


# values for enumeration 'XlChartOrientation'
xlDownward = -4170
xlHorizontal = -4128
xlUpward = -4171
xlVertical = -4166
XlChartOrientation = c_int # enum
class TextFrame2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0398-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoTextOrientation'
msoTextOrientationMixed = -2
msoTextOrientationHorizontal = 1
msoTextOrientationUpward = 2
msoTextOrientationDownward = 3
msoTextOrientationVerticalFarEast = 4
msoTextOrientationVertical = 5
msoTextOrientationHorizontalRotatedFarEast = 6
MsoTextOrientation = c_int # enum

# values for enumeration 'MsoPathFormat'
msoPathTypeMixed = -2
msoPathTypeNone = 0
msoPathType1 = 1
msoPathType2 = 2
msoPathType3 = 3
msoPathType4 = 4
MsoPathFormat = c_int # enum

# values for enumeration 'MsoWarpFormat'
msoWarpFormatMixed = -2
msoWarpFormat1 = 0
msoWarpFormat2 = 1
msoWarpFormat3 = 2
msoWarpFormat4 = 3
msoWarpFormat5 = 4
msoWarpFormat6 = 5
msoWarpFormat7 = 6
msoWarpFormat8 = 7
msoWarpFormat9 = 8
msoWarpFormat10 = 9
msoWarpFormat11 = 10
msoWarpFormat12 = 11
msoWarpFormat13 = 12
msoWarpFormat14 = 13
msoWarpFormat15 = 14
msoWarpFormat16 = 15
msoWarpFormat17 = 16
msoWarpFormat18 = 17
msoWarpFormat19 = 18
msoWarpFormat20 = 19
msoWarpFormat21 = 20
msoWarpFormat22 = 21
msoWarpFormat23 = 22
msoWarpFormat24 = 23
msoWarpFormat25 = 24
msoWarpFormat26 = 25
msoWarpFormat27 = 26
msoWarpFormat28 = 27
msoWarpFormat29 = 28
msoWarpFormat30 = 29
msoWarpFormat31 = 30
msoWarpFormat32 = 31
msoWarpFormat33 = 32
msoWarpFormat34 = 33
msoWarpFormat35 = 34
msoWarpFormat36 = 35
msoWarpFormat37 = 36
MsoWarpFormat = c_int # enum

# values for enumeration 'MsoPresetTextEffect'
msoTextEffectMixed = -2
msoTextEffect1 = 0
msoTextEffect2 = 1
msoTextEffect3 = 2
msoTextEffect4 = 3
msoTextEffect5 = 4
msoTextEffect6 = 5
msoTextEffect7 = 6
msoTextEffect8 = 7
msoTextEffect9 = 8
msoTextEffect10 = 9
msoTextEffect11 = 10
msoTextEffect12 = 11
msoTextEffect13 = 12
msoTextEffect14 = 13
msoTextEffect15 = 14
msoTextEffect16 = 15
msoTextEffect17 = 16
msoTextEffect18 = 17
msoTextEffect19 = 18
msoTextEffect20 = 19
msoTextEffect21 = 20
msoTextEffect22 = 21
msoTextEffect23 = 22
msoTextEffect24 = 23
msoTextEffect25 = 24
msoTextEffect26 = 25
msoTextEffect27 = 26
msoTextEffect28 = 27
msoTextEffect29 = 28
msoTextEffect30 = 29
MsoPresetTextEffect = c_int # enum

# values for enumeration 'MsoAutoSize'
msoAutoSizeMixed = -2
msoAutoSizeNone = 0
msoAutoSizeShapeToFitText = 1
msoAutoSizeTextToFitShape = 2
MsoAutoSize = c_int # enum
class ThreeDFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0321-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class TextRange2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0397-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Ruler2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03C1-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TextFrame2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'MarginBottom',
              ( ['retval', 'out'], POINTER(c_float), 'MarginBottom' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'MarginBottom',
              ( ['in'], c_float, 'MarginBottom' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'MarginLeft',
              ( ['retval', 'out'], POINTER(c_float), 'MarginLeft' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'MarginLeft',
              ( ['in'], c_float, 'MarginLeft' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'MarginRight',
              ( ['retval', 'out'], POINTER(c_float), 'MarginRight' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'MarginRight',
              ( ['in'], c_float, 'MarginRight' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'MarginTop',
              ( ['retval', 'out'], POINTER(c_float), 'MarginTop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'MarginTop',
              ( ['in'], c_float, 'MarginTop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(MsoTextOrientation), 'Orientation' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Orientation',
              ( ['in'], MsoTextOrientation, 'Orientation' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'HorizontalAnchor',
              ( ['retval', 'out'], POINTER(MsoHorizontalAnchor), 'HorizontalAnchor' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'HorizontalAnchor',
              ( ['in'], MsoHorizontalAnchor, 'HorizontalAnchor' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'VerticalAnchor',
              ( ['retval', 'out'], POINTER(MsoVerticalAnchor), 'VerticalAnchor' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'VerticalAnchor',
              ( ['in'], MsoVerticalAnchor, 'VerticalAnchor' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PathFormat',
              ( ['retval', 'out'], POINTER(MsoPathFormat), 'PathFormat' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PathFormat',
              ( ['in'], MsoPathFormat, 'PathFormat' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'WarpFormat',
              ( ['retval', 'out'], POINTER(MsoWarpFormat), 'WarpFormat' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'WarpFormat',
              ( ['in'], MsoWarpFormat, 'WarpFormat' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'WordArtformat',
              ( ['retval', 'out'], POINTER(MsoPresetTextEffect), 'WordArtformat' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'WordArtformat',
              ( ['in'], MsoPresetTextEffect, 'WordArtformat' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'WordWrap',
              ( ['retval', 'out'], POINTER(MsoTriState), 'WordWrap' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], MsoTriState, 'WordWrap' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(MsoAutoSize), 'AutoSize' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'AutoSize',
              ( ['in'], MsoAutoSize, 'AutoSize' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'ThreeD' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'HasText',
              ( ['retval', 'out'], POINTER(MsoTriState), 'pHasText' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'TextRange',
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Range' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Column',
              ( ['retval', 'out'], POINTER(POINTER(TextColumn2)), 'Column' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Ruler',
              ( ['retval', 'out'], POINTER(POINTER(Ruler2)), 'Ruler' )),
    COMMETHOD([dispid(117)], HRESULT, 'DeleteText'),
]
################################################################
## code template for TextFrame2 implementation
##class TextFrame2_Impl(object):
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return Column
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginRight
##    def _set(self, MarginRight):
##        '-no docstring-'
##    MarginRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginBottom
##    def _set(self, MarginBottom):
##        '-no docstring-'
##    MarginBottom = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextRange(self):
##        '-no docstring-'
##        #return Range
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Ruler(self):
##        '-no docstring-'
##        #return Ruler
##
##    def DeleteText(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return WordArtformat
##    def _set(self, WordArtformat):
##        '-no docstring-'
##    WordArtformat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ThreeD
##
##    def _get(self):
##        '-no docstring-'
##        #return Orientation
##    def _set(self, Orientation):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordWrap
##    def _set(self, WordWrap):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoSize
##    def _set(self, AutoSize):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return VerticalAnchor
##    def _set(self, VerticalAnchor):
##        '-no docstring-'
##    VerticalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PathFormat
##    def _set(self, PathFormat):
##        '-no docstring-'
##    PathFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizontalAnchor
##    def _set(self, HorizontalAnchor):
##        '-no docstring-'
##    HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginTop
##    def _set(self, MarginTop):
##        '-no docstring-'
##    MarginTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WarpFormat
##    def _set(self, WarpFormat):
##        '-no docstring-'
##    WarpFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginLeft
##    def _set(self, MarginLeft):
##        '-no docstring-'
##    MarginLeft = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasText(self):
##        '-no docstring-'
##        #return pHasText
##

class SignatureSet(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0410-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Signature(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0411-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoSignatureSubset'
msoSignatureSubsetSignaturesAllSigs = 0
msoSignatureSubsetSignaturesNonVisible = 1
msoSignatureSubsetSignatureLines = 2
msoSignatureSubsetSignatureLinesSigned = 3
msoSignatureSubsetSignatureLinesUnsigned = 4
msoSignatureSubsetAll = 5
MsoSignatureSubset = c_int # enum
SignatureSet._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcSig' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'iSig' ),
              ( ['retval', 'out'], POINTER(POINTER(Signature)), 'ppidisp' )),
    COMMETHOD([dispid(1610809347), 'hidden'], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(Signature)), 'ppidisp' )),
    COMMETHOD([dispid(1610809348), 'hidden'], HRESULT, 'Commit'),
    COMMETHOD([dispid(1610809349), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809350)], HRESULT, 'AddNonVisibleSignature',
              ( ['in', 'optional'], VARIANT, 'varSigProv' ),
              ( ['retval', 'out'], POINTER(POINTER(Signature)), 'ppidisp' )),
    COMMETHOD([dispid(1610809351), 'propget'], HRESULT, 'CanAddSignatureLine',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfCanAddSigLine' )),
    COMMETHOD([dispid(1610809352)], HRESULT, 'AddSignatureLine',
              ( ['in', 'optional'], VARIANT, 'varSigProv' ),
              ( ['retval', 'out'], POINTER(POINTER(Signature)), 'ppidisp' )),
    COMMETHOD([dispid(1610809353), 'propget'], HRESULT, 'Subset',
              ( ['retval', 'out'], POINTER(MsoSignatureSubset), 'psubset' )),
    COMMETHOD([dispid(1610809353), 'propput'], HRESULT, 'Subset',
              ( ['in'], MsoSignatureSubset, 'psubset' )),
    COMMETHOD([dispid(1610809355), 'propput'], HRESULT, 'ShowSignaturesPane',
              ( ['in'], VARIANT_BOOL, 'rhs' )),
]
################################################################
## code template for SignatureSet implementation
##class SignatureSet_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return psubset
##    def _set(self, psubset):
##        '-no docstring-'
##    Subset = property(_get, _set, doc = _set.__doc__)
##
##    def AddSignatureLine(self, varSigProv):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def CanAddSignatureLine(self):
##        '-no docstring-'
##        #return pvarfCanAddSigLine
##
##    def _set(self, rhs):
##        '-no docstring-'
##    ShowSignaturesPane = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Add(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Item(self, iSig):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcSig
##
##    def AddNonVisibleSignature(self, varSigProv):
##        '-no docstring-'
##        #return ppidisp
##
##    def Commit(self):
##        '-no docstring-'
##        #return 
##

class CustomTaskPane(CoClass):
    _reg_clsid_ = GUID('{C5771BE5-A188-466B-AB31-00A6A32B1B1C}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
class _CustomTaskPane(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C033B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class _CustomTaskPaneEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C033C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CustomTaskPane._com_interfaces_ = [_CustomTaskPane]
CustomTaskPane._outgoing_interfaces_ = [_CustomTaskPaneEvents]

class Assistant(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0322-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoWizardActType'
msoWizardActInactive = 0
msoWizardActActive = 1
msoWizardActSuspend = 2
msoWizardActResume = 3
MsoWizardActType = c_int # enum
class Balloon(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0324-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoBalloonErrorType'
msoBalloonErrorNone = 0
msoBalloonErrorOther = 1
msoBalloonErrorTooBig = 2
msoBalloonErrorOutOfMemory = 3
msoBalloonErrorBadPictureRef = 4
msoBalloonErrorBadReference = 5
msoBalloonErrorButtonlessModal = 6
msoBalloonErrorButtonModeless = 7
msoBalloonErrorBadCharacter = 8
msoBalloonErrorCOMFailure = 9
msoBalloonErrorCharNotTopmostForModal = 10
msoBalloonErrorTooManyControls = 11
MsoBalloonErrorType = c_int # enum

# values for enumeration 'MsoAnimationType'
msoAnimationIdle = 1
msoAnimationGreeting = 2
msoAnimationGoodbye = 3
msoAnimationBeginSpeaking = 4
msoAnimationRestPose = 5
msoAnimationCharacterSuccessMajor = 6
msoAnimationGetAttentionMajor = 11
msoAnimationGetAttentionMinor = 12
msoAnimationSearching = 13
msoAnimationPrinting = 18
msoAnimationGestureRight = 19
msoAnimationWritingNotingSomething = 22
msoAnimationWorkingAtSomething = 23
msoAnimationThinking = 24
msoAnimationSendingMail = 25
msoAnimationListensToComputer = 26
msoAnimationDisappear = 31
msoAnimationAppear = 32
msoAnimationGetArtsy = 100
msoAnimationGetTechy = 101
msoAnimationGetWizardy = 102
msoAnimationCheckingSomething = 103
msoAnimationLookDown = 104
msoAnimationLookDownLeft = 105
msoAnimationLookDownRight = 106
msoAnimationLookLeft = 107
msoAnimationLookRight = 108
msoAnimationLookUp = 109
msoAnimationLookUpLeft = 110
msoAnimationLookUpRight = 111
msoAnimationSaving = 112
msoAnimationGestureDown = 113
msoAnimationGestureLeft = 114
msoAnimationGestureUp = 115
msoAnimationEmptyTrash = 116
MsoAnimationType = c_int # enum

# values for enumeration 'MsoAlertButtonType'
msoAlertButtonOK = 0
msoAlertButtonOKCancel = 1
msoAlertButtonAbortRetryIgnore = 2
msoAlertButtonYesNoCancel = 3
msoAlertButtonYesNo = 4
msoAlertButtonRetryCancel = 5
msoAlertButtonYesAllNoCancel = 6
MsoAlertButtonType = c_int # enum

# values for enumeration 'MsoAlertIconType'
msoAlertIconNoIcon = 0
msoAlertIconCritical = 1
msoAlertIconQuery = 2
msoAlertIconWarning = 3
msoAlertIconInfo = 4
MsoAlertIconType = c_int # enum

# values for enumeration 'MsoAlertDefaultType'
msoAlertDefaultFirst = 0
msoAlertDefaultSecond = 1
msoAlertDefaultThird = 2
msoAlertDefaultFourth = 3
msoAlertDefaultFifth = 4
MsoAlertDefaultType = c_int # enum

# values for enumeration 'MsoAlertCancelType'
msoAlertCancelDefault = -1
msoAlertCancelFirst = 0
msoAlertCancelSecond = 1
msoAlertCancelThird = 2
msoAlertCancelFourth = 3
msoAlertCancelFifth = 4
MsoAlertCancelType = c_int # enum
Assistant._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809345)], HRESULT, 'Move',
              ( ['in'], c_int, 'xLeft' ),
              ( ['in'], c_int, 'yTop' )),
    COMMETHOD([dispid(1610809346), 'propput'], HRESULT, 'Top',
              ( ['in'], c_int, 'pyTop' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_int), 'pyTop' )),
    COMMETHOD([dispid(1610809348), 'propput'], HRESULT, 'Left',
              ( ['in'], c_int, 'pxLeft' )),
    COMMETHOD([dispid(1610809348), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_int), 'pxLeft' )),
    COMMETHOD([dispid(1610809350)], HRESULT, 'Help'),
    COMMETHOD([dispid(1610809351)], HRESULT, 'StartWizard',
              ( ['in'], VARIANT_BOOL, 'On' ),
              ( ['in'], BSTR, 'Callback' ),
              ( ['in'], c_int, 'PrivateX' ),
              ( ['in', 'optional'], VARIANT, 'Animation' ),
              ( ['in', 'optional'], VARIANT, 'CustomTeaser' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Bottom' ),
              ( ['in', 'optional'], VARIANT, 'Right' ),
              ( ['retval', 'out'], POINTER(c_int), 'plWizID' )),
    COMMETHOD([dispid(1610809352)], HRESULT, 'EndWizard',
              ( ['in'], c_int, 'WizardID' ),
              ( ['in'], VARIANT_BOOL, 'varfSuccess' ),
              ( ['in', 'optional'], VARIANT, 'Animation' )),
    COMMETHOD([dispid(1610809353)], HRESULT, 'ActivateWizard',
              ( ['in'], c_int, 'WizardID' ),
              ( ['in'], MsoWizardActType, 'act' ),
              ( ['in', 'optional'], VARIANT, 'Animation' )),
    COMMETHOD([dispid(1610809354)], HRESULT, 'ResetTips'),
    COMMETHOD([dispid(1610809355), 'propget'], HRESULT, 'NewBalloon',
              ( ['retval', 'out'], POINTER(POINTER(Balloon)), 'ppibal' )),
    COMMETHOD([dispid(1610809356), 'propget'], HRESULT, 'BalloonError',
              ( ['retval', 'out'], POINTER(MsoBalloonErrorType), 'pbne' )),
    COMMETHOD([dispid(1610809357), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfVisible' )),
    COMMETHOD([dispid(1610809357), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pvarfVisible' )),
    COMMETHOD([dispid(1610809359), 'propget'], HRESULT, 'Animation',
              ( ['retval', 'out'], POINTER(MsoAnimationType), 'pfca' )),
    COMMETHOD([dispid(1610809359), 'propput'], HRESULT, 'Animation',
              ( ['in'], MsoAnimationType, 'pfca' )),
    COMMETHOD([dispid(1610809361), 'propget'], HRESULT, 'Reduced',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfReduced' )),
    COMMETHOD([dispid(1610809361), 'propput'], HRESULT, 'Reduced',
              ( ['in'], VARIANT_BOOL, 'pvarfReduced' )),
    COMMETHOD([dispid(1610809363), 'propput'], HRESULT, 'AssistWithHelp',
              ( ['in'], VARIANT_BOOL, 'pvarfAssistWithHelp' )),
    COMMETHOD([dispid(1610809363), 'propget'], HRESULT, 'AssistWithHelp',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfAssistWithHelp' )),
    COMMETHOD([dispid(1610809365), 'propput'], HRESULT, 'AssistWithWizards',
              ( ['in'], VARIANT_BOOL, 'pvarfAssistWithWizards' )),
    COMMETHOD([dispid(1610809365), 'propget'], HRESULT, 'AssistWithWizards',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfAssistWithWizards' )),
    COMMETHOD([dispid(1610809367), 'propput'], HRESULT, 'AssistWithAlerts',
              ( ['in'], VARIANT_BOOL, 'pvarfAssistWithAlerts' )),
    COMMETHOD([dispid(1610809367), 'propget'], HRESULT, 'AssistWithAlerts',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfAssistWithAlerts' )),
    COMMETHOD([dispid(1610809369), 'propput'], HRESULT, 'MoveWhenInTheWay',
              ( ['in'], VARIANT_BOOL, 'pvarfMove' )),
    COMMETHOD([dispid(1610809369), 'propget'], HRESULT, 'MoveWhenInTheWay',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfMove' )),
    COMMETHOD([dispid(1610809371), 'propput'], HRESULT, 'Sounds',
              ( ['in'], VARIANT_BOOL, 'pvarfSounds' )),
    COMMETHOD([dispid(1610809371), 'propget'], HRESULT, 'Sounds',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfSounds' )),
    COMMETHOD([dispid(1610809373), 'propput'], HRESULT, 'FeatureTips',
              ( ['in'], VARIANT_BOOL, 'pvarfFeatures' )),
    COMMETHOD([dispid(1610809373), 'propget'], HRESULT, 'FeatureTips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfFeatures' )),
    COMMETHOD([dispid(1610809375), 'propput'], HRESULT, 'MouseTips',
              ( ['in'], VARIANT_BOOL, 'pvarfMouse' )),
    COMMETHOD([dispid(1610809375), 'propget'], HRESULT, 'MouseTips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfMouse' )),
    COMMETHOD([dispid(1610809377), 'propput'], HRESULT, 'KeyboardShortcutTips',
              ( ['in'], VARIANT_BOOL, 'pvarfKeyboardShortcuts' )),
    COMMETHOD([dispid(1610809377), 'propget'], HRESULT, 'KeyboardShortcutTips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfKeyboardShortcuts' )),
    COMMETHOD([dispid(1610809379), 'propput'], HRESULT, 'HighPriorityTips',
              ( ['in'], VARIANT_BOOL, 'pvarfHighPriorityTips' )),
    COMMETHOD([dispid(1610809379), 'propget'], HRESULT, 'HighPriorityTips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfHighPriorityTips' )),
    COMMETHOD([dispid(1610809381), 'propput'], HRESULT, 'TipOfDay',
              ( ['in'], VARIANT_BOOL, 'pvarfTipOfDay' )),
    COMMETHOD([dispid(1610809381), 'propget'], HRESULT, 'TipOfDay',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfTipOfDay' )),
    COMMETHOD([dispid(1610809383), 'propput'], HRESULT, 'GuessHelp',
              ( ['in'], VARIANT_BOOL, 'pvarfGuessHelp' )),
    COMMETHOD([dispid(1610809383), 'propget'], HRESULT, 'GuessHelp',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfGuessHelp' )),
    COMMETHOD([dispid(1610809385), 'propput'], HRESULT, 'SearchWhenProgramming',
              ( ['in'], VARIANT_BOOL, 'pvarfSearchInProgram' )),
    COMMETHOD([dispid(1610809385), 'propget'], HRESULT, 'SearchWhenProgramming',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfSearchInProgram' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809388), 'propget'], HRESULT, 'FileName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610809388), 'propput'], HRESULT, 'FileName',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610809390), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809391), 'propget'], HRESULT, 'On',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfOn' )),
    COMMETHOD([dispid(1610809391), 'propput'], HRESULT, 'On',
              ( ['in'], VARIANT_BOOL, 'pvarfOn' )),
    COMMETHOD([dispid(1610809393)], HRESULT, 'DoAlert',
              ( ['in'], BSTR, 'bstrAlertTitle' ),
              ( ['in'], BSTR, 'bstrAlertText' ),
              ( ['in'], MsoAlertButtonType, 'alb' ),
              ( ['in'], MsoAlertIconType, 'alc' ),
              ( ['in'], MsoAlertDefaultType, 'ald' ),
              ( ['in'], MsoAlertCancelType, 'alq' ),
              ( ['in'], VARIANT_BOOL, 'varfSysAlert' ),
              ( ['retval', 'out'], POINTER(c_int), 'pibtn' )),
]
################################################################
## code template for Assistant implementation
##class Assistant_Impl(object):
##    def ActivateWizard(self, WizardID, act, Animation):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfSounds
##    def _set(self, pvarfSounds):
##        '-no docstring-'
##    Sounds = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfAssistWithAlerts
##    def _set(self, pvarfAssistWithAlerts):
##        '-no docstring-'
##    AssistWithAlerts = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfOn
##    def _set(self, pvarfOn):
##        '-no docstring-'
##    On = property(_get, _set, doc = _set.__doc__)
##
##    def StartWizard(self, On, Callback, PrivateX, Animation, CustomTeaser, Top, Left, Bottom, Right):
##        '-no docstring-'
##        #return plWizID
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FileName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfAssistWithWizards
##    def _set(self, pvarfAssistWithWizards):
##        '-no docstring-'
##    AssistWithWizards = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    @property
##    def Item(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def _get(self):
##        '-no docstring-'
##        #return pfca
##    def _set(self, pfca):
##        '-no docstring-'
##    Animation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfHighPriorityTips
##    def _set(self, pvarfHighPriorityTips):
##        '-no docstring-'
##    HighPriorityTips = property(_get, _set, doc = _set.__doc__)
##
##    def ResetTips(self):
##        '-no docstring-'
##        #return 
##
##    def EndWizard(self, WizardID, varfSuccess, Animation):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfGuessHelp
##    def _set(self, pvarfGuessHelp):
##        '-no docstring-'
##    GuessHelp = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NewBalloon(self):
##        '-no docstring-'
##        #return ppibal
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfReduced
##    def _set(self, pvarfReduced):
##        '-no docstring-'
##    Reduced = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BalloonError(self):
##        '-no docstring-'
##        #return pbne
##
##    def _get(self):
##        '-no docstring-'
##        #return pxLeft
##    def _set(self, pxLeft):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfFeatures
##    def _set(self, pvarfFeatures):
##        '-no docstring-'
##    FeatureTips = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfTipOfDay
##    def _set(self, pvarfTipOfDay):
##        '-no docstring-'
##    TipOfDay = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pyTop
##    def _set(self, pyTop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def DoAlert(self, bstrAlertTitle, bstrAlertText, alb, alc, ald, alq, varfSysAlert):
##        '-no docstring-'
##        #return pibtn
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfSearchInProgram
##    def _set(self, pvarfSearchInProgram):
##        '-no docstring-'
##    SearchWhenProgramming = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfMove
##    def _set(self, pvarfMove):
##        '-no docstring-'
##    MoveWhenInTheWay = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfAssistWithHelp
##    def _set(self, pvarfAssistWithHelp):
##        '-no docstring-'
##    AssistWithHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfKeyboardShortcuts
##    def _set(self, pvarfKeyboardShortcuts):
##        '-no docstring-'
##    KeyboardShortcutTips = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfMouse
##    def _set(self, pvarfMouse):
##        '-no docstring-'
##    MouseTips = property(_get, _set, doc = _set.__doc__)
##
##    def Help(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfVisible
##    def _set(self, pvarfVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, xLeft, yTop):
##        '-no docstring-'
##        #return 
##

class RulerLevels2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03C2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class RulerLevel2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03C3-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
RulerLevels2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(RulerLevel2)), 'RulerLevel' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
]
################################################################
## code template for RulerLevels2 implementation
##class RulerLevels2_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RulerLevel
##


# values for enumeration 'XlDisplayUnit'
xlHundreds = -2
xlThousands = -3
xlTenThousands = -4
xlHundredThousands = -5
xlMillions = -6
xlTenMillions = -7
xlHundredMillions = -8
xlThousandMillions = -9
xlMillionMillions = -10
xlDisplayUnitCustom = -4114
xlDisplayUnitNone = -4142
XlDisplayUnit = c_int # enum

# values for enumeration 'XlTickLabelOrientation'
xlTickLabelOrientationAutomatic = -4105
xlTickLabelOrientationDownward = -4170
xlTickLabelOrientationHorizontal = -4128
xlTickLabelOrientationUpward = -4171
xlTickLabelOrientationVertical = -4166
XlTickLabelOrientation = c_int # enum
FileDialogSelectedItems._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcFiles' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'Item' )),
]
################################################################
## code template for FileDialogSelectedItems implementation
##class FileDialogSelectedItems_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcFiles
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##

class NewFile(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0936-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
NewFile._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT, 'Section' ),
              ( ['in', 'optional'], VARIANT, 'DisplayName' ),
              ( ['in', 'optional'], VARIANT, 'Action' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarf' )),
    COMMETHOD([dispid(2)], HRESULT, 'Remove',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT, 'Section' ),
              ( ['in', 'optional'], VARIANT, 'DisplayName' ),
              ( ['in', 'optional'], VARIANT, 'Action' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarf' )),
]
################################################################
## code template for NewFile implementation
##class NewFile_Impl(object):
##    def Remove(self, FileName, Section, DisplayName, Action):
##        '-no docstring-'
##        #return pvarf
##
##    def Add(self, FileName, Section, DisplayName, Action):
##        '-no docstring-'
##        #return pvarf
##

_CommandBarsEvents._disp_methods_ = [
    DISPMETHOD([dispid(1)], None, 'OnUpdate'),
]
class ICommandBarButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{55F88890-7708-11D1-ACEB-006008961DA5}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ICommandBarButtonEvents._methods_ = [
    COMMETHOD([dispid(1)], None, 'Click',
              ( ['in'], POINTER(CommandBarButton), 'Ctrl' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
]
################################################################
## code template for ICommandBarButtonEvents implementation
##class ICommandBarButtonEvents_Impl(object):
##    def Click(self, Ctrl):
##        '-no docstring-'
##        #return CancelDefault
##

class MsoEnvelope(CoClass):
    _reg_clsid_ = GUID('{0006F01A-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
class IMsoEnvelopeVB(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000672AC-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoEnvelopeVBEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000672AD-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
MsoEnvelope._com_interfaces_ = [IMsoEnvelopeVB]
MsoEnvelope._outgoing_interfaces_ = [IMsoEnvelopeVBEvents]

RulerLevel2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'FirstMargin',
              ( ['retval', 'out'], POINTER(c_float), 'FirstMargin' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'FirstMargin',
              ( ['in'], c_float, 'FirstMargin' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'LeftMargin',
              ( ['retval', 'out'], POINTER(c_float), 'LeftMargin' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'LeftMargin',
              ( ['in'], c_float, 'LeftMargin' )),
]
################################################################
## code template for RulerLevel2 implementation
##class RulerLevel2_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return LeftMargin
##    def _set(self, LeftMargin):
##        '-no docstring-'
##    LeftMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FirstMargin
##    def _set(self, FirstMargin):
##        '-no docstring-'
##    FirstMargin = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoGradientStyle'
msoGradientMixed = -2
msoGradientHorizontal = 1
msoGradientVertical = 2
msoGradientDiagonalUp = 3
msoGradientDiagonalDown = 4
msoGradientFromCorner = 5
msoGradientFromTitle = 6
msoGradientFromCenter = 7
MsoGradientStyle = c_int # enum
class SignatureSetup(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD6A1-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SignatureSetup._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ReadOnly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarf' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'SignatureProvider',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrSigProv' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'SuggestedSigner',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'SuggestedSigner',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'SuggestedSignerLine2',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'SuggestedSignerLine2',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'SuggestedSignerEmail',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'SuggestedSignerEmail',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'SigningInstructions',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'SigningInstructions',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'AllowComments',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarf' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'AllowComments',
              ( ['in'], VARIANT_BOOL, 'pvarf' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ShowSignDate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarf' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'ShowSignDate',
              ( ['in'], VARIANT_BOOL, 'pvarf' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'AdditionalXml',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'AdditionalXml',
              ( ['in'], BSTR, 'pbstr' )),
]
################################################################
## code template for SignatureSetup implementation
##class SignatureSetup_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SuggestedSigner = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SigningInstructions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SuggestedSignerLine2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    AdditionalXml = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarf
##    def _set(self, pvarf):
##        '-no docstring-'
##    AllowComments = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ReadOnly(self):
##        '-no docstring-'
##        #return pvarf
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SuggestedSignerEmail = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SignatureProvider(self):
##        '-no docstring-'
##        #return pbstrSigProv
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarf
##    def _set(self, pvarf):
##        '-no docstring-'
##    ShowSignDate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pbstr
##

class ICustomXMLPartsEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB0A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class CustomXMLPart(CoClass):
    _reg_clsid_ = GUID('{000CDB08-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
class _CustomXMLPart(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB05-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class _CustomXMLPartEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB07-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CustomXMLPart._com_interfaces_ = [_CustomXMLPart]
CustomXMLPart._outgoing_interfaces_ = [_CustomXMLPartEvents]

ICustomXMLPartsEvents._methods_ = [
    COMMETHOD([dispid(1)], None, 'PartAfterAdd',
              ( ['in'], POINTER(CustomXMLPart), 'NewPart' )),
    COMMETHOD([dispid(2)], None, 'PartBeforeDelete',
              ( ['in'], POINTER(CustomXMLPart), 'OldPart' )),
    COMMETHOD([dispid(3)], None, 'PartAfterLoad',
              ( ['in'], POINTER(CustomXMLPart), 'Part' )),
]
################################################################
## code template for ICustomXMLPartsEvents implementation
##class ICustomXMLPartsEvents_Impl(object):
##    def PartAfterLoad(self, Part):
##        '-no docstring-'
##        #return 
##
##    def PartBeforeDelete(self, OldPart):
##        '-no docstring-'
##        #return 
##
##    def PartAfterAdd(self, NewPart):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoSharedWorkspaceTaskPriority'
msoSharedWorkspaceTaskPriorityHigh = 1
msoSharedWorkspaceTaskPriorityNormal = 2
msoSharedWorkspaceTaskPriorityLow = 3
MsoSharedWorkspaceTaskPriority = c_int # enum
class ChartGroups(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C172B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoChartGroup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1727-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ChartGroups._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartGroup)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for ChartGroups implementation
##class ChartGroups_Impl(object):
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##


# values for enumeration 'MsoButtonState'
msoButtonUp = 0
msoButtonDown = -1
msoButtonMixed = 2
MsoButtonState = c_int # enum
class SharedWorkspaceTasks(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C037A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SharedWorkspaceTask(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0379-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceTasks._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceTask)), 'ppidisp' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Title' ),
              ( ['in', 'optional'], VARIANT, 'Status' ),
              ( ['in', 'optional'], VARIANT, 'Priority' ),
              ( ['in', 'optional'], VARIANT, 'Assignee' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'DueDate' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceTask)), 'ppTask' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ItemCountExceeded',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pf' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
]
################################################################
## code template for SharedWorkspaceTasks implementation
##class SharedWorkspaceTasks_Impl(object):
##    @property
##    def ItemCountExceeded(self):
##        '-no docstring-'
##        #return pf
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Add(self, Title, Status, Priority, Assignee, Description, DueDate):
##        '-no docstring-'
##        #return ppTask
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcItems
##

class GradientStops(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03C0-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class GradientStop(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03BF-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
GradientStops._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(GradientStop)), 'Item' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10)], HRESULT, 'Delete',
              ( ['in', 'optional'], c_int, 'Index', -1 )),
    COMMETHOD([dispid(11)], HRESULT, 'Insert',
              ( ['in'], MsoRGBType, 'RGB' ),
              ( ['in'], c_float, 'Position' ),
              ( ['in', 'optional'], c_float, 'Transparency', 0.0 ),
              ( ['in', 'optional'], c_int, 'Index', -1 )),
]
################################################################
## code template for GradientStops implementation
##class GradientStops_Impl(object):
##    def Delete(self, Index):
##        '-no docstring-'
##        #return 
##
##    def Insert(self, RGB, Position, Transparency, Index):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##

class ColorFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0312-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
GradientStop._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'Color' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_float), 'Position' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Position',
              ( ['in'], c_float, 'Position' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Transparency',
              ( ['retval', 'out'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
]
################################################################
## code template for GradientStop implementation
##class GradientStop_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return Color
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoSharedWorkspaceTaskStatus'
msoSharedWorkspaceTaskStatusNotStarted = 1
msoSharedWorkspaceTaskStatusInProgress = 2
msoSharedWorkspaceTaskStatusCompleted = 3
msoSharedWorkspaceTaskStatusDeferred = 4
msoSharedWorkspaceTaskStatusWaiting = 5
MsoSharedWorkspaceTaskStatus = c_int # enum
class ParagraphFormat2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0399-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoParagraphAlignment'
msoAlignMixed = -2
msoAlignLeft = 1
msoAlignCenter = 2
msoAlignRight = 3
msoAlignJustify = 4
msoAlignDistribute = 5
msoAlignThaiDistribute = 6
msoAlignJustifyLow = 7
MsoParagraphAlignment = c_int # enum

# values for enumeration 'MsoBaselineAlignment'
msoBaselineAlignMixed = -2
msoBaselineAlignBaseline = 1
msoBaselineAlignTop = 2
msoBaselineAlignCenter = 3
msoBaselineAlignFarEast50 = 4
msoBaselineAlignAuto = 5
MsoBaselineAlignment = c_int # enum
class BulletFormat2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03B9-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TabStops2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03BA-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ParagraphFormat2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Alignment',
              ( ['retval', 'out'], POINTER(MsoParagraphAlignment), 'Alignment' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Alignment',
              ( ['in'], MsoParagraphAlignment, 'Alignment' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'BaselineAlignment',
              ( ['retval', 'out'], POINTER(MsoBaselineAlignment), 'BaselineAlignment' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'BaselineAlignment',
              ( ['in'], MsoBaselineAlignment, 'BaselineAlignment' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Bullet',
              ( ['retval', 'out'], POINTER(POINTER(BulletFormat2)), 'Bullet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'FarEastLineBreakLevel',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Break' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'FarEastLineBreakLevel',
              ( ['in'], MsoTriState, 'Break' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'FirstLineIndent',
              ( ['retval', 'out'], POINTER(c_float), 'Indent' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'FirstLineIndent',
              ( ['in'], c_float, 'Indent' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'HangingPunctuation',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Hanging' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'HangingPunctuation',
              ( ['in'], MsoTriState, 'Hanging' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'IndentLevel',
              ( ['retval', 'out'], POINTER(c_int), 'Level' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'IndentLevel',
              ( ['in'], c_int, 'Level' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'LeftIndent',
              ( ['retval', 'out'], POINTER(c_float), 'Indent' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'Indent' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'LineRuleAfter',
              ( ['retval', 'out'], POINTER(MsoTriState), 'LineRule' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'LineRuleAfter',
              ( ['in'], MsoTriState, 'LineRule' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'LineRuleBefore',
              ( ['retval', 'out'], POINTER(MsoTriState), 'LineRule' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'LineRuleBefore',
              ( ['in'], MsoTriState, 'LineRule' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LineRuleWithin',
              ( ['retval', 'out'], POINTER(MsoTriState), 'LineRule' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'LineRuleWithin',
              ( ['in'], MsoTriState, 'LineRule' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'RightIndent',
              ( ['retval', 'out'], POINTER(c_float), 'Indent' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'RightIndent',
              ( ['in'], c_float, 'Indent' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'SpaceAfter',
              ( ['retval', 'out'], POINTER(c_float), 'Space' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'SpaceAfter',
              ( ['in'], c_float, 'Space' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'SpaceBefore',
              ( ['retval', 'out'], POINTER(c_float), 'Space' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'SpaceBefore',
              ( ['in'], c_float, 'Space' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'SpaceWithin',
              ( ['retval', 'out'], POINTER(c_float), 'Space' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'SpaceWithin',
              ( ['in'], c_float, 'Space' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'TabStops',
              ( ['retval', 'out'], POINTER(POINTER(TabStops2)), 'TabStops' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'TextDirection',
              ( ['retval', 'out'], POINTER(MsoTextDirection), 'Direction' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'TextDirection',
              ( ['in'], MsoTextDirection, 'Direction' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'WordWrap',
              ( ['retval', 'out'], POINTER(MsoTriState), 'WordWrap' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], MsoTriState, 'WordWrap' )),
]
################################################################
## code template for ParagraphFormat2 implementation
##class ParagraphFormat2_Impl(object):
##    @property
##    def Bullet(self):
##        '-no docstring-'
##        #return Bullet
##
##    def _get(self):
##        '-no docstring-'
##        #return Space
##    def _set(self, Space):
##        '-no docstring-'
##    SpaceAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Indent
##    def _set(self, Indent):
##        '-no docstring-'
##    RightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LineRule
##    def _set(self, LineRule):
##        '-no docstring-'
##    LineRuleWithin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Break
##    def _set(self, Break):
##        '-no docstring-'
##    FarEastLineBreakLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Space
##    def _set(self, Space):
##        '-no docstring-'
##    SpaceBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Indent
##    def _set(self, Indent):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Level
##    def _set(self, Level):
##        '-no docstring-'
##    IndentLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Space
##    def _set(self, Space):
##        '-no docstring-'
##    SpaceWithin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Indent
##    def _set(self, Indent):
##        '-no docstring-'
##    FirstLineIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordWrap
##    def _set(self, WordWrap):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Hanging
##    def _set(self, Hanging):
##        '-no docstring-'
##    HangingPunctuation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LineRule
##    def _set(self, LineRule):
##        '-no docstring-'
##    LineRuleAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LineRule
##    def _set(self, LineRule):
##        '-no docstring-'
##    LineRuleBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Alignment
##    def _set(self, Alignment):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BaselineAlignment
##    def _set(self, BaselineAlignment):
##        '-no docstring-'
##    BaselineAlignment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TabStops(self):
##        '-no docstring-'
##        #return TabStops
##
##    def _get(self):
##        '-no docstring-'
##        #return Direction
##    def _set(self, Direction):
##        '-no docstring-'
##    TextDirection = property(_get, _set, doc = _set.__doc__)
##

IMsoCharacters._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD([dispid(252)], HRESULT, 'Insert',
              ( ['in'], BSTR, 'bstr' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(138), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1522), 'propget'], HRESULT, 'PhoneticCharacters',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1522), 'propput'], HRESULT, 'PhoneticCharacters',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoCharacters implementation
##class IMsoCharacters_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticCharacters = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def Insert(self, bstr):
##        '-no docstring-'
##        #return RHS
##

class WorkflowTask(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD900-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
WorkflowTask._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ListID',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'WorkflowID',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'AssignedTo',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'CreatedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'DueDate',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'CreatedDate',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(10)], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(c_int), 'pRet' )),
]
################################################################
## code template for WorkflowTask implementation
##class WorkflowTask_Impl(object):
##    @property
##    def CreatedDate(self):
##        '-no docstring-'
##        #return pdate
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return pbstr
##
##    def Show(self):
##        '-no docstring-'
##        #return pRet
##
##    @property
##    def ListID(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def AssignedTo(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def WorkflowID(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def DueDate(self):
##        '-no docstring-'
##        #return pdate
##
##    @property
##    def CreatedBy(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pbstr
##

class ServerPolicy(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0390-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PolicyItem(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0391-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ServerPolicy._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PolicyItem)), 'pppi' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrID' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrDescription' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Statement',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrStatement' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pc' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'BlockPreview',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfBlockPreview' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for ServerPolicy implementation
##class ServerPolicy_Impl(object):
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return pbstrDescription
##
##    @property
##    def BlockPreview(self):
##        '-no docstring-'
##        #return pfBlockPreview
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return pppi
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pc
##
##    @property
##    def Statement(self):
##        '-no docstring-'
##        #return pbstrStatement
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pbstrID
##

class IMsoTrendline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C170E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlTrendlineType'
xlExponential = 5
xlLinear = -4132
xlLogarithmic = -4133
xlMovingAvg = 6
xlPolynomial = 3
xlPower = 4
XlTrendlineType = c_int # enum
IMsoTrendline._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Backward',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Backward',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataLabel',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDataLabel)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayEquation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayEquation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayRSquared',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayRSquared',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Forward',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Forward',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Intercept',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Intercept',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InterceptIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InterceptIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NameIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NameIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Order',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Order',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Period',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Period',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlTrendlineType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlTrendlineType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['propget'], HRESULT, 'Backward2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Backward2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Forward2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Forward2',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for IMsoTrendline implementation
##class IMsoTrendline_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NameIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Backward = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayEquation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Order = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Intercept = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InterceptIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Forward2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Backward2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayRSquared = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Forward = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Period = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##

class IMsoChart(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1709-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlDisplayBlanksAs'
xlInterpolated = 3
xlNotPlotted = 1
xlZero = 2
XlDisplayBlanksAs = c_int # enum

# values for enumeration 'XlRowCol'
xlColumns = 2
xlRows = 1
XlRowCol = c_int # enum
class IMsoLegend(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1710-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlAxisGroup'
xlPrimary = 1
xlSecondary = 2
XlAxisGroup = c_int # enum
class IMsoWalls(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1715-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoFloor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1716-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoPlotArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1724-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoChartArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1728-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoDataTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1711-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlBarShape'
xlBox = 0
xlPyramidToPoint = 1
xlPyramidToMax = 2
xlCylinder = 3
xlConeToPoint = 4
xlConeToMax = 5
XlBarShape = c_int # enum

# values for enumeration 'MsoChartElementType'
msoElementChartTitleNone = 0
msoElementChartTitleCenteredOverlay = 1
msoElementChartTitleAboveChart = 2
msoElementLegendNone = 100
msoElementLegendRight = 101
msoElementLegendTop = 102
msoElementLegendLeft = 103
msoElementLegendBottom = 104
msoElementLegendRightOverlay = 105
msoElementLegendLeftOverlay = 106
msoElementDataLabelNone = 200
msoElementDataLabelShow = 201
msoElementDataLabelCenter = 202
msoElementDataLabelInsideEnd = 203
msoElementDataLabelInsideBase = 204
msoElementDataLabelOutSideEnd = 205
msoElementDataLabelLeft = 206
msoElementDataLabelRight = 207
msoElementDataLabelTop = 208
msoElementDataLabelBottom = 209
msoElementDataLabelBestFit = 210
msoElementPrimaryCategoryAxisTitleNone = 300
msoElementPrimaryCategoryAxisTitleAdjacentToAxis = 301
msoElementPrimaryCategoryAxisTitleBelowAxis = 302
msoElementPrimaryCategoryAxisTitleRotated = 303
msoElementPrimaryCategoryAxisTitleVertical = 304
msoElementPrimaryCategoryAxisTitleHorizontal = 305
msoElementPrimaryValueAxisTitleNone = 306
msoElementPrimaryValueAxisTitleAdjacentToAxis = 306
msoElementPrimaryValueAxisTitleBelowAxis = 308
msoElementPrimaryValueAxisTitleRotated = 309
msoElementPrimaryValueAxisTitleVertical = 310
msoElementPrimaryValueAxisTitleHorizontal = 311
msoElementSecondaryCategoryAxisTitleNone = 312
msoElementSecondaryCategoryAxisTitleAdjacentToAxis = 313
msoElementSecondaryCategoryAxisTitleBelowAxis = 314
msoElementSecondaryCategoryAxisTitleRotated = 315
msoElementSecondaryCategoryAxisTitleVertical = 316
msoElementSecondaryCategoryAxisTitleHorizontal = 317
msoElementSecondaryValueAxisTitleNone = 318
msoElementSecondaryValueAxisTitleAdjacentToAxis = 319
msoElementSecondaryValueAxisTitleBelowAxis = 320
msoElementSecondaryValueAxisTitleRotated = 321
msoElementSecondaryValueAxisTitleVertical = 322
msoElementSecondaryValueAxisTitleHorizontal = 323
msoElementSeriesAxisTitleNone = 324
msoElementSeriesAxisTitleRotated = 325
msoElementSeriesAxisTitleVertical = 326
msoElementSeriesAxisTitleHorizontal = 327
msoElementPrimaryValueGridLinesNone = 328
msoElementPrimaryValueGridLinesMinor = 329
msoElementPrimaryValueGridLinesMajor = 330
msoElementPrimaryValueGridLinesMinorMajor = 331
msoElementPrimaryCategoryGridLinesNone = 332
msoElementPrimaryCategoryGridLinesMinor = 333
msoElementPrimaryCategoryGridLinesMajor = 334
msoElementPrimaryCategoryGridLinesMinorMajor = 335
msoElementSecondaryValueGridLinesNone = 336
msoElementSecondaryValueGridLinesMinor = 337
msoElementSecondaryValueGridLinesMajor = 338
msoElementSecondaryValueGridLinesMinorMajor = 339
msoElementSecondaryCategoryGridLinesNone = 340
msoElementSecondaryCategoryGridLinesMinor = 341
msoElementSecondaryCategoryGridLinesMajor = 342
msoElementSecondaryCategoryGridLinesMinorMajor = 343
msoElementSeriesAxisGridLinesNone = 344
msoElementSeriesAxisGridLinesMinor = 345
msoElementSeriesAxisGridLinesMajor = 346
msoElementSeriesAxisGridLinesMinorMajor = 347
msoElementPrimaryCategoryAxisNone = 348
msoElementPrimaryCategoryAxisShow = 349
msoElementPrimaryCategoryAxisWithoutLabels = 350
msoElementPrimaryCategoryAxisReverse = 351
msoElementPrimaryValueAxisNone = 352
msoElementPrimaryValueAxisShow = 353
msoElementPrimaryValueAxisThousands = 354
msoElementPrimaryValueAxisMillions = 355
msoElementPrimaryValueAxisBillions = 356
msoElementPrimaryValueAxisLogScale = 357
msoElementSecondaryCategoryAxisNone = 358
msoElementSecondaryCategoryAxisShow = 359
msoElementSecondaryCategoryAxisWithoutLabels = 360
msoElementSecondaryCategoryAxisReverse = 361
msoElementSecondaryValueAxisNone = 362
msoElementSecondaryValueAxisShow = 363
msoElementSecondaryValueAxisThousands = 364
msoElementSecondaryValueAxisMillions = 365
msoElementSecondaryValueAxisBillions = 366
msoElementSecondaryValueAxisLogScale = 367
msoElementSeriesAxisNone = 368
msoElementSeriesAxisShow = 369
msoElementSeriesAxisWithoutLabeling = 370
msoElementSeriesAxisReverse = 371
msoElementPrimaryCategoryAxisThousands = 372
msoElementPrimaryCategoryAxisMillions = 373
msoElementPrimaryCategoryAxisBillions = 374
msoElementPrimaryCategoryAxisLogScale = 375
msoElementSecondaryCategoryAxisThousands = 376
msoElementSecondaryCategoryAxisMillions = 377
msoElementSecondaryCategoryAxisBillions = 378
msoElementSecondaryCategoryAxisLogScale = 379
msoElementDataTableNone = 500
msoElementDataTableShow = 501
msoElementDataTableWithLegendKeys = 502
msoElementTrendlineNone = 600
msoElementTrendlineAddLinear = 601
msoElementTrendlineAddExponential = 602
msoElementTrendlineAddLinearForecast = 603
msoElementTrendlineAddTwoPeriodMovingAverage = 604
msoElementErrorBarNone = 700
msoElementErrorBarStandardError = 701
msoElementErrorBarPercentage = 702
msoElementErrorBarStandardDeviation = 703
msoElementLineNone = 800
msoElementLineDropLine = 801
msoElementLineHiLoLine = 802
msoElementLineSeriesLine = 803
msoElementLineDropHiLoLine = 804
msoElementUpDownBarsNone = 900
msoElementUpDownBarsShow = 901
msoElementPlotAreaNone = 1000
msoElementPlotAreaShow = 1001
msoElementChartWallNone = 1100
msoElementChartWallShow = 1101
msoElementChartFloorNone = 1200
msoElementChartFloorShow = 1201
MsoChartElementType = c_int # enum
class IMsoChartData(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C172F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class Shapes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoChart._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1610743809), 'propput'], HRESULT, 'HasTitle',
              ( ['in'], VARIANT_BOOL, 'fTitle' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'HasTitle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'fTitle' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ChartTitle',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartTitle)), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'DepthPercent',
              ( ['retval', 'out'], POINTER(c_int), 'pwDepthPercent' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'DepthPercent',
              ( ['in'], c_int, 'pwDepthPercent' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Elevation',
              ( ['retval', 'out'], POINTER(c_int), 'pwElevation' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Elevation',
              ( ['in'], c_int, 'pwElevation' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'GapDepth',
              ( ['retval', 'out'], POINTER(c_int), 'pwGapDepth' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'GapDepth',
              ( ['in'], c_int, 'pwGapDepth' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'HeightPercent',
              ( ['retval', 'out'], POINTER(c_int), 'pwHeightPercent' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'HeightPercent',
              ( ['in'], c_int, 'pwHeightPercent' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Perspective',
              ( ['retval', 'out'], POINTER(c_int), 'pwPerspective' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Perspective',
              ( ['in'], c_int, 'pwPerspective' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'RightAngleAxes',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarRightAngleAxes' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'RightAngleAxes',
              ( ['in'], VARIANT, 'pvarRightAngleAxes' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'Rotation',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarRotation' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'Rotation',
              ( ['in'], VARIANT, 'pvarRotation' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'DisplayBlanksAs',
              ( ['in'], XlDisplayBlanksAs, 'pres' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'DisplayBlanksAs',
              ( ['retval', 'out'], POINTER(XlDisplayBlanksAs), 'pres' )),
    COMMETHOD([dispid(1610743828), 'restricted', 'propput'], HRESULT, 'ProtectData',
              ( ['in'], VARIANT_BOOL, 'pres' )),
    COMMETHOD([dispid(1610743828), 'restricted', 'propget'], HRESULT, 'ProtectData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pres' )),
    COMMETHOD([dispid(1610743830), 'restricted', 'propput'], HRESULT, 'ProtectFormatting',
              ( ['in'], VARIANT_BOOL, 'pres' )),
    COMMETHOD([dispid(1610743830), 'restricted', 'propget'], HRESULT, 'ProtectFormatting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pres' )),
    COMMETHOD([dispid(1610743832), 'restricted', 'propput'], HRESULT, 'ProtectGoalSeek',
              ( ['in'], VARIANT_BOOL, 'pres' )),
    COMMETHOD([dispid(1610743832), 'restricted', 'propget'], HRESULT, 'ProtectGoalSeek',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pres' )),
    COMMETHOD([dispid(1610743834), 'restricted', 'propput'], HRESULT, 'ProtectSelection',
              ( ['in'], VARIANT_BOOL, 'pres' )),
    COMMETHOD([dispid(1610743834), 'restricted', 'propget'], HRESULT, 'ProtectSelection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pres' )),
    COMMETHOD([dispid(1610743836), 'restricted', 'propput'], HRESULT, 'ProtectChartObjects',
              ( ['in'], VARIANT_BOOL, 'pres' )),
    COMMETHOD([dispid(1610743836), 'restricted', 'propget'], HRESULT, 'ProtectChartObjects',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pres' )),
    COMMETHOD([dispid(1610743838), 'restricted'], HRESULT, 'UnProtect',
              ( ['in', 'optional'], VARIANT, 'Password' )),
    COMMETHOD([dispid(1610743839), 'restricted'], HRESULT, 'Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ChartGroups',
              ( ['in', 'optional'], POINTER(VARIANT), 'pvarIndex' ),
              ( ['in', 'optional'], VARIANT, 'varIgallery' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(68)], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(151), 'nonbrowsable', 'hidden'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'IMsoLegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' )),
    COMMETHOD([dispid(109), 'hidden', 'propget'], HRESULT, 'SubType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(109), 'hidden', 'propput'], HRESULT, 'SubType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(79), 'hidden', 'propget'], HRESULT, 'Corners',
              ( ['retval', 'out'], POINTER(POINTER(IMsoCorners)), 'RHS' )),
    COMMETHOD([dispid(1922)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'IMsoLegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' )),
    COMMETHOD([dispid(1400), 'propget'], HRESULT, 'ChartType',
              ( ['retval', 'out'], POINTER(XlChartType), 'RHS' )),
    COMMETHOD([dispid(1400), 'propput'], HRESULT, 'ChartType',
              ( ['in'], XlChartType, 'RHS' )),
    COMMETHOD([dispid(1396), 'propget'], HRESULT, 'HasDataTable',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1396), 'propput'], HRESULT, 'HasDataTable',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1401)], HRESULT, 'ApplyCustomType',
              ( ['in'], XlChartType, 'ChartType' ),
              ( ['in', 'optional'], VARIANT, 'TypeName' )),
    COMMETHOD([dispid(1409)], HRESULT, 'GetChartElement',
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' ),
              ( ['in', 'out'], POINTER(c_int), 'ElementID' ),
              ( ['in', 'out'], POINTER(c_int), 'Arg1' ),
              ( ['in', 'out'], POINTER(c_int), 'Arg2' )),
    COMMETHOD([dispid(1413)], HRESULT, 'SetSourceData',
              ( ['in'], BSTR, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'PlotBy' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'PlotBy',
              ( ['retval', 'out'], POINTER(XlRowCol), 'PlotBy' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'PlotBy',
              ( ['in'], XlRowCol, 'PlotBy' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'HasLegend',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(53), 'propput'], HRESULT, 'HasLegend',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(84), 'propget'], HRESULT, 'Legend',
              ( ['retval', 'out'], POINTER(POINTER(IMsoLegend)), 'RHS' )),
    COMMETHOD([dispid(1610743861)], HRESULT, 'Axes',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppAxes' )),
    COMMETHOD([dispid(1610743862), 'propput'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'axisType' ),
              ( ['in', 'optional'], VARIANT, 'AxisGroup' ),
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743862), 'propget'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'axisType' ),
              ( ['in', 'optional'], VARIANT, 'AxisGroup' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743864), 'propget'], HRESULT, 'Walls',
              ( ['in', 'optional'], VARIANT_BOOL, 'fBackWall', True ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoWalls)), 'ppwalls' )),
    COMMETHOD([dispid(1610743865), 'propget'], HRESULT, 'Floor',
              ( ['retval', 'out'], POINTER(POINTER(IMsoFloor)), 'ppfloor' )),
    COMMETHOD([dispid(1610743866), 'propget'], HRESULT, 'PlotArea',
              ( ['retval', 'out'], POINTER(POINTER(IMsoPlotArea)), 'ppplotarea' )),
    COMMETHOD([dispid(92), 'propget'], HRESULT, 'PlotVisibleOnly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(92), 'propput'], HRESULT, 'PlotVisibleOnly',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743869), 'propget'], HRESULT, 'ChartArea',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartArea)), 'ppchartarea' )),
    COMMETHOD([dispid(1610743870)], HRESULT, 'AutoFormat',
              ( ['in'], c_int, 'rGallery' ),
              ( ['in', 'optional'], VARIANT, 'varFormat' )),
    COMMETHOD([dispid(1610743871), 'propget'], HRESULT, 'AutoScaling',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'f' )),
    COMMETHOD([dispid(1610743871), 'propput'], HRESULT, 'AutoScaling',
              ( ['in'], VARIANT_BOOL, 'f' )),
    COMMETHOD([dispid(1610743873), 'restricted'], HRESULT, 'SetBackgroundPicture',
              ( ['in'], BSTR, 'bstr' )),
    COMMETHOD([dispid(1610743874)], HRESULT, 'ChartWizard',
              ( ['in', 'optional'], VARIANT, 'varSource' ),
              ( ['in', 'optional'], VARIANT, 'varGallery' ),
              ( ['in', 'optional'], VARIANT, 'varFormat' ),
              ( ['in', 'optional'], VARIANT, 'varPlotBy' ),
              ( ['in', 'optional'], VARIANT, 'varCategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'varSeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'varHasLegend' ),
              ( ['in', 'optional'], VARIANT, 'varTitle' ),
              ( ['in', 'optional'], VARIANT, 'varCategoryTitle' ),
              ( ['in', 'optional'], VARIANT, 'varValueTitle' ),
              ( ['in', 'optional'], VARIANT, 'varExtraTitle' ),
              ( ['in', 'lcid'], c_int, 'LocaleID', _lcid )),
    COMMETHOD([dispid(1610743875)], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], c_int, 'Appearance', 1 ),
              ( ['in', 'optional'], c_int, 'Format', -4147 ),
              ( ['in', 'optional'], c_int, 'Size', 2 ),
              ( ['in', 'lcid'], c_int, 'LocaleID', _lcid )),
    COMMETHOD([dispid(1610743876), 'propget'], HRESULT, 'DataTable',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDataTable)), 'RHS' )),
    COMMETHOD([dispid(1610743877), 'restricted'], HRESULT, 'Evaluate',
              ( ['in'], VARIANT, 'varName' ),
              ( ['in'], c_int, 'LocaleID' ),
              ( ['out'], POINTER(c_int), 'ObjType' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1610743878), 'restricted', 'nonbrowsable'], HRESULT, '_Evaluate',
              ( ['in'], VARIANT, 'varName' ),
              ( ['in'], c_int, 'LocaleID' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1610743879), 'restricted'], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'varType' ),
              ( ['in', 'lcid'], c_int, 'LocaleID', _lcid )),
    COMMETHOD([dispid(1610743880), 'propget'], HRESULT, 'BarShape',
              ( ['retval', 'out'], POINTER(XlBarShape), 'pShape' )),
    COMMETHOD([dispid(1610743880), 'propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'pShape' )),
    COMMETHOD([dispid(1610743882)], HRESULT, 'Export',
              ( ['in'], BSTR, 'bstr' ),
              ( ['in', 'optional'], VARIANT, 'varFilterName' ),
              ( ['in', 'optional'], VARIANT, 'varInteractive' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'f' )),
    COMMETHOD([dispid(1610743883)], HRESULT, 'SetDefaultChart',
              ( ['in'], VARIANT, 'varName' )),
    COMMETHOD([dispid(1610743884)], HRESULT, 'ApplyChartTemplate',
              ( ['in'], BSTR, 'bstrFileName' )),
    COMMETHOD([dispid(1610743885)], HRESULT, 'SaveChartTemplate',
              ( ['in'], BSTR, 'bstrFileName' )),
    COMMETHOD([dispid(2377), 'propget'], HRESULT, 'SideWall',
              ( ['retval', 'out'], POINTER(POINTER(IMsoWalls)), 'RHS' )),
    COMMETHOD([dispid(2378), 'propget'], HRESULT, 'BackWall',
              ( ['retval', 'out'], POINTER(POINTER(IMsoWalls)), 'RHS' )),
    COMMETHOD([dispid(2465), 'propget'], HRESULT, 'ChartStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2465), 'propput'], HRESULT, 'ChartStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2466)], HRESULT, 'ClearToMatchStyle'),
    COMMETHOD([dispid(1814), 'propget'], HRESULT, 'PivotLayout',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1815), 'hidden', 'propget'], HRESULT, 'HasPivotFields',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1815), 'hidden', 'propput'], HRESULT, 'HasPivotFields',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743894)], HRESULT, 'RefreshPivotTable'),
    COMMETHOD([dispid(1610743895), 'propput'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['in'], VARIANT_BOOL, 'pRHS' )),
    COMMETHOD([dispid(1610743895), 'propget'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pRHS' )),
    COMMETHOD([dispid(2468)], HRESULT, 'ApplyLayout',
              ( ['in'], c_int, 'Layout' ),
              ( ['in', 'optional'], VARIANT, 'varChartType' )),
    COMMETHOD([dispid(1610743898), 'restricted', 'propget'], HRESULT, 'Selection',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1610743899)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(1610743900)], HRESULT, 'SetElement',
              ( ['in'], MsoChartElementType, 'RHS' )),
    COMMETHOD([dispid(1610743901), 'propget'], HRESULT, 'ChartData',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartData)), 'ppchartdata' )),
    COMMETHOD([dispid(1610743902), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(1610743903), 'propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(Shapes)), 'ppShapes' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'Area3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartGroup)), 'RHS' )),
    COMMETHOD([dispid(9), 'hidden'], HRESULT, 'AreaGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(18), 'hidden', 'propget'], HRESULT, 'Bar3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartGroup)), 'RHS' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'BarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(19), 'hidden', 'propget'], HRESULT, 'Column3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartGroup)), 'RHS' )),
    COMMETHOD([dispid(11), 'hidden'], HRESULT, 'ColumnGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(20), 'hidden', 'propget'], HRESULT, 'Line3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartGroup)), 'RHS' )),
    COMMETHOD([dispid(12), 'hidden'], HRESULT, 'LineGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(21), 'hidden', 'propget'], HRESULT, 'Pie3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartGroup)), 'RHS' )),
    COMMETHOD([dispid(13), 'hidden'], HRESULT, 'PieGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(14), 'hidden'], HRESULT, 'DoughnutGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(15), 'hidden'], HRESULT, 'RadarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(22), 'hidden', 'propget'], HRESULT, 'SurfaceGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartGroup)), 'RHS' )),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'XYGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IMsoChart implementation
##class IMsoChart_Impl(object):
##    def RadarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def AreaGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyLayout(self, Layout, varChartType):
##        '-no docstring-'
##        #return 
##
##    def CopyPicture(self, Appearance, Format, Size, LocaleID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ChartArea(self):
##        '-no docstring-'
##        #return ppchartarea
##
##    def _get(self):
##        '-no docstring-'
##        #return pwElevation
##    def _set(self, pwElevation):
##        '-no docstring-'
##    Elevation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Export(self, bstr, varFilterName, varInteractive):
##        '-no docstring-'
##        #return f
##
##    def PieGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Area3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SubType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarRotation
##    def _set(self, pvarRotation):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    def SetBackgroundPicture(self, bstr):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pres
##    def _set(self, pres):
##        '-no docstring-'
##    ProtectGoalSeek = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SideWall(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return pres
##    def _set(self, pres):
##        '-no docstring-'
##    ProtectData = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pres
##    def _set(self, pres):
##        '-no docstring-'
##    DisplayBlanksAs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pRHS
##    def _set(self, pRHS):
##        '-no docstring-'
##    ShowDataLabelsOverMaximum = property(_get, _set, doc = _set.__doc__)
##
##    def Axes(self, Type, AxisGroup):
##        '-no docstring-'
##        #return ppAxes
##
##    @property
##    def BackWall(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataTable = property(_get, _set, doc = _set.__doc__)
##
##    def SetElement(self, RHS):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def SetSourceData(self, Source, PlotBy):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Bar3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return pres
##    def _set(self, pres):
##        '-no docstring-'
##    ProtectSelection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PivotLayout(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return ppShapes
##
##    def _get(self):
##        '-no docstring-'
##        #return fTitle
##    def _set(self, fTitle):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyCustomType(self, ChartType, TypeName):
##        '-no docstring-'
##        #return 
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pwPerspective
##    def _set(self, pwPerspective):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    def LineGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SurfaceGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ChartWizard(self, varSource, varGallery, varFormat, varPlotBy, varCategoryLabels, varSeriesLabels, varHasLegend, varTitle, varCategoryTitle, varValueTitle, varExtraTitle, LocaleID):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarRightAngleAxes
##    def _set(self, pvarRightAngleAxes):
##        '-no docstring-'
##    RightAngleAxes = property(_get, _set, doc = _set.__doc__)
##
##    def ColumnGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return pwGapDepth
##    def _set(self, pwGapDepth):
##        '-no docstring-'
##    GapDepth = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Corners(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Selection(self):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyDataLabels(self, Type, IMsoLegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ChartData(self):
##        '-no docstring-'
##        #return ppchartdata
##
##    def XYGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _ApplyDataLabels(self, Type, IMsoLegendKey, AutoText, HasLeaderLines):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pwDepthPercent
##    def _set(self, pwDepthPercent):
##        '-no docstring-'
##    DepthPercent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pres
##    def _set(self, pres):
##        '-no docstring-'
##    ProtectFormatting = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChartTitle(self):
##        '-no docstring-'
##        #return pval
##
##    def ClearToMatchStyle(self):
##        '-no docstring-'
##        #return 
##
##    def SaveChartTemplate(self, bstrFileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataTable(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return pres
##    def _set(self, pres):
##        '-no docstring-'
##    ProtectChartObjects = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChartGroups(self, pvarIndex, varIgallery, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def UnProtect(self, Password):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Floor(self):
##        '-no docstring-'
##        #return ppfloor
##
##    def RefreshPivotTable(self):
##        '-no docstring-'
##        #return 
##
##    def BarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly):
##        '-no docstring-'
##        #return 
##
##    def SeriesCollection(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Legend(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return pwHeightPercent
##    def _set(self, pwHeightPercent):
##        '-no docstring-'
##    HeightPercent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasLegend = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyChartTemplate(self, bstrFileName):
##        '-no docstring-'
##        #return 
##
##    def SetDefaultChart(self, varName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasPivotFields = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PlotVisibleOnly = property(_get, _set, doc = _set.__doc__)
##
##    def GetChartElement(self, x, y):
##        '-no docstring-'
##        #return ElementID, Arg1, Arg2
##
##    def _get(self, axisType, AxisGroup):
##        '-no docstring-'
##        #return pval
##    def _set(self, axisType, AxisGroup, pval):
##        '-no docstring-'
##    HasAxis = property(_get, _set, doc = _set.__doc__)
##
##    def _Evaluate(self, varName, LocaleID):
##        '-no docstring-'
##        #return pvar
##
##    def AutoFormat(self, rGallery, varFormat):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pShape
##    def _set(self, pShape):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Pie3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PlotArea(self):
##        '-no docstring-'
##        #return ppplotarea
##
##    def Evaluate(self, varName, LocaleID):
##        '-no docstring-'
##        #return ObjType, pvar
##
##    @property
##    def Walls(self, fBackWall):
##        '-no docstring-'
##        #return ppwalls
##
##    def Paste(self, varType, LocaleID):
##        '-no docstring-'
##        #return 
##
##    def DoughnutGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return f
##    def _set(self, f):
##        '-no docstring-'
##    AutoScaling = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Column3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return PlotBy
##    def _set(self, PlotBy):
##        '-no docstring-'
##    PlotBy = property(_get, _set, doc = _set.__doc__)
##

class IMsoAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1713-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class IMsoAxisTitle(IMsoChartTitle):
    _case_insensitive_ = True
    _iid_ = GUID('{ABFA087C-F703-4D53-946E-37FF82B2C994}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class GridLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1725-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlTickMark'
xlTickMarkCross = 4
xlTickMarkInside = 2
xlTickMarkNone = -4142
xlTickMarkOutside = 3
XlTickMark = c_int # enum
class IMsoTickLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1726-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlTimeUnit'
xlDays = 0
xlMonths = 1
xlYears = 2
XlTimeUnit = c_int # enum
class IMsoDisplayUnitLabel(IMsoChartTitle):
    _case_insensitive_ = True
    _iid_ = GUID('{6EA00553-9439-4D5A-B1E6-DC15A54DA8B2}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoAxis._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'AxisBetweenCategories',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'AxisBetweenCategories',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'AxisGroup',
              ( ['retval', 'out'], POINTER(XlAxisGroup), 'pval' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'AxisTitle',
              ( ['retval', 'out'], POINTER(POINTER(IMsoAxisTitle)), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'CategoryNames',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'CategoryNames',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Crosses',
              ( ['retval', 'out'], POINTER(XlAxisCrosses), 'pval' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Crosses',
              ( ['in'], XlAxisCrosses, 'pval' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'CrossesAt',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'CrossesAt',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'HasMajorGridlines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743819), 'propput'], HRESULT, 'HasMajorGridlines',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'HasMinorGridlines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'HasMinorGridlines',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'HasTitle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'HasTitle',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'MajorGridlines',
              ( ['retval', 'out'], POINTER(POINTER(GridLines)), 'ppval' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'MajorTickMark',
              ( ['retval', 'out'], POINTER(XlTickMark), 'pval' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'MajorTickMark',
              ( ['in'], XlTickMark, 'pval' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'MajorUnit',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'MajorUnit',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'LogBase',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'LogBase',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'MajorUnitIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743834), 'propput'], HRESULT, 'MajorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743836), 'propget'], HRESULT, 'MaximumScale',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743836), 'propput'], HRESULT, 'MaximumScale',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743838), 'propget'], HRESULT, 'MaximumScaleIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743838), 'propput'], HRESULT, 'MaximumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743840), 'propget'], HRESULT, 'MinimumScale',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743840), 'propput'], HRESULT, 'MinimumScale',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'MinimumScaleIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743842), 'propput'], HRESULT, 'MinimumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'MinorGridlines',
              ( ['retval', 'out'], POINTER(POINTER(GridLines)), 'ppval' )),
    COMMETHOD([dispid(1610743845), 'propget'], HRESULT, 'MinorTickMark',
              ( ['retval', 'out'], POINTER(XlTickMark), 'pval' )),
    COMMETHOD([dispid(1610743845), 'propput'], HRESULT, 'MinorTickMark',
              ( ['in'], XlTickMark, 'pval' )),
    COMMETHOD([dispid(1610743847), 'propget'], HRESULT, 'MinorUnit',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743847), 'propput'], HRESULT, 'MinorUnit',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743849), 'propget'], HRESULT, 'MinorUnitIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743849), 'propput'], HRESULT, 'MinorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743851), 'propget'], HRESULT, 'ReversePlotOrder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743851), 'propput'], HRESULT, 'ReversePlotOrder',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743853), 'propget'], HRESULT, 'ScaleType',
              ( ['retval', 'out'], POINTER(XlScaleType), 'pval' )),
    COMMETHOD([dispid(1610743853), 'propput'], HRESULT, 'ScaleType',
              ( ['in'], XlScaleType, 'pval' )),
    COMMETHOD([dispid(1610743855)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743856), 'propget'], HRESULT, 'TickLabelPosition',
              ( ['retval', 'out'], POINTER(XlTickLabelPosition), 'pval' )),
    COMMETHOD([dispid(1610743856), 'propput'], HRESULT, 'TickLabelPosition',
              ( ['in'], XlTickLabelPosition, 'pval' )),
    COMMETHOD([dispid(1610743858), 'propget'], HRESULT, 'TickLabels',
              ( ['retval', 'out'], POINTER(POINTER(IMsoTickLabels)), 'pval' )),
    COMMETHOD([dispid(1610743859), 'propget'], HRESULT, 'TickLabelSpacing',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743859), 'propput'], HRESULT, 'TickLabelSpacing',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(1610743861), 'propget'], HRESULT, 'TickMarkSpacing',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743861), 'propput'], HRESULT, 'TickMarkSpacing',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(1610743863), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlAxisType), 'pval' )),
    COMMETHOD([dispid(1610743863), 'propput'], HRESULT, 'Type',
              ( ['in'], XlAxisType, 'pval' )),
    COMMETHOD([dispid(1610743865), 'propget'], HRESULT, 'BaseUnit',
              ( ['retval', 'out'], POINTER(XlTimeUnit), 'pval' )),
    COMMETHOD([dispid(1610743865), 'propput'], HRESULT, 'BaseUnit',
              ( ['in'], XlTimeUnit, 'pval' )),
    COMMETHOD([dispid(1610743867), 'propget'], HRESULT, 'BaseUnitIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743867), 'propput'], HRESULT, 'BaseUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743869), 'propget'], HRESULT, 'MajorUnitScale',
              ( ['retval', 'out'], POINTER(XlTimeUnit), 'pval' )),
    COMMETHOD([dispid(1610743869), 'propput'], HRESULT, 'MajorUnitScale',
              ( ['in'], XlTimeUnit, 'pval' )),
    COMMETHOD([dispid(1610743871), 'propget'], HRESULT, 'MinorUnitScale',
              ( ['retval', 'out'], POINTER(XlTimeUnit), 'pval' )),
    COMMETHOD([dispid(1610743871), 'propput'], HRESULT, 'MinorUnitScale',
              ( ['in'], XlTimeUnit, 'pval' )),
    COMMETHOD([dispid(1610743873), 'propget'], HRESULT, 'CategoryType',
              ( ['retval', 'out'], POINTER(XlCategoryType), 'pval' )),
    COMMETHOD([dispid(1610743873), 'propput'], HRESULT, 'CategoryType',
              ( ['in'], XlCategoryType, 'pval' )),
    COMMETHOD([dispid(1610743875), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743876), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743877), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743878), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743879), 'propget'], HRESULT, 'DisplayUnit',
              ( ['retval', 'out'], POINTER(XlDisplayUnit), 'pval' )),
    COMMETHOD([dispid(1610743879), 'propput'], HRESULT, 'DisplayUnit',
              ( ['in'], XlDisplayUnit, 'pval' )),
    COMMETHOD([dispid(1610743881), 'propget'], HRESULT, 'DisplayUnitCustom',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(1610743881), 'propput'], HRESULT, 'DisplayUnitCustom',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(1610743883), 'propget'], HRESULT, 'HasDisplayUnitLabel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743883), 'propput'], HRESULT, 'HasDisplayUnitLabel',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743885), 'propget'], HRESULT, 'DisplayUnitLabel',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDisplayUnitLabel)), 'pval' )),
    COMMETHOD([dispid(1610743886), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(1610743887), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743888), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IMsoAxis implementation
##class IMsoAxis_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MinorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    LogBase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MinorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MinorGridlines(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def AxisTitle(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MinimumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MajorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MinorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MinimumScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    CategoryNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    DisplayUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MajorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    ReversePlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    TickLabelPosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MajorGridlines(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MaximumScale = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DisplayUnitLabel(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    TickLabelSpacingIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MajorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Crosses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    HasMinorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BaseUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    DisplayUnitCustom = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TickLabels(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    HasMajorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    ScaleType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BaseUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    AxisBetweenCategories = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    TickMarkSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    TickLabelSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    HasDisplayUnitLabel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    CrossesAt = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MinorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AxisGroup(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MajorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MaximumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    CategoryType = property(_get, _set, doc = _set.__doc__)
##

class CommandBar(_IMsoOleAccDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0304-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoMenuAnimation'
msoMenuAnimationNone = 0
msoMenuAnimationRandom = 1
msoMenuAnimationUnfold = 2
msoMenuAnimationSlide = 3
MsoMenuAnimation = c_int # enum
class CommandBarControls(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0306-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_CommandBars._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'ActionControl',
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControl)), 'ppcbc' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'ActiveMenuBar',
              ( ['retval', 'out'], POINTER(POINTER(CommandBar)), 'ppcb' )),
    COMMETHOD([dispid(1610809346)], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Position' ),
              ( ['in', 'optional'], VARIANT, 'MenuBar' ),
              ( ['in', 'optional'], VARIANT, 'Temporary' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBar)), 'ppcb' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcToolbars' )),
    COMMETHOD([dispid(1610809348), 'propget'], HRESULT, 'DisplayTooltips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfDisplayTooltips' )),
    COMMETHOD([dispid(1610809348), 'propput'], HRESULT, 'DisplayTooltips',
              ( ['in'], VARIANT_BOOL, 'pvarfDisplayTooltips' )),
    COMMETHOD([dispid(1610809350), 'propget'], HRESULT, 'DisplayKeysInTooltips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfDisplayKeys' )),
    COMMETHOD([dispid(1610809350), 'propput'], HRESULT, 'DisplayKeysInTooltips',
              ( ['in'], VARIANT_BOOL, 'pvarfDisplayKeys' )),
    COMMETHOD([dispid(1610809352)], HRESULT, 'FindControl',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Id' ),
              ( ['in', 'optional'], VARIANT, 'Tag' ),
              ( ['in', 'optional'], VARIANT, 'Visible' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControl)), 'ppcbc' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBar)), 'ppcb' )),
    COMMETHOD([dispid(1610809354), 'propget'], HRESULT, 'LargeButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfLargeButtons' )),
    COMMETHOD([dispid(1610809354), 'propput'], HRESULT, 'LargeButtons',
              ( ['in'], VARIANT_BOOL, 'pvarfLargeButtons' )),
    COMMETHOD([dispid(1610809356), 'propget'], HRESULT, 'MenuAnimationStyle',
              ( ['retval', 'out'], POINTER(MsoMenuAnimation), 'pma' )),
    COMMETHOD([dispid(1610809356), 'propput'], HRESULT, 'MenuAnimationStyle',
              ( ['in'], MsoMenuAnimation, 'pma' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(1610809359), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809360)], HRESULT, 'ReleaseFocus'),
    COMMETHOD([dispid(1610809361), 'hidden', 'propget'], HRESULT, 'IdsString',
              ( ['in'], c_int, 'ids' ),
              ( ['out'], POINTER(BSTR), 'pbstrName' ),
              ( ['retval', 'out'], POINTER(c_int), 'pcch' )),
    COMMETHOD([dispid(1610809362), 'hidden', 'propget'], HRESULT, 'TmcGetName',
              ( ['in'], c_int, 'tmc' ),
              ( ['out'], POINTER(BSTR), 'pbstrName' ),
              ( ['retval', 'out'], POINTER(c_int), 'pcch' )),
    COMMETHOD([dispid(1610809363), 'propget'], HRESULT, 'AdaptiveMenus',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfAdaptiveMenus' )),
    COMMETHOD([dispid(1610809363), 'propput'], HRESULT, 'AdaptiveMenus',
              ( ['in'], VARIANT_BOOL, 'pvarfAdaptiveMenus' )),
    COMMETHOD([dispid(1610809365)], HRESULT, 'FindControls',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Id' ),
              ( ['in', 'optional'], VARIANT, 'Tag' ),
              ( ['in', 'optional'], VARIANT, 'Visible' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControls)), 'ppcbcs' )),
    COMMETHOD([dispid(1610809366), 'hidden'], HRESULT, 'AddEx',
              ( ['in', 'optional'], VARIANT, 'TbidOrName' ),
              ( ['in', 'optional'], VARIANT, 'Position' ),
              ( ['in', 'optional'], VARIANT, 'MenuBar' ),
              ( ['in', 'optional'], VARIANT, 'Temporary' ),
              ( ['in', 'optional'], VARIANT, 'TbtrProtection' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBar)), 'ppcb' )),
    COMMETHOD([dispid(1610809367), 'propget'], HRESULT, 'DisplayFonts',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfDisplayFonts' )),
    COMMETHOD([dispid(1610809367), 'propput'], HRESULT, 'DisplayFonts',
              ( ['in'], VARIANT_BOOL, 'pvarfDisplayFonts' )),
    COMMETHOD([dispid(1610809369), 'propget'], HRESULT, 'DisableCustomize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfDisableCustomize' )),
    COMMETHOD([dispid(1610809369), 'propput'], HRESULT, 'DisableCustomize',
              ( ['in'], VARIANT_BOOL, 'pvarfDisableCustomize' )),
    COMMETHOD([dispid(1610809371), 'propget'], HRESULT, 'DisableAskAQuestionDropdown',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfDisableAskAQuestionDropdown' )),
    COMMETHOD([dispid(1610809371), 'propput'], HRESULT, 'DisableAskAQuestionDropdown',
              ( ['in'], VARIANT_BOOL, 'pvarfDisableAskAQuestionDropdown' )),
    COMMETHOD([dispid(1610809373)], HRESULT, 'ExecuteMso',
              ( ['in'], BSTR, 'idMso' )),
    COMMETHOD([dispid(1610809374)], HRESULT, 'GetEnabledMso',
              ( ['in'], BSTR, 'idMso' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Enabled' )),
    COMMETHOD([dispid(1610809375)], HRESULT, 'GetVisibleMso',
              ( ['in'], BSTR, 'idMso' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Visible' )),
    COMMETHOD([dispid(1610809376)], HRESULT, 'GetPressedMso',
              ( ['in'], BSTR, 'idMso' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Pressed' )),
    COMMETHOD([dispid(1610809377)], HRESULT, 'GetLabelMso',
              ( ['in'], BSTR, 'idMso' ),
              ( ['retval', 'out'], POINTER(BSTR), 'Label' )),
    COMMETHOD([dispid(1610809378)], HRESULT, 'GetScreentipMso',
              ( ['in'], BSTR, 'idMso' ),
              ( ['retval', 'out'], POINTER(BSTR), 'Screentip' )),
    COMMETHOD([dispid(1610809379)], HRESULT, 'GetSupertipMso',
              ( ['in'], BSTR, 'idMso' ),
              ( ['retval', 'out'], POINTER(BSTR), 'Supertip' )),
    COMMETHOD([dispid(1610809380)], HRESULT, 'GetImageMso',
              ( ['in'], BSTR, 'idMso' ),
              ( ['in'], c_int, 'Width' ),
              ( ['in'], c_int, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'Image' )),
]
################################################################
## code template for _CommandBars implementation
##class _CommandBars_Impl(object):
##    def GetScreentipMso(self, idMso):
##        '-no docstring-'
##        #return Screentip
##
##    def ReleaseFocus(self):
##        '-no docstring-'
##        #return 
##
##    def GetVisibleMso(self, idMso):
##        '-no docstring-'
##        #return Visible
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfDisplayKeys
##    def _set(self, pvarfDisplayKeys):
##        '-no docstring-'
##    DisplayKeysInTooltips = property(_get, _set, doc = _set.__doc__)
##
##    def AddEx(self, TbidOrName, Position, MenuBar, Temporary, TbtrProtection):
##        '-no docstring-'
##        #return ppcb
##
##    def FindControls(self, Type, Id, Tag, Visible):
##        '-no docstring-'
##        #return ppcbcs
##
##    def _get(self):
##        '-no docstring-'
##        #return pma
##    def _set(self, pma):
##        '-no docstring-'
##    MenuAnimationStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveMenuBar(self):
##        '-no docstring-'
##        #return ppcb
##
##    def ExecuteMso(self, idMso):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfDisableCustomize
##    def _set(self, pvarfDisableCustomize):
##        '-no docstring-'
##    DisableCustomize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfDisplayFonts
##    def _set(self, pvarfDisplayFonts):
##        '-no docstring-'
##    DisplayFonts = property(_get, _set, doc = _set.__doc__)
##
##    def GetEnabledMso(self, idMso):
##        '-no docstring-'
##        #return Enabled
##
##    @property
##    def IdsString(self, ids):
##        '-no docstring-'
##        #return pbstrName, pcch
##
##    def GetPressedMso(self, idMso):
##        '-no docstring-'
##        #return Pressed
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfLargeButtons
##    def _set(self, pvarfLargeButtons):
##        '-no docstring-'
##    LargeButtons = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def GetImageMso(self, idMso, Width, Height):
##        '-no docstring-'
##        #return Image
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def GetSupertipMso(self, idMso):
##        '-no docstring-'
##        #return Supertip
##
##    @property
##    def ActionControl(self):
##        '-no docstring-'
##        #return ppcbc
##
##    @property
##    def TmcGetName(self, tmc):
##        '-no docstring-'
##        #return pbstrName, pcch
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfDisplayTooltips
##    def _set(self, pvarfDisplayTooltips):
##        '-no docstring-'
##    DisplayTooltips = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppcb
##
##    def FindControl(self, Type, Id, Tag, Visible):
##        '-no docstring-'
##        #return ppcbc
##
##    def Add(self, Name, Position, MenuBar, Temporary):
##        '-no docstring-'
##        #return ppcb
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfDisableAskAQuestionDropdown
##    def _set(self, pvarfDisableAskAQuestionDropdown):
##        '-no docstring-'
##    DisableAskAQuestionDropdown = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfAdaptiveMenus
##    def _set(self, pvarfAdaptiveMenus):
##        '-no docstring-'
##    AdaptiveMenus = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcToolbars
##
##    def GetLabelMso(self, idMso):
##        '-no docstring-'
##        #return Label
##

class HTMLProjectItem(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0358-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoHTMLProjectOpen'
msoHTMLProjectOpenSourceView = 1
msoHTMLProjectOpenTextView = 2
MsoHTMLProjectOpen = c_int # enum
HTMLProjectItem._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'IsOpen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RetValue' )),
    COMMETHOD([dispid(5)], HRESULT, 'LoadFromFile',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(6)], HRESULT, 'Open',
              ( ['in', 'optional'], MsoHTMLProjectOpen, 'OpenKind', 0 )),
    COMMETHOD([dispid(7)], HRESULT, 'SaveCopyAs',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for HTMLProjectItem implementation
##class HTMLProjectItem_Impl(object):
##    def LoadFromFile(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def SaveCopyAs(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Text
##    def _set(self, Text):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsOpen(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Open(self, OpenKind):
##        '-no docstring-'
##        #return 
##

class CustomXMLParts(CoClass):
    _reg_clsid_ = GUID('{000CDB0C-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)
class _CustomXMLParts(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB09-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class _CustomXMLPartsEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB0B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CustomXMLParts._com_interfaces_ = [_CustomXMLParts]
CustomXMLParts._outgoing_interfaces_ = [_CustomXMLPartsEvents]

class Font2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C039A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoNumberedBulletStyle'
msoBulletStyleMixed = -2
msoBulletAlphaLCPeriod = 0
msoBulletAlphaUCPeriod = 1
msoBulletArabicParenRight = 2
msoBulletArabicPeriod = 3
msoBulletRomanLCParenBoth = 4
msoBulletRomanLCParenRight = 5
msoBulletRomanLCPeriod = 6
msoBulletRomanUCPeriod = 7
msoBulletAlphaLCParenBoth = 8
msoBulletAlphaLCParenRight = 9
msoBulletAlphaUCParenBoth = 10
msoBulletAlphaUCParenRight = 11
msoBulletArabicParenBoth = 12
msoBulletArabicPlain = 13
msoBulletRomanUCParenBoth = 14
msoBulletRomanUCParenRight = 15
msoBulletSimpChinPlain = 16
msoBulletSimpChinPeriod = 17
msoBulletCircleNumDBPlain = 18
msoBulletCircleNumWDWhitePlain = 19
msoBulletCircleNumWDBlackPlain = 20
msoBulletTradChinPlain = 21
msoBulletTradChinPeriod = 22
msoBulletArabicAlphaDash = 23
msoBulletArabicAbjadDash = 24
msoBulletHebrewAlphaDash = 25
msoBulletKanjiKoreanPlain = 26
msoBulletKanjiKoreanPeriod = 27
msoBulletArabicDBPlain = 28
msoBulletArabicDBPeriod = 29
msoBulletThaiAlphaPeriod = 30
msoBulletThaiAlphaParenRight = 31
msoBulletThaiAlphaParenBoth = 32
msoBulletThaiNumPeriod = 33
msoBulletThaiNumParenRight = 34
msoBulletThaiNumParenBoth = 35
msoBulletHindiAlphaPeriod = 36
msoBulletHindiNumPeriod = 37
msoBulletKanjiSimpChinDBPeriod = 38
msoBulletHindiNumParenRight = 39
msoBulletHindiAlpha1Period = 40
MsoNumberedBulletStyle = c_int # enum

# values for enumeration 'MsoBulletType'
msoBulletMixed = -2
msoBulletNone = 0
msoBulletUnnumbered = 1
msoBulletNumbered = 2
msoBulletPicture = 3
MsoBulletType = c_int # enum
BulletFormat2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Character',
              ( ['retval', 'out'], POINTER(c_int), 'Character' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Character',
              ( ['in'], c_int, 'Character' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font2)), 'Font' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Number',
              ( ['retval', 'out'], POINTER(c_int), 'Number' )),
    COMMETHOD([dispid(5)], HRESULT, 'Picture',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'RelativeSize',
              ( ['retval', 'out'], POINTER(c_float), 'Size' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'RelativeSize',
              ( ['in'], c_float, 'Size' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'StartValue',
              ( ['retval', 'out'], POINTER(c_int), 'Start' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'StartValue',
              ( ['in'], c_int, 'Start' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(MsoNumberedBulletStyle), 'Style' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Style',
              ( ['in'], MsoNumberedBulletStyle, 'Style' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoBulletType), 'Type' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoBulletType, 'Type' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'UseTextColor',
              ( ['retval', 'out'], POINTER(MsoTriState), 'UseTextColor' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'UseTextColor',
              ( ['in'], MsoTriState, 'UseTextColor' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'UseTextFont',
              ( ['retval', 'out'], POINTER(MsoTriState), 'UseTextFont' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'UseTextFont',
              ( ['in'], MsoTriState, 'UseTextFont' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Visible' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'Visible',
              ( ['in'], MsoTriState, 'Visible' )),
]
################################################################
## code template for BulletFormat2 implementation
##class BulletFormat2_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Character
##    def _set(self, Character):
##        '-no docstring-'
##    Character = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UseTextFont
##    def _set(self, UseTextFont):
##        '-no docstring-'
##    UseTextFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Size
##    def _set(self, Size):
##        '-no docstring-'
##    RelativeSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Style
##    def _set(self, Style):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UseTextColor
##    def _set(self, UseTextColor):
##        '-no docstring-'
##    UseTextColor = property(_get, _set, doc = _set.__doc__)
##
##    def Picture(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Number(self):
##        '-no docstring-'
##        #return Number
##
##    def _get(self):
##        '-no docstring-'
##        #return Start
##    def _set(self, Start):
##        '-no docstring-'
##    StartValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return Font
##

class DocumentInspectors(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0392-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DocumentInspector(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0393-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DocumentInspectors._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(DocumentInspector)), 'ppidisp' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for DocumentInspectors implementation
##class DocumentInspectors_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcItems
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##

IMsoDataTable._methods_ = [
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'pfVisible' )),
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'ShowLegendKey',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfVisible' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'HasBorderHorizontal',
              ( ['in'], VARIANT_BOOL, 'pfVisible' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'HasBorderHorizontal',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfVisible' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'HasBorderVertical',
              ( ['in'], VARIANT_BOOL, 'pfVisible' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'HasBorderVertical',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfVisible' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'HasBorderOutline',
              ( ['in'], VARIANT_BOOL, 'pfVisible' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'HasBorderOutline',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfVisible' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppline' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'pfont' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'Select'),
    COMMETHOD([dispid(1610743819)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoDataTable implementation
##class IMsoDataTable_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pfVisible
##    def _set(self, pfVisible):
##        '-no docstring-'
##    HasBorderVertical = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppline
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return pfont
##
##    def _get(self):
##        '-no docstring-'
##        #return pfVisible
##    def _set(self, pfVisible):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return pfVisible
##    def _set(self, pfVisible):
##        '-no docstring-'
##    HasBorderOutline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return pfVisible
##    def _set(self, pfVisible):
##        '-no docstring-'
##    HasBorderHorizontal = property(_get, _set, doc = _set.__doc__)
##

class CanvasShapes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0371-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoCalloutType'
msoCalloutMixed = -2
msoCalloutOne = 1
msoCalloutTwo = 2
msoCalloutThree = 3
msoCalloutFour = 4
MsoCalloutType = c_int # enum
class ShapeRange(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
CanvasShapes._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddCallout',
              ( ['in'], MsoCalloutType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Callout' )),
    COMMETHOD([dispid(11)], HRESULT, 'AddConnector',
              ( ['in'], MsoConnectorType, 'Type' ),
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Connector' )),
    COMMETHOD([dispid(12)], HRESULT, 'AddCurve',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Curve' )),
    COMMETHOD([dispid(13)], HRESULT, 'AddLabel',
              ( ['in'], MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Label' )),
    COMMETHOD([dispid(14)], HRESULT, 'AddLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Line' )),
    COMMETHOD([dispid(15)], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], MsoTriState, 'LinkToFile' ),
              ( ['in'], MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Picture' )),
    COMMETHOD([dispid(16)], HRESULT, 'AddPolyline',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Polyline' )),
    COMMETHOD([dispid(17)], HRESULT, 'AddShape',
              ( ['in'], MsoAutoShapeType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(18)], HRESULT, 'AddTextEffect',
              ( ['in'], MsoPresetTextEffect, 'PresetTextEffect' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_float, 'FontSize' ),
              ( ['in'], MsoTriState, 'FontBold' ),
              ( ['in'], MsoTriState, 'FontItalic' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'TextEffect' )),
    COMMETHOD([dispid(19)], HRESULT, 'AddTextbox',
              ( ['in'], MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Textbox' )),
    COMMETHOD([dispid(20)], HRESULT, 'BuildFreeform',
              ( ['in'], MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['retval', 'out'], POINTER(POINTER(FreeformBuilder)), 'FreeformBuilder' )),
    COMMETHOD([dispid(21)], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'Range' )),
    COMMETHOD([dispid(22)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Background',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Background' )),
]
################################################################
## code template for CanvasShapes implementation
##class CanvasShapes_Impl(object):
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##
##    def AddLabel(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Label
##
##    def AddLine(self, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Line
##
##    def BuildFreeform(self, EditingType, X1, Y1):
##        '-no docstring-'
##        #return FreeformBuilder
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def AddCurve(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Curve
##
##    def AddShape(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Shape
##
##    def AddConnector(self, Type, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Connector
##
##    def AddPicture(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Picture
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return Range
##
##    def AddCallout(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Callout
##
##    def AddTextbox(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Textbox
##
##    def AddPolyline(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Polyline
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def AddTextEffect(self, PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top):
##        '-no docstring-'
##        #return TextEffect
##

IMsoAxisTitle._methods_ = [
]
################################################################
## code template for IMsoAxisTitle implementation
##class IMsoAxisTitle_Impl(object):

class BalloonLabels(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C032E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
BalloonLabels._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcwz' )),
    COMMETHOD([dispid(1610809347), 'propput'], HRESULT, 'Count',
              ( ['in'], c_int, 'pcwz' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
]
################################################################
## code template for BalloonLabels implementation
##class BalloonLabels_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def _get(self):
##        '-no docstring-'
##        #return pcwz
##    def _set(self, pcwz):
##        '-no docstring-'
##    Count = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##

IAccessible._methods_ = [
    COMMETHOD([dispid(-5000), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accParent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(-5001), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accChildCount',
              ( ['retval', 'out'], POINTER(c_int), 'pcountChildren' )),
    COMMETHOD([dispid(-5002), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accChild',
              ( ['in'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispChild' )),
    COMMETHOD([dispid(-5003), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accName',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pszName' )),
    COMMETHOD([dispid(-5004), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accValue',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pszValue' )),
    COMMETHOD([dispid(-5005), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accDescription',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pszDescription' )),
    COMMETHOD([dispid(-5006), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accRole',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarRole' )),
    COMMETHOD([dispid(-5007), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accState',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarState' )),
    COMMETHOD([dispid(-5008), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accHelp',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pszHelp' )),
    COMMETHOD([dispid(-5009), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accHelpTopic',
              ( ['out'], POINTER(BSTR), 'pszHelpFile' ),
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(c_int), 'pidTopic' )),
    COMMETHOD([dispid(-5010), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accKeyboardShortcut',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pszKeyboardShortcut' )),
    COMMETHOD([dispid(-5011), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accFocus',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarChild' )),
    COMMETHOD([dispid(-5012), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accSelection',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarChildren' )),
    COMMETHOD([dispid(-5013), 'nonbrowsable', 'hidden', 'propget'], HRESULT, 'accDefaultAction',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pszDefaultAction' )),
    COMMETHOD([dispid(-5014), 'nonbrowsable', 'hidden'], HRESULT, 'accSelect',
              ( ['in'], c_int, 'flagsSelect' ),
              ( ['in', 'optional'], VARIANT, 'varChild' )),
    COMMETHOD([dispid(-5015), 'nonbrowsable', 'hidden'], HRESULT, 'accLocation',
              ( ['out'], POINTER(c_int), 'pxLeft' ),
              ( ['out'], POINTER(c_int), 'pyTop' ),
              ( ['out'], POINTER(c_int), 'pcxWidth' ),
              ( ['out'], POINTER(c_int), 'pcyHeight' ),
              ( ['in', 'optional'], VARIANT, 'varChild' )),
    COMMETHOD([dispid(-5016), 'nonbrowsable', 'hidden'], HRESULT, 'accNavigate',
              ( ['in'], c_int, 'navDir' ),
              ( ['in', 'optional'], VARIANT, 'varStart' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarEndUpAt' )),
    COMMETHOD([dispid(-5017), 'nonbrowsable', 'hidden'], HRESULT, 'accHitTest',
              ( ['in'], c_int, 'xLeft' ),
              ( ['in'], c_int, 'yTop' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarChild' )),
    COMMETHOD([dispid(-5018), 'nonbrowsable', 'hidden'], HRESULT, 'accDoDefaultAction',
              ( ['in', 'optional'], VARIANT, 'varChild' )),
    COMMETHOD([dispid(-5003), 'nonbrowsable', 'hidden', 'propput'], HRESULT, 'accName',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['in'], BSTR, 'pszName' )),
    COMMETHOD([dispid(-5004), 'nonbrowsable', 'hidden', 'propput'], HRESULT, 'accValue',
              ( ['in', 'optional'], VARIANT, 'varChild' ),
              ( ['in'], BSTR, 'pszValue' )),
]
################################################################
## code template for IAccessible implementation
##class IAccessible_Impl(object):
##    def accDoDefaultAction(self, varChild):
##        '-no docstring-'
##        #return 
##
##    @property
##    def accDescription(self, varChild):
##        '-no docstring-'
##        #return pszDescription
##
##    @property
##    def accHelpTopic(self, varChild):
##        '-no docstring-'
##        #return pszHelpFile, pidTopic
##
##    @property
##    def accChildCount(self):
##        '-no docstring-'
##        #return pcountChildren
##
##    @property
##    def accSelection(self):
##        '-no docstring-'
##        #return pvarChildren
##
##    def accHitTest(self, xLeft, yTop):
##        '-no docstring-'
##        #return pvarChild
##
##    @property
##    def accState(self, varChild):
##        '-no docstring-'
##        #return pvarState
##
##    @property
##    def accDefaultAction(self, varChild):
##        '-no docstring-'
##        #return pszDefaultAction
##
##    def _get(self, varChild):
##        '-no docstring-'
##        #return pszValue
##    def _set(self, varChild, pszValue):
##        '-no docstring-'
##    accValue = property(_get, _set, doc = _set.__doc__)
##
##    def accSelect(self, flagsSelect, varChild):
##        '-no docstring-'
##        #return 
##
##    @property
##    def accFocus(self):
##        '-no docstring-'
##        #return pvarChild
##
##    @property
##    def accRole(self, varChild):
##        '-no docstring-'
##        #return pvarRole
##
##    def accLocation(self, varChild):
##        '-no docstring-'
##        #return pxLeft, pyTop, pcxWidth, pcyHeight
##
##    @property
##    def accKeyboardShortcut(self, varChild):
##        '-no docstring-'
##        #return pszKeyboardShortcut
##
##    @property
##    def accChild(self, varChild):
##        '-no docstring-'
##        #return ppdispChild
##
##    @property
##    def accParent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    def accNavigate(self, navDir, varStart):
##        '-no docstring-'
##        #return pvarEndUpAt
##
##    @property
##    def accHelp(self, varChild):
##        '-no docstring-'
##        #return pszHelp
##
##    def _get(self, varChild):
##        '-no docstring-'
##        #return pszName
##    def _set(self, varChild, pszName):
##        '-no docstring-'
##    accName = property(_get, _set, doc = _set.__doc__)
##

_IMsoOleAccDispObj._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'plCreator' )),
]
################################################################
## code template for _IMsoOleAccDispObj implementation
##class _IMsoOleAccDispObj_Impl(object):
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##


# values for enumeration 'MsoControlOLEUsage'
msoControlOLEUsageNeither = 0
msoControlOLEUsageServer = 1
msoControlOLEUsageClient = 2
msoControlOLEUsageBoth = 3
MsoControlOLEUsage = c_int # enum

# values for enumeration 'MsoControlType'
msoControlCustom = 0
msoControlButton = 1
msoControlEdit = 2
msoControlDropdown = 3
msoControlComboBox = 4
msoControlButtonDropdown = 5
msoControlSplitDropdown = 6
msoControlOCXDropdown = 7
msoControlGenericDropdown = 8
msoControlGraphicDropdown = 9
msoControlPopup = 10
msoControlGraphicPopup = 11
msoControlButtonPopup = 12
msoControlSplitButtonPopup = 13
msoControlSplitButtonMRUPopup = 14
msoControlLabel = 15
msoControlExpandingGrid = 16
msoControlSplitExpandingGrid = 17
msoControlGrid = 18
msoControlGauge = 19
msoControlGraphicCombo = 20
msoControlPane = 21
msoControlActiveX = 22
msoControlSpinner = 23
msoControlLabelEx = 24
msoControlWorkPane = 25
msoControlAutoCompleteCombo = 26
MsoControlType = c_int # enum
CommandBarControl._methods_ = [
    COMMETHOD([dispid(1610874880), 'propget'], HRESULT, 'BeginGroup',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfBeginGroup' )),
    COMMETHOD([dispid(1610874880), 'propput'], HRESULT, 'BeginGroup',
              ( ['in'], VARIANT_BOOL, 'pvarfBeginGroup' )),
    COMMETHOD([dispid(1610874882), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfBuiltIn' )),
    COMMETHOD([dispid(1610874883), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCaption' )),
    COMMETHOD([dispid(1610874883), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pbstrCaption' )),
    COMMETHOD([dispid(1610874885), 'hidden', 'propget'], HRESULT, 'Control',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610874886)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Bar' ),
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControl)), 'ppcbc' )),
    COMMETHOD([dispid(1610874887)], HRESULT, 'Delete',
              ( ['in', 'optional'], VARIANT, 'Temporary' )),
    COMMETHOD([dispid(1610874888), 'propget'], HRESULT, 'DescriptionText',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrText' )),
    COMMETHOD([dispid(1610874888), 'propput'], HRESULT, 'DescriptionText',
              ( ['in'], BSTR, 'pbstrText' )),
    COMMETHOD([dispid(1610874890), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfEnabled' )),
    COMMETHOD([dispid(1610874890), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pvarfEnabled' )),
    COMMETHOD([dispid(1610874892)], HRESULT, 'Execute'),
    COMMETHOD([dispid(1610874893), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_int), 'pdy' )),
    COMMETHOD([dispid(1610874893), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'pdy' )),
    COMMETHOD([dispid(1610874895), 'propget'], HRESULT, 'HelpContextId',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(1610874895), 'propput'], HRESULT, 'HelpContextId',
              ( ['in'], c_int, 'pid' )),
    COMMETHOD([dispid(1610874897), 'propget'], HRESULT, 'HelpFile',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrFilename' )),
    COMMETHOD([dispid(1610874897), 'propput'], HRESULT, 'HelpFile',
              ( ['in'], BSTR, 'pbstrFilename' )),
    COMMETHOD([dispid(1610874899), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(1610874900), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'pi' )),
    COMMETHOD([dispid(1610874901), 'hidden', 'propget'], HRESULT, 'InstanceId',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(1610874902)], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Bar' ),
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControl)), 'ppcbc' )),
    COMMETHOD([dispid(1610874903), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_int), 'px' )),
    COMMETHOD([dispid(1610874904), 'propget'], HRESULT, 'OLEUsage',
              ( ['retval', 'out'], POINTER(MsoControlOLEUsage), 'pcou' )),
    COMMETHOD([dispid(1610874904), 'propput'], HRESULT, 'OLEUsage',
              ( ['in'], MsoControlOLEUsage, 'pcou' )),
    COMMETHOD([dispid(1610874906), 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrOnAction' )),
    COMMETHOD([dispid(1610874906), 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'pbstrOnAction' )),
    COMMETHOD([dispid(1610874908), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(CommandBar)), 'ppcb' )),
    COMMETHOD([dispid(1610874909), 'propget'], HRESULT, 'Parameter',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrParam' )),
    COMMETHOD([dispid(1610874909), 'propput'], HRESULT, 'Parameter',
              ( ['in'], BSTR, 'pbstrParam' )),
    COMMETHOD([dispid(1610874911), 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'pnPri' )),
    COMMETHOD([dispid(1610874911), 'propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'pnPri' )),
    COMMETHOD([dispid(1610874913)], HRESULT, 'Reset'),
    COMMETHOD([dispid(1610874914)], HRESULT, 'SetFocus'),
    COMMETHOD([dispid(1610874915), 'propget'], HRESULT, 'Tag',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrTag' )),
    COMMETHOD([dispid(1610874915), 'propput'], HRESULT, 'Tag',
              ( ['in'], BSTR, 'pbstrTag' )),
    COMMETHOD([dispid(1610874917), 'propget'], HRESULT, 'TooltipText',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrTooltip' )),
    COMMETHOD([dispid(1610874917), 'propput'], HRESULT, 'TooltipText',
              ( ['in'], BSTR, 'pbstrTooltip' )),
    COMMETHOD([dispid(1610874919), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_int), 'py' )),
    COMMETHOD([dispid(1610874920), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoControlType), 'ptype' )),
    COMMETHOD([dispid(1610874921), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfVisible' )),
    COMMETHOD([dispid(1610874921), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pvarfVisible' )),
    COMMETHOD([dispid(1610874923), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'pdx' )),
    COMMETHOD([dispid(1610874923), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'pdx' )),
    COMMETHOD([dispid(1610874925), 'propget'], HRESULT, 'IsPriorityDropped',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfDropped' )),
    COMMETHOD([dispid(1610874926), 'hidden'], HRESULT, 'Reserved1'),
    COMMETHOD([dispid(1610874927), 'hidden'], HRESULT, 'Reserved2'),
    COMMETHOD([dispid(1610874928), 'hidden'], HRESULT, 'Reserved3'),
    COMMETHOD([dispid(1610874929), 'hidden'], HRESULT, 'Reserved4'),
    COMMETHOD([dispid(1610874930), 'hidden'], HRESULT, 'Reserved5'),
    COMMETHOD([dispid(1610874931), 'hidden'], HRESULT, 'Reserved6'),
    COMMETHOD([dispid(1610874932), 'hidden'], HRESULT, 'Reserved7'),
]
################################################################
## code template for CommandBarControl implementation
##class CommandBarControl_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pvarfBeginGroup
##    def _set(self, pvarfBeginGroup):
##        '-no docstring-'
##    BeginGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pid
##    def _set(self, pid):
##        '-no docstring-'
##    HelpContextId = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return ptype
##
##    def Reserved7(self):
##        '-no docstring-'
##        #return 
##
##    def Reserved3(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsPriorityDropped(self):
##        '-no docstring-'
##        #return pvarfDropped
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrFilename
##    def _set(self, pbstrFilename):
##        '-no docstring-'
##    HelpFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pdy
##    def _set(self, pdy):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfEnabled
##    def _set(self, pvarfEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfVisible
##    def _set(self, pvarfVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrCaption
##    def _set(self, pbstrCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pid
##
##    @property
##    def Control(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def SetFocus(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pcou
##    def _set(self, pcou):
##        '-no docstring-'
##    OLEUsage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pvarfBuiltIn
##
##    def Reserved4(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppcb
##
##    def Delete(self, Temporary):
##        '-no docstring-'
##        #return 
##
##    @property
##    def InstanceId(self):
##        '-no docstring-'
##        #return pid
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrOnAction
##    def _set(self, pbstrOnAction):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return px
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrTooltip
##    def _set(self, pbstrTooltip):
##        '-no docstring-'
##    TooltipText = property(_get, _set, doc = _set.__doc__)
##
##    def Reserved5(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrParam
##    def _set(self, pbstrParam):
##        '-no docstring-'
##    Parameter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return py
##
##    def Reserved6(self):
##        '-no docstring-'
##        #return 
##
##    def Reserved1(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self, Bar, Before):
##        '-no docstring-'
##        #return ppcbc
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrTag
##    def _set(self, pbstrTag):
##        '-no docstring-'
##    Tag = property(_get, _set, doc = _set.__doc__)
##
##    def Reserved2(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrText
##    def _set(self, pbstrText):
##        '-no docstring-'
##    DescriptionText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return pi
##
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    def Move(self, Bar, Before):
##        '-no docstring-'
##        #return ppcbc
##
##    def _get(self):
##        '-no docstring-'
##        #return pnPri
##    def _set(self, pnPri):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pdx
##    def _set(self, pdx):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoButtonStyle'
msoButtonAutomatic = 0
msoButtonIcon = 1
msoButtonCaption = 2
msoButtonIconAndCaption = 3
msoButtonIconAndWrapCaption = 7
msoButtonIconAndCaptionBelow = 11
msoButtonWrapCaption = 14
msoButtonIconAndWrapCaptionBelow = 15
MsoButtonStyle = c_int # enum

# values for enumeration 'MsoCommandBarButtonHyperlinkType'
msoCommandBarButtonHyperlinkNone = 0
msoCommandBarButtonHyperlinkOpen = 1
msoCommandBarButtonHyperlinkInsertPicture = 2
MsoCommandBarButtonHyperlinkType = c_int # enum
_CommandBarButton._methods_ = [
    COMMETHOD([dispid(1610940416), 'propget'], HRESULT, 'BuiltInFace',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfBuiltIn' )),
    COMMETHOD([dispid(1610940416), 'propput'], HRESULT, 'BuiltInFace',
              ( ['in'], VARIANT_BOOL, 'pvarfBuiltIn' )),
    COMMETHOD([dispid(1610940418)], HRESULT, 'CopyFace'),
    COMMETHOD([dispid(1610940419), 'propget'], HRESULT, 'FaceId',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(1610940419), 'propput'], HRESULT, 'FaceId',
              ( ['in'], c_int, 'pid' )),
    COMMETHOD([dispid(1610940421)], HRESULT, 'PasteFace'),
    COMMETHOD([dispid(1610940422), 'propget'], HRESULT, 'ShortcutText',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrText' )),
    COMMETHOD([dispid(1610940422), 'propput'], HRESULT, 'ShortcutText',
              ( ['in'], BSTR, 'pbstrText' )),
    COMMETHOD([dispid(1610940424), 'propget'], HRESULT, 'State',
              ( ['retval', 'out'], POINTER(MsoButtonState), 'pstate' )),
    COMMETHOD([dispid(1610940424), 'propput'], HRESULT, 'State',
              ( ['in'], MsoButtonState, 'pstate' )),
    COMMETHOD([dispid(1610940426), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(MsoButtonStyle), 'pstyle' )),
    COMMETHOD([dispid(1610940426), 'propput'], HRESULT, 'Style',
              ( ['in'], MsoButtonStyle, 'pstyle' )),
    COMMETHOD([dispid(1610940428), 'propget'], HRESULT, 'HyperlinkType',
              ( ['retval', 'out'], POINTER(MsoCommandBarButtonHyperlinkType), 'phlType' )),
    COMMETHOD([dispid(1610940428), 'propput'], HRESULT, 'HyperlinkType',
              ( ['in'], MsoCommandBarButtonHyperlinkType, 'phlType' )),
    COMMETHOD([dispid(1610940430), 'propget'], HRESULT, 'Picture',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppdispPicture' )),
    COMMETHOD([dispid(1610940430), 'propput'], HRESULT, 'Picture',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp), 'ppdispPicture' )),
    COMMETHOD([dispid(1610940432), 'propget'], HRESULT, 'Mask',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppipictdispMask' )),
    COMMETHOD([dispid(1610940432), 'propput'], HRESULT, 'Mask',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp), 'ppipictdispMask' )),
]
################################################################
## code template for _CommandBarButton implementation
##class _CommandBarButton_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pstyle
##    def _set(self, pstyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return phlType
##    def _set(self, phlType):
##        '-no docstring-'
##    HyperlinkType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pid
##    def _set(self, pid):
##        '-no docstring-'
##    FaceId = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrText
##    def _set(self, pbstrText):
##        '-no docstring-'
##    ShortcutText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ppdispPicture
##    def _set(self, ppdispPicture):
##        '-no docstring-'
##    Picture = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pstate
##    def _set(self, pstate):
##        '-no docstring-'
##    State = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ppipictdispMask
##    def _set(self, ppipictdispMask):
##        '-no docstring-'
##    Mask = property(_get, _set, doc = _set.__doc__)
##
##    def PasteFace(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfBuiltIn
##    def _set(self, pvarfBuiltIn):
##        '-no docstring-'
##    BuiltInFace = property(_get, _set, doc = _set.__doc__)
##
##    def CopyFace(self):
##        '-no docstring-'
##        #return 
##

_CustomXMLPartsEvents._disp_methods_ = [
    DISPMETHOD([dispid(1)], None, 'PartAfterAdd',
               ( ['in'], POINTER(CustomXMLPart), 'NewPart' )),
    DISPMETHOD([dispid(2)], None, 'PartBeforeDelete',
               ( ['in'], POINTER(CustomXMLPart), 'OldPart' )),
    DISPMETHOD([dispid(3)], None, 'PartAfterLoad',
               ( ['in'], POINTER(CustomXMLPart), 'Part' )),
]
class FillFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0314-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoPatternType'
msoPatternMixed = -2
msoPattern5Percent = 1
msoPattern10Percent = 2
msoPattern20Percent = 3
msoPattern25Percent = 4
msoPattern30Percent = 5
msoPattern40Percent = 6
msoPattern50Percent = 7
msoPattern60Percent = 8
msoPattern70Percent = 9
msoPattern75Percent = 10
msoPattern80Percent = 11
msoPattern90Percent = 12
msoPatternDarkHorizontal = 13
msoPatternDarkVertical = 14
msoPatternDarkDownwardDiagonal = 15
msoPatternDarkUpwardDiagonal = 16
msoPatternSmallCheckerBoard = 17
msoPatternTrellis = 18
msoPatternLightHorizontal = 19
msoPatternLightVertical = 20
msoPatternLightDownwardDiagonal = 21
msoPatternLightUpwardDiagonal = 22
msoPatternSmallGrid = 23
msoPatternDottedDiamond = 24
msoPatternWideDownwardDiagonal = 25
msoPatternWideUpwardDiagonal = 26
msoPatternDashedUpwardDiagonal = 27
msoPatternDashedDownwardDiagonal = 28
msoPatternNarrowVertical = 29
msoPatternNarrowHorizontal = 30
msoPatternDashedVertical = 31
msoPatternDashedHorizontal = 32
msoPatternLargeConfetti = 33
msoPatternLargeGrid = 34
msoPatternHorizontalBrick = 35
msoPatternLargeCheckerBoard = 36
msoPatternSmallConfetti = 37
msoPatternZigZag = 38
msoPatternSolidDiamond = 39
msoPatternDiagonalBrick = 40
msoPatternOutlinedDiamond = 41
msoPatternPlaid = 42
msoPatternSphere = 43
msoPatternWeave = 44
msoPatternDottedGrid = 45
msoPatternDivot = 46
msoPatternShingle = 47
msoPatternWave = 48
msoPatternHorizontal = 49
msoPatternVertical = 50
msoPatternCross = 51
msoPatternDownwardDiagonal = 52
msoPatternUpwardDiagonal = 53
msoPatternDiagonalCross = 54
MsoPatternType = c_int # enum

# values for enumeration 'MsoPresetGradientType'
msoPresetGradientMixed = -2
msoGradientEarlySunset = 1
msoGradientLateSunset = 2
msoGradientNightfall = 3
msoGradientDaybreak = 4
msoGradientHorizon = 5
msoGradientDesert = 6
msoGradientOcean = 7
msoGradientCalmWater = 8
msoGradientFire = 9
msoGradientFog = 10
msoGradientMoss = 11
msoGradientPeacock = 12
msoGradientWheat = 13
msoGradientParchment = 14
msoGradientMahogany = 15
msoGradientRainbow = 16
msoGradientRainbowII = 17
msoGradientGold = 18
msoGradientGoldII = 19
msoGradientBrass = 20
msoGradientChrome = 21
msoGradientChromeII = 22
msoGradientSilver = 23
msoGradientSapphire = 24
MsoPresetGradientType = c_int # enum

# values for enumeration 'MsoPresetTexture'
msoPresetTextureMixed = -2
msoTexturePapyrus = 1
msoTextureCanvas = 2
msoTextureDenim = 3
msoTextureWovenMat = 4
msoTextureWaterDroplets = 5
msoTexturePaperBag = 6
msoTextureFishFossil = 7
msoTextureSand = 8
msoTextureGreenMarble = 9
msoTextureWhiteMarble = 10
msoTextureBrownMarble = 11
msoTextureGranite = 12
msoTextureNewsprint = 13
msoTextureRecycledPaper = 14
msoTextureParchment = 15
msoTextureStationery = 16
msoTextureBlueTissuePaper = 17
msoTexturePinkTissuePaper = 18
msoTexturePurpleMesh = 19
msoTextureBouquet = 20
msoTextureCork = 21
msoTextureWalnut = 22
msoTextureOak = 23
msoTextureMediumWood = 24
MsoPresetTexture = c_int # enum

# values for enumeration 'MsoGradientColorType'
msoGradientColorMixed = -2
msoGradientOneColor = 1
msoGradientTwoColors = 2
msoGradientPresetColors = 3
msoGradientMultiColor = 4
MsoGradientColorType = c_int # enum

# values for enumeration 'MsoTextureType'
msoTextureTypeMixed = -2
msoTexturePreset = 1
msoTextureUserDefined = 2
MsoTextureType = c_int # enum

# values for enumeration 'MsoFillType'
msoFillMixed = -2
msoFillSolid = 1
msoFillPatterned = 2
msoFillGradient = 3
msoFillTextured = 4
msoFillBackground = 5
msoFillPicture = 6
MsoFillType = c_int # enum

# values for enumeration 'MsoTextureAlignment'
msoTextureAlignmentMixed = -2
msoTextureTopLeft = 0
msoTextureTop = 1
msoTextureTopRight = 2
msoTextureLeft = 3
msoTextureCenter = 4
msoTextureRight = 5
msoTextureBottomLeft = 6
msoTextureBottom = 7
msoTextureBottomRight = 8
MsoTextureAlignment = c_int # enum
FillFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'Background'),
    COMMETHOD([dispid(11)], HRESULT, 'OneColorGradient',
              ( ['in'], MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([dispid(12)], HRESULT, 'Patterned',
              ( ['in'], MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetGradient',
              ( ['in'], MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], MsoPresetGradientType, 'PresetGradientType' )),
    COMMETHOD([dispid(14)], HRESULT, 'PresetTextured',
              ( ['in'], MsoPresetTexture, 'PresetTexture' )),
    COMMETHOD([dispid(15)], HRESULT, 'Solid'),
    COMMETHOD([dispid(16)], HRESULT, 'TwoColorGradient',
              ( ['in'], MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([dispid(17)], HRESULT, 'UserPicture',
              ( ['in'], BSTR, 'PictureFile' )),
    COMMETHOD([dispid(18)], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'BackColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'BackColor',
              ( ['in'], POINTER(ColorFormat), 'BackColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'GradientColorType',
              ( ['retval', 'out'], POINTER(MsoGradientColorType), 'GradientColorType' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'GradientDegree',
              ( ['retval', 'out'], POINTER(c_float), 'GradientDegree' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'GradientStyle',
              ( ['retval', 'out'], POINTER(MsoGradientStyle), 'GradientStyle' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'GradientVariant',
              ( ['retval', 'out'], POINTER(c_int), 'GradientVariant' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(MsoPatternType), 'Pattern' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetGradientType',
              ( ['retval', 'out'], POINTER(MsoPresetGradientType), 'PresetGradientType' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTexture',
              ( ['retval', 'out'], POINTER(MsoPresetTexture), 'PresetTexture' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'TextureName',
              ( ['retval', 'out'], POINTER(BSTR), 'TextureName' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'TextureType',
              ( ['retval', 'out'], POINTER(MsoTextureType), 'TextureType' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['retval', 'out'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoFillType), 'Type' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Visible' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Visible',
              ( ['in'], MsoTriState, 'Visible' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'GradientStops',
              ( ['retval', 'out'], POINTER(POINTER(GradientStops)), 'GradientStops' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'TextureOffsetX',
              ( ['retval', 'out'], POINTER(c_float), 'TextureOffsetX' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'TextureOffsetX',
              ( ['in'], c_float, 'TextureOffsetX' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'TextureOffsetY',
              ( ['retval', 'out'], POINTER(c_float), 'TextureOffsetY' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'TextureOffsetY',
              ( ['in'], c_float, 'TextureOffsetY' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'TextureAlignment',
              ( ['retval', 'out'], POINTER(MsoTextureAlignment), 'TextureAlignment' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'TextureAlignment',
              ( ['in'], MsoTextureAlignment, 'TextureAlignment' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'TextureHorizontalScale',
              ( ['retval', 'out'], POINTER(c_float), 'HorizontalScale' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'TextureHorizontalScale',
              ( ['in'], c_float, 'HorizontalScale' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'TextureVerticalScale',
              ( ['retval', 'out'], POINTER(c_float), 'VerticalScale' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'TextureVerticalScale',
              ( ['in'], c_float, 'VerticalScale' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextureTile',
              ( ['retval', 'out'], POINTER(MsoTriState), 'TextureTile' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'TextureTile',
              ( ['in'], MsoTriState, 'TextureTile' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotateWithObject',
              ( ['retval', 'out'], POINTER(MsoTriState), 'RotateWithObject' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotateWithObject',
              ( ['in'], MsoTriState, 'RotateWithObject' )),
]
################################################################
## code template for FillFormat implementation
##class FillFormat_Impl(object):
##    def Background(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return PresetGradientType
##
##    def UserPicture(self, PictureFile):
##        '-no docstring-'
##        #return 
##
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return GradientDegree
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureTile
##    def _set(self, TextureTile):
##        '-no docstring-'
##    TextureTile = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return PresetTexture
##
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return Pattern
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureAlignment
##    def _set(self, TextureAlignment):
##        '-no docstring-'
##    TextureAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotateWithObject
##    def _set(self, RotateWithObject):
##        '-no docstring-'
##    RotateWithObject = property(_get, _set, doc = _set.__doc__)
##
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureOffsetX
##    def _set(self, TextureOffsetX):
##        '-no docstring-'
##    TextureOffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BackColor
##    def _set(self, BackColor):
##        '-no docstring-'
##    BackColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizontalScale
##    def _set(self, HorizontalScale):
##        '-no docstring-'
##    TextureHorizontalScale = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return GradientStyle
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return GradientColorType
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GradientStops(self):
##        '-no docstring-'
##        #return GradientStops
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return TextureName
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return GradientVariant
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureOffsetY
##    def _set(self, TextureOffsetY):
##        '-no docstring-'
##    TextureOffsetY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return TextureType
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return VerticalScale
##    def _set(self, VerticalScale):
##        '-no docstring-'
##    TextureVerticalScale = property(_get, _set, doc = _set.__doc__)
##

class IRibbonUI(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A7-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
IRibbonUI._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'Invalidate'),
    COMMETHOD([dispid(2)], HRESULT, 'InvalidateControl',
              ( ['in'], BSTR, 'ControlID' )),
]
################################################################
## code template for IRibbonUI implementation
##class IRibbonUI_Impl(object):
##    def InvalidateControl(self, ControlID):
##        '-no docstring-'
##        #return 
##
##    def Invalidate(self):
##        '-no docstring-'
##        #return 
##

class ICTPFactory(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C033D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ICTPFactory._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'CreateCTP',
              ( ['in'], BSTR, 'CTPAxID' ),
              ( ['in'], BSTR, 'CTPTitle' ),
              ( ['in', 'optional'], VARIANT, 'CTPParentWindow' ),
              ( ['retval', 'out'], POINTER(POINTER(_CustomTaskPane)), 'CTPInst' )),
]
################################################################
## code template for ICTPFactory implementation
##class ICTPFactory_Impl(object):
##    def CreateCTP(self, CTPAxID, CTPTitle, CTPParentWindow):
##        '-no docstring-'
##        #return CTPInst
##

class SharedWorkspaceFiles(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C037C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SharedWorkspaceFile(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C037B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceFiles._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceFile)), 'ppidisp' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT, 'ParentFolder' ),
              ( ['in', 'optional'], VARIANT, 'OverwriteIfFileAlreadyExists' ),
              ( ['in', 'optional'], VARIANT, 'KeepInSync' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceFile)), 'ppFile' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ItemCountExceeded',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pf' )),
]
################################################################
## code template for SharedWorkspaceFiles implementation
##class SharedWorkspaceFiles_Impl(object):
##    @property
##    def ItemCountExceeded(self):
##        '-no docstring-'
##        #return pf
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Add(self, FileName, ParentFolder, OverwriteIfFileAlreadyExists, KeepInSync):
##        '-no docstring-'
##        #return ppFile
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcItems
##

class CommandBarPopup(CommandBarControl):
    _case_insensitive_ = True
    _iid_ = GUID('{000C030A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoOLEMenuGroup'
msoOLEMenuGroupNone = -1
msoOLEMenuGroupFile = 0
msoOLEMenuGroupEdit = 1
msoOLEMenuGroupContainer = 2
msoOLEMenuGroupObject = 3
msoOLEMenuGroupWindow = 4
msoOLEMenuGroupHelp = 5
MsoOLEMenuGroup = c_int # enum
CommandBarPopup._methods_ = [
    COMMETHOD([dispid(1610940416), 'propget'], HRESULT, 'CommandBar',
              ( ['retval', 'out'], POINTER(POINTER(CommandBar)), 'ppcb' )),
    COMMETHOD([dispid(1610940417), 'propget'], HRESULT, 'Controls',
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControls)), 'ppcbcs' )),
    COMMETHOD([dispid(1610940418), 'propget'], HRESULT, 'OLEMenuGroup',
              ( ['retval', 'out'], POINTER(MsoOLEMenuGroup), 'pomg' )),
    COMMETHOD([dispid(1610940418), 'propput'], HRESULT, 'OLEMenuGroup',
              ( ['in'], MsoOLEMenuGroup, 'pomg' )),
]
################################################################
## code template for CommandBarPopup implementation
##class CommandBarPopup_Impl(object):
##    @property
##    def Controls(self):
##        '-no docstring-'
##        #return ppcbcs
##
##    @property
##    def CommandBar(self):
##        '-no docstring-'
##        #return ppcb
##
##    def _get(self):
##        '-no docstring-'
##        #return pomg
##    def _set(self, pomg):
##        '-no docstring-'
##    OLEMenuGroup = property(_get, _set, doc = _set.__doc__)
##

_CustomTaskPaneEvents._disp_methods_ = [
    DISPMETHOD([dispid(1)], None, 'VisibleStateChange',
               ( ['in'], POINTER(_CustomTaskPane), 'CustomTaskPaneInst' )),
    DISPMETHOD([dispid(2)], None, 'DockPositionStateChange',
               ( ['in'], POINTER(_CustomTaskPane), 'CustomTaskPaneInst' )),
]

# values for enumeration 'MsoDocInspectorStatus'
msoDocInspectorStatusDocOk = 0
msoDocInspectorStatusIssueFound = 1
msoDocInspectorStatusError = 2
MsoDocInspectorStatus = c_int # enum
DocumentInspector._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'Description' )),
    COMMETHOD([dispid(2)], HRESULT, 'Inspect',
              ( ['out'], POINTER(MsoDocInspectorStatus), 'Status' ),
              ( ['out'], POINTER(BSTR), 'Results' )),
    COMMETHOD([dispid(3)], HRESULT, 'Fix',
              ( ['out'], POINTER(MsoDocInspectorStatus), 'Status' ),
              ( ['out'], POINTER(BSTR), 'Results' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for DocumentInspector implementation
##class DocumentInspector_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return Description
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    def Fix(self):
##        '-no docstring-'
##        #return Status, Results
##
##    def Inspect(self):
##        '-no docstring-'
##        #return Status, Results
##

class ICustomTaskPaneConsumer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C033E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ICustomTaskPaneConsumer._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'CTPFactoryAvailable',
              ( ['in'], POINTER(ICTPFactory), 'CTPFactoryInst' )),
]
################################################################
## code template for ICustomTaskPaneConsumer implementation
##class ICustomTaskPaneConsumer_Impl(object):
##    def CTPFactoryAvailable(self, CTPFactoryInst):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoDateTimeFormat'
msoDateTimeFormatMixed = -2
msoDateTimeMdyy = 1
msoDateTimeddddMMMMddyyyy = 2
msoDateTimedMMMMyyyy = 3
msoDateTimeMMMMdyyyy = 4
msoDateTimedMMMyy = 5
msoDateTimeMMMMyy = 6
msoDateTimeMMyy = 7
msoDateTimeMMddyyHmm = 8
msoDateTimeMMddyyhmmAMPM = 9
msoDateTimeHmm = 10
msoDateTimeHmmss = 11
msoDateTimehmmAMPM = 12
msoDateTimehmmssAMPM = 13
msoDateTimeFigureOut = 14
MsoDateTimeFormat = c_int # enum
class GroupShapes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0316-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
GroupShapes._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pnShapes' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(10)], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'Range' )),
]
################################################################
## code template for GroupShapes implementation
##class GroupShapes_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return Range
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pnShapes
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##


# values for enumeration 'MsoBevelType'
msoBevelTypeMixed = -2
msoBevelNone = 1
msoBevelRelaxedInset = 2
msoBevelCircle = 3
msoBevelSlope = 4
msoBevelCross = 5
msoBevelAngle = 6
msoBevelSoftRound = 7
msoBevelConvex = 8
msoBevelCoolSlant = 9
msoBevelDivot = 10
msoBevelRiblet = 11
msoBevelHardEdge = 12
msoBevelArtDeco = 13
MsoBevelType = c_int # enum

# values for enumeration 'MsoFontLanguageIndex'
msoThemeLatin = 1
msoThemeComplexScript = 2
msoThemeEastAsian = 3
MsoFontLanguageIndex = c_int # enum
class IRibbonExtensibility(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0396-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
IRibbonExtensibility._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'GetCustomUI',
              ( ['in'], BSTR, 'RibbonID' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RibbonXml' )),
]
################################################################
## code template for IRibbonExtensibility implementation
##class IRibbonExtensibility_Impl(object):
##    def GetCustomUI(self, RibbonID):
##        '-no docstring-'
##        #return RibbonXml
##


# values for enumeration 'MsoTextTabAlign'
msoTabAlignMixed = -2
msoTabAlignLeft = 0
msoTabAlignCenter = 1
msoTabAlignRight = 2
msoTabAlignDecimal = 3
MsoTextTabAlign = c_int # enum
IMsoDataLabel._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoCharacters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLinked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowLegendKey',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlDataLabelPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowSeriesName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowCategoryName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowValue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowPercentage',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowBubbleSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Separator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'pval' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoDataLabel implementation
##class IMsoDataLabel_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##


# values for enumeration 'MsoThemeColorIndex'
msoThemeColorMixed = -2
msoNotThemeColor = 0
msoThemeColorDark1 = 1
msoThemeColorLight1 = 2
msoThemeColorDark2 = 3
msoThemeColorLight2 = 4
msoThemeColorAccent1 = 5
msoThemeColorAccent2 = 6
msoThemeColorAccent3 = 7
msoThemeColorAccent4 = 8
msoThemeColorAccent5 = 9
msoThemeColorAccent6 = 10
msoThemeColorHyperlink = 11
msoThemeColorFollowedHyperlink = 12
msoThemeColorText1 = 13
msoThemeColorBackground1 = 14
msoThemeColorText2 = 15
msoThemeColorBackground2 = 16
MsoThemeColorIndex = c_int # enum
class ThemeColorScheme(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']

# values for enumeration 'MsoThemeColorSchemeIndex'
msoThemeDark1 = 1
msoThemeLight1 = 2
msoThemeDark2 = 3
msoThemeLight2 = 4
msoThemeAccent1 = 5
msoThemeAccent2 = 6
msoThemeAccent3 = 7
msoThemeAccent4 = 8
msoThemeAccent5 = 9
msoThemeAccent6 = 10
msoThemeHyperlink = 11
msoThemeFollowedHyperlink = 12
MsoThemeColorSchemeIndex = c_int # enum
class ThemeColor(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A1-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
ThemeColorScheme._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Colors',
              ( ['in'], MsoThemeColorSchemeIndex, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ThemeColor)), 'Color' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(3)], HRESULT, 'Load',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(4)], HRESULT, 'Save',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(5)], HRESULT, 'GetCustomColor',
              ( ['in'], BSTR, 'Name' ),
              ( ['retval', 'out'], POINTER(MsoRGBType), 'CustomColor' )),
]
################################################################
## code template for ThemeColorScheme implementation
##class ThemeColorScheme_Impl(object):
##    def Colors(self, Index):
##        '-no docstring-'
##        #return Color
##
##    def Save(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def Load(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def GetCustomColor(self, Name):
##        '-no docstring-'
##        #return CustomColor
##


# values for enumeration 'MailFormat'
mfPlainText = 1
mfHTML = 2
mfRTF = 3
MailFormat = c_int # enum
class IMsoDropLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C172C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoDropLines._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'Select'),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoDropLines implementation
##class IMsoDropLines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##

ChartFont._methods_ = [
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Background',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Background',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'Bold',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Bold',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'FontStyle',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'FontStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Italic',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Italic',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Name',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'OutlineFont',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'OutlineFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'Size',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'StrikeThrough',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'StrikeThrough',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'Subscript',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'Subscript',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'Superscript',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'Superscript',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743834), 'propput'], HRESULT, 'Underline',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Underline',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for ChartFont implementation
##class ChartFont_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Background = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    FontStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Underline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Superscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    OutlineFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    StrikeThrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Subscript = property(_get, _set, doc = _set.__doc__)
##

class WorkflowTasks(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD901-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
WorkflowTasks._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkflowTask)), 'ppret' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pCount' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for WorkflowTasks implementation
##class WorkflowTasks_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppret
##

class SharedWorkspaceFolder(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C037D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceFolder._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'FolderName',
              ( ['retval', 'out'], POINTER(BSTR), 'FolderName' )),
    COMMETHOD([dispid(1)], HRESULT, 'Delete',
              ( ['in', 'optional'], VARIANT, 'DeleteEventIfFolderContainsFiles' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for SharedWorkspaceFolder implementation
##class SharedWorkspaceFolder_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def FolderName(self):
##        '-no docstring-'
##        #return FolderName
##
##    def Delete(self, DeleteEventIfFolderContainsFiles):
##        '-no docstring-'
##        #return 
##

class Trendlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1722-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
Trendlines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], XlTrendlineType, 'Type', -4132 ),
              ( ['in', 'optional'], VARIANT, 'Order' ),
              ( ['in', 'optional'], VARIANT, 'Period' ),
              ( ['in', 'optional'], VARIANT, 'Forward' ),
              ( ['in', 'optional'], VARIANT, 'Backward' ),
              ( ['in', 'optional'], VARIANT, 'Intercept' ),
              ( ['in', 'optional'], VARIANT, 'DisplayEquation' ),
              ( ['in', 'optional'], VARIANT, 'DisplayRSquared' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoTrendline)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoTrendline)), 'RHS' )),
    COMMETHOD(['nonbrowsable'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoTrendline)), 'RHS' )),
]
################################################################
## code template for Trendlines implementation
##class Trendlines_Impl(object):
##    def Add(self, Type, Order, Period, Forward, Backward, Intercept, DisplayEquation, DisplayRSquared, Name):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##

class WorkflowTemplates(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD903-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class WorkflowTemplate(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD902-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
WorkflowTemplates._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkflowTemplate)), 'ppret' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pCount' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for WorkflowTemplates implementation
##class WorkflowTemplates_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppret
##


# values for enumeration 'MsoTextStrike'
msoStrikeMixed = -2
msoNoStrike = 0
msoSingleStrike = 1
msoDoubleStrike = 2
MsoTextStrike = c_int # enum

# values for enumeration 'MsoPresetCamera'
msoPresetCameraMixed = -2
msoCameraLegacyObliqueTopLeft = 1
msoCameraLegacyObliqueTop = 2
msoCameraLegacyObliqueTopRight = 3
msoCameraLegacyObliqueLeft = 4
msoCameraLegacyObliqueFront = 5
msoCameraLegacyObliqueRight = 6
msoCameraLegacyObliqueBottomLeft = 7
msoCameraLegacyObliqueBottom = 8
msoCameraLegacyObliqueBottomRight = 9
msoCameraLegacyPerspectiveTopLeft = 10
msoCameraLegacyPerspectiveTop = 11
msoCameraLegacyPerspectiveTopRight = 12
msoCameraLegacyPerspectiveLeft = 13
msoCameraLegacyPerspectiveFront = 14
msoCameraLegacyPerspectiveRight = 15
msoCameraLegacyPerspectiveBottomLeft = 16
msoCameraLegacyPerspectiveBottom = 17
msoCameraLegacyPerspectiveBottomRight = 18
msoCameraOrthographicFront = 19
msoCameraIsometricTopUp = 20
msoCameraIsometricTopDown = 21
msoCameraIsometricBottomUp = 22
msoCameraIsometricBottomDown = 23
msoCameraIsometricLeftUp = 24
msoCameraIsometricLeftDown = 25
msoCameraIsometricRightUp = 26
msoCameraIsometricRightDown = 27
msoCameraIsometricOffAxis1Left = 28
msoCameraIsometricOffAxis1Right = 29
msoCameraIsometricOffAxis1Top = 30
msoCameraIsometricOffAxis2Left = 31
msoCameraIsometricOffAxis2Right = 32
msoCameraIsometricOffAxis2Top = 33
msoCameraIsometricOffAxis3Left = 34
msoCameraIsometricOffAxis3Right = 35
msoCameraIsometricOffAxis3Bottom = 36
msoCameraIsometricOffAxis4Left = 37
msoCameraIsometricOffAxis4Right = 38
msoCameraIsometricOffAxis4Bottom = 39
msoCameraObliqueTopLeft = 40
msoCameraObliqueTop = 41
msoCameraObliqueTopRight = 42
msoCameraObliqueLeft = 43
msoCameraObliqueRight = 44
msoCameraObliqueBottomLeft = 45
msoCameraObliqueBottom = 46
msoCameraObliqueBottomRight = 47
msoCameraPerspectiveFront = 48
msoCameraPerspectiveLeft = 49
msoCameraPerspectiveRight = 50
msoCameraPerspectiveAbove = 51
msoCameraPerspectiveBelow = 52
msoCameraPerspectiveAboveLeftFacing = 53
msoCameraPerspectiveAboveRightFacing = 54
msoCameraPerspectiveContrastingLeftFacing = 55
msoCameraPerspectiveContrastingRightFacing = 56
msoCameraPerspectiveHeroicLeftFacing = 57
msoCameraPerspectiveHeroicRightFacing = 58
msoCameraPerspectiveHeroicExtremeLeftFacing = 59
msoCameraPerspectiveHeroicExtremeRightFacing = 60
msoCameraPerspectiveRelaxed = 61
msoCameraPerspectiveRelaxedModerately = 62
MsoPresetCamera = c_int # enum
IMsoEnvelopeVBEvents._disp_methods_ = [
    DISPMETHOD([dispid(1)], None, 'EnvelopeShow'),
    DISPMETHOD([dispid(2)], None, 'EnvelopeHide'),
]
class Axes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1712-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
Axes._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Item',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoAxis)), 'RHS' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'pval' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(0), 'nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoAxis)), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for Axes implementation
##class Axes_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Item(self, Type, AxisGroup):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Type, AxisGroup):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##

class IMsoHyperlinks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{A98639A1-CB0C-4A5C-A511-96547F752ACD}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
IMsoHyperlinks._methods_ = [
]
################################################################
## code template for IMsoHyperlinks implementation
##class IMsoHyperlinks_Impl(object):

class IAssistance(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4291224C-DEFE-485B-8E69-6CF8AA85CB76}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
IAssistance._methods_ = [
    COMMETHOD([dispid(1610743808), helpstring('ShowHelp Method')], HRESULT, 'ShowHelp',
              ( ['in', 'optional'], BSTR, 'HelpId', '' ),
              ( ['in', 'optional'], BSTR, 'Scope', '' )),
    COMMETHOD([dispid(1610743809), helpstring('SearchHelp Method')], HRESULT, 'SearchHelp',
              ( ['in'], BSTR, 'Query' ),
              ( ['in', 'optional'], BSTR, 'Scope', '' )),
    COMMETHOD([dispid(1610743810), helpstring('SetDefaultContext Method')], HRESULT, 'SetDefaultContext',
              ( ['in'], BSTR, 'HelpId' )),
    COMMETHOD([dispid(1610743811), helpstring('ClearDefaultContext Method')], HRESULT, 'ClearDefaultContext',
              ( ['in'], BSTR, 'HelpId' )),
]
################################################################
## code template for IAssistance implementation
##class IAssistance_Impl(object):
##    def SetDefaultContext(self, HelpId):
##        'SetDefaultContext Method'
##        #return 
##
##    def ShowHelp(self, HelpId, Scope):
##        'ShowHelp Method'
##        #return 
##
##    def SearchHelp(self, Query, Scope):
##        'SearchHelp Method'
##        #return 
##
##    def ClearDefaultContext(self, HelpId):
##        'ClearDefaultContext Method'
##        #return 
##

class OfficeDataSourceObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1530-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoMoveRow'
msoMoveRowFirst = -4
msoMoveRowPrev = -3
msoMoveRowNext = -2
msoMoveRowNbr = -1
MsoMoveRow = c_int # enum
OfficeDataSourceObject._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ConnectString',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrConnect' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'ConnectString',
              ( ['in'], BSTR, 'pbstrConnect' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Table',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrTable' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Table',
              ( ['in'], BSTR, 'pbstrTable' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'DataSource',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrSrc' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'DataSource',
              ( ['in'], BSTR, 'pbstrSrc' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Columns',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppColumns' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'RowCount',
              ( ['retval', 'out'], POINTER(c_int), 'pcRows' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Filters',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppFilters' )),
    COMMETHOD([dispid(1610743817)], HRESULT, 'Move',
              ( ['in'], MsoMoveRow, 'MsoMoveRow' ),
              ( ['in', 'optional'], c_int, 'RowNbr', 1 ),
              ( ['retval', 'out'], POINTER(c_int), 'rval' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'Open',
              ( ['in', 'optional'], BSTR, 'bstrSrc', '' ),
              ( ['in', 'optional'], BSTR, 'bstrConnect', '' ),
              ( ['in', 'optional'], BSTR, 'bstrTable', '' ),
              ( ['in', 'optional'], c_int, 'fOpenExclusive', 0 ),
              ( ['in', 'optional'], c_int, 'fNeverPrompt', 1 )),
    COMMETHOD([dispid(1610743819)], HRESULT, 'SetSortOrder',
              ( ['in'], BSTR, 'SortField1' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'SortAscending1', True ),
              ( ['in', 'optional'], BSTR, 'SortField2', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'SortAscending2', True ),
              ( ['in', 'optional'], BSTR, 'SortField3', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'SortAscending3', True )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'ApplyFilter'),
]
################################################################
## code template for OfficeDataSourceObject implementation
##class OfficeDataSourceObject_Impl(object):
##    def ApplyFilter(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return ppColumns
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrConnect
##    def _set(self, pbstrConnect):
##        '-no docstring-'
##    ConnectString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrTable
##    def _set(self, pbstrTable):
##        '-no docstring-'
##    Table = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Filters(self):
##        '-no docstring-'
##        #return ppFilters
##
##    @property
##    def RowCount(self):
##        '-no docstring-'
##        #return pcRows
##
##    def SetSortOrder(self, SortField1, SortAscending1, SortField2, SortAscending2, SortField3, SortAscending3):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrSrc
##    def _set(self, pbstrSrc):
##        '-no docstring-'
##    DataSource = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, MsoMoveRow, RowNbr):
##        '-no docstring-'
##        #return rval
##
##    def Open(self, bstrSrc, bstrConnect, bstrTable, fOpenExclusive, fNeverPrompt):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoOrgChartOrientation'
msoOrgChartOrientationMixed = -2
msoOrgChartOrientationVertical = 1
MsoOrgChartOrientation = c_int # enum
class IMsoLeaderLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1723-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoLeaderLines._methods_ = [
    COMMETHOD([dispid(235)], HRESULT, 'Select'),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IMsoLeaderLines implementation
##class IMsoLeaderLines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##


# values for enumeration 'MsoTextCaps'
msoCapsMixed = -2
msoNoCaps = 0
msoSmallCaps = 1
msoAllCaps = 2
MsoTextCaps = c_int # enum

# values for enumeration 'RibbonControlSize'
RibbonControlSizeRegular = 0
RibbonControlSizeLarge = 1
RibbonControlSize = c_int # enum

# values for enumeration 'MsoPresetLightingSoftness'
msoPresetLightingSoftnessMixed = -2
msoLightingDim = 1
msoLightingNormal = 2
msoLightingBright = 3
MsoPresetLightingSoftness = c_int # enum

# values for enumeration 'MsoSyncAvailableType'
msoSyncAvailableNone = 0
msoSyncAvailableOffline = 1
msoSyncAvailableAnywhere = 2
MsoSyncAvailableType = c_int # enum

# values for enumeration 'MsoPresetTextEffectShape'
msoTextEffectShapeMixed = -2
msoTextEffectShapePlainText = 1
msoTextEffectShapeStop = 2
msoTextEffectShapeTriangleUp = 3
msoTextEffectShapeTriangleDown = 4
msoTextEffectShapeChevronUp = 5
msoTextEffectShapeChevronDown = 6
msoTextEffectShapeRingInside = 7
msoTextEffectShapeRingOutside = 8
msoTextEffectShapeArchUpCurve = 9
msoTextEffectShapeArchDownCurve = 10
msoTextEffectShapeCircleCurve = 11
msoTextEffectShapeButtonCurve = 12
msoTextEffectShapeArchUpPour = 13
msoTextEffectShapeArchDownPour = 14
msoTextEffectShapeCirclePour = 15
msoTextEffectShapeButtonPour = 16
msoTextEffectShapeCurveUp = 17
msoTextEffectShapeCurveDown = 18
msoTextEffectShapeCanUp = 19
msoTextEffectShapeCanDown = 20
msoTextEffectShapeWave1 = 21
msoTextEffectShapeWave2 = 22
msoTextEffectShapeDoubleWave1 = 23
msoTextEffectShapeDoubleWave2 = 24
msoTextEffectShapeInflate = 25
msoTextEffectShapeDeflate = 26
msoTextEffectShapeInflateBottom = 27
msoTextEffectShapeDeflateBottom = 28
msoTextEffectShapeInflateTop = 29
msoTextEffectShapeDeflateTop = 30
msoTextEffectShapeDeflateInflate = 31
msoTextEffectShapeDeflateInflateDeflate = 32
msoTextEffectShapeFadeRight = 33
msoTextEffectShapeFadeLeft = 34
msoTextEffectShapeFadeUp = 35
msoTextEffectShapeFadeDown = 36
msoTextEffectShapeSlantUp = 37
msoTextEffectShapeSlantDown = 38
msoTextEffectShapeCascadeUp = 39
msoTextEffectShapeCascadeDown = 40
MsoPresetTextEffectShape = c_int # enum

# values for enumeration 'MsoSyncStatusType'
msoSyncStatusNoSharedWorkspace = 0
msoSyncStatusNotRoaming = 0
msoSyncStatusLatest = 1
msoSyncStatusNewerAvailable = 2
msoSyncStatusLocalChanges = 3
msoSyncStatusConflict = 4
msoSyncStatusSuspended = 5
msoSyncStatusError = 6
MsoSyncStatusType = c_int # enum

# values for enumeration 'MsoHTMLProjectState'
msoHTMLProjectStateDocumentLocked = 1
msoHTMLProjectStateProjectLocked = 2
msoHTMLProjectStateDocumentProjectUnlocked = 3
MsoHTMLProjectState = c_int # enum

# values for enumeration 'MsoConnector'
msoConnectorAnd = 1
msoConnectorOr = 2
MsoConnector = c_int # enum
class HTMLProjectItems(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0357-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
HTMLProjectItems._methods_ = [
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(HTMLProjectItem)), 'RetValue' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(-4), 'restricted', 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RetValue' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for HTMLProjectItems implementation
##class HTMLProjectItems_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RetValue
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RetValue
##

class HTMLProject(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0356-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
HTMLProject._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'State',
              ( ['retval', 'out'], POINTER(MsoHTMLProjectState), 'State' )),
    COMMETHOD([dispid(1)], HRESULT, 'RefreshProject',
              ( ['in', 'optional'], VARIANT_BOOL, 'Refresh', True )),
    COMMETHOD([dispid(2)], HRESULT, 'RefreshDocument',
              ( ['in', 'optional'], VARIANT_BOOL, 'Refresh', True )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'HTMLProjectItems',
              ( ['retval', 'out'], POINTER(POINTER(HTMLProjectItems)), 'HTMLProjectItems' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(5)], HRESULT, 'Open',
              ( ['in', 'optional'], MsoHTMLProjectOpen, 'OpenKind', 0 )),
]
################################################################
## code template for HTMLProject implementation
##class HTMLProject_Impl(object):
##    def RefreshDocument(self, Refresh):
##        '-no docstring-'
##        #return 
##
##    def RefreshProject(self, Refresh):
##        '-no docstring-'
##        #return 
##
##    def Open(self, OpenKind):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def HTMLProjectItems(self):
##        '-no docstring-'
##        #return HTMLProjectItems
##
##    @property
##    def State(self):
##        '-no docstring-'
##        #return State
##


# values for enumeration 'MsoLastModified'
msoLastModifiedYesterday = 1
msoLastModifiedToday = 2
msoLastModifiedLastWeek = 3
msoLastModifiedThisWeek = 4
msoLastModifiedLastMonth = 5
msoLastModifiedThisMonth = 6
msoLastModifiedAnyTime = 7
MsoLastModified = c_int # enum

# values for enumeration 'MsoFileType'
msoFileTypeAllFiles = 1
msoFileTypeOfficeFiles = 2
msoFileTypeWordDocuments = 3
msoFileTypeExcelWorkbooks = 4
msoFileTypePowerPointPresentations = 5
msoFileTypeBinders = 6
msoFileTypeDatabases = 7
msoFileTypeTemplates = 8
msoFileTypeOutlookItems = 9
msoFileTypeMailItem = 10
msoFileTypeCalendarItem = 11
msoFileTypeContactItem = 12
msoFileTypeNoteItem = 13
msoFileTypeJournalItem = 14
msoFileTypeTaskItem = 15
msoFileTypePhotoDrawFiles = 16
msoFileTypeDataConnectionFiles = 17
msoFileTypePublisherFiles = 18
msoFileTypeProjectFiles = 19
msoFileTypeDocumentImagingFiles = 20
msoFileTypeVisioFiles = 21
msoFileTypeDesignerFiles = 22
msoFileTypeWebPages = 23
MsoFileType = c_int # enum

# values for enumeration 'MsoSortOrder'
msoSortOrderAscending = 1
msoSortOrderDescending = 2
MsoSortOrder = c_int # enum
_CommandBarComboBoxEvents._disp_methods_ = [
    DISPMETHOD([dispid(1)], None, 'Change',
               ( ['in'], POINTER(CommandBarComboBox), 'Ctrl' )),
]

# values for enumeration 'MsoTextEffectAlignment'
msoTextEffectAlignmentMixed = -2
msoTextEffectAlignmentLeft = 1
msoTextEffectAlignmentCentered = 2
msoTextEffectAlignmentRight = 3
msoTextEffectAlignmentLetterJustify = 4
msoTextEffectAlignmentWordJustify = 5
msoTextEffectAlignmentStretchJustify = 6
MsoTextEffectAlignment = c_int # enum
class MsoDebugOptions(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C035A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
MsoDebugOptions._methods_ = [
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'FeatureReports',
              ( ['retval', 'out'], POINTER(c_int), 'puintFeatureReports' )),
    COMMETHOD([dispid(4), 'hidden', 'propput'], HRESULT, 'FeatureReports',
              ( ['in'], c_int, 'puintFeatureReports' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'OutputToDebugger',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfOutputToDebugger' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'OutputToDebugger',
              ( ['in'], VARIANT_BOOL, 'pvarfOutputToDebugger' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'OutputToFile',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfOutputToFile' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'OutputToFile',
              ( ['in'], VARIANT_BOOL, 'pvarfOutputToFile' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'OutputToMessageBox',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfOutputToMessageBox' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'OutputToMessageBox',
              ( ['in'], VARIANT_BOOL, 'pvarfOutputToMessageBox' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'UnitTestManager',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppMsoUnitTestManager' )),
]
################################################################
## code template for MsoDebugOptions implementation
##class MsoDebugOptions_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pvarfOutputToMessageBox
##    def _set(self, pvarfOutputToMessageBox):
##        '-no docstring-'
##    OutputToMessageBox = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfOutputToFile
##    def _set(self, pvarfOutputToFile):
##        '-no docstring-'
##    OutputToFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return puintFeatureReports
##    def _set(self, puintFeatureReports):
##        '-no docstring-'
##    FeatureReports = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfOutputToDebugger
##    def _set(self, pvarfOutputToDebugger):
##        '-no docstring-'
##    OutputToDebugger = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UnitTestManager(self):
##        '-no docstring-'
##        #return ppMsoUnitTestManager
##


# values for enumeration 'MsoCondition'
msoConditionFileTypeAllFiles = 1
msoConditionFileTypeOfficeFiles = 2
msoConditionFileTypeWordDocuments = 3
msoConditionFileTypeExcelWorkbooks = 4
msoConditionFileTypePowerPointPresentations = 5
msoConditionFileTypeBinders = 6
msoConditionFileTypeDatabases = 7
msoConditionFileTypeTemplates = 8
msoConditionIncludes = 9
msoConditionIncludesPhrase = 10
msoConditionBeginsWith = 11
msoConditionEndsWith = 12
msoConditionIncludesNearEachOther = 13
msoConditionIsExactly = 14
msoConditionIsNot = 15
msoConditionYesterday = 16
msoConditionToday = 17
msoConditionTomorrow = 18
msoConditionLastWeek = 19
msoConditionThisWeek = 20
msoConditionNextWeek = 21
msoConditionLastMonth = 22
msoConditionThisMonth = 23
msoConditionNextMonth = 24
msoConditionAnytime = 25
msoConditionAnytimeBetween = 26
msoConditionOn = 27
msoConditionOnOrAfter = 28
msoConditionOnOrBefore = 29
msoConditionInTheNext = 30
msoConditionInTheLast = 31
msoConditionEquals = 32
msoConditionDoesNotEqual = 33
msoConditionAnyNumberBetween = 34
msoConditionAtMost = 35
msoConditionAtLeast = 36
msoConditionMoreThan = 37
msoConditionLessThan = 38
msoConditionIsYes = 39
msoConditionIsNo = 40
msoConditionIncludesFormsOf = 41
msoConditionFreeText = 42
msoConditionFileTypeOutlookItems = 43
msoConditionFileTypeMailItem = 44
msoConditionFileTypeCalendarItem = 45
msoConditionFileTypeContactItem = 46
msoConditionFileTypeNoteItem = 47
msoConditionFileTypeJournalItem = 48
msoConditionFileTypeTaskItem = 49
msoConditionFileTypePhotoDrawFiles = 50
msoConditionFileTypeDataConnectionFiles = 51
msoConditionFileTypePublisherFiles = 52
msoConditionFileTypeProjectFiles = 53
msoConditionFileTypeDocumentImagingFiles = 54
msoConditionFileTypeVisioFiles = 55
msoConditionFileTypeDesignerFiles = 56
msoConditionFileTypeWebPages = 57
msoConditionEqualsLow = 58
msoConditionEqualsNormal = 59
msoConditionEqualsHigh = 60
msoConditionNotEqualToLow = 61
msoConditionNotEqualToNormal = 62
msoConditionNotEqualToHigh = 63
msoConditionEqualsNotStarted = 64
msoConditionEqualsInProgress = 65
msoConditionEqualsCompleted = 66
msoConditionEqualsWaitingForSomeoneElse = 67
msoConditionEqualsDeferred = 68
msoConditionNotEqualToNotStarted = 69
msoConditionNotEqualToInProgress = 70
msoConditionNotEqualToCompleted = 71
msoConditionNotEqualToWaitingForSomeoneElse = 72
msoConditionNotEqualToDeferred = 73
MsoCondition = c_int # enum

# values for enumeration 'MsoAlignCmd'
msoAlignLefts = 0
msoAlignCenters = 1
msoAlignRights = 2
msoAlignTops = 3
msoAlignMiddles = 4
msoAlignBottoms = 5
MsoAlignCmd = c_int # enum
class DocumentLibraryVersions(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0388-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DocumentLibraryVersion(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0387-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DocumentLibraryVersions._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(DocumentLibraryVersion)), 'ppidisp' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lCount' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IsVersioningEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfVersioningOn' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
]
################################################################
## code template for DocumentLibraryVersions implementation
##class DocumentLibraryVersions_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def IsVersioningEnabled(self):
##        '-no docstring-'
##        #return pvarfVersioningOn
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    @property
##    def Item(self, lIndex):
##        '-no docstring-'
##        #return ppidisp
##


# values for enumeration 'MsoScriptLocation'
msoScriptLocationInHead = 1
msoScriptLocationInBody = 2
MsoScriptLocation = c_int # enum

# values for enumeration 'MsoSyncErrorType'
msoSyncErrorNone = 0
msoSyncErrorUnauthorizedUser = 1
msoSyncErrorCouldNotConnect = 2
msoSyncErrorOutOfSpace = 3
msoSyncErrorFileNotFound = 4
msoSyncErrorFileTooLarge = 5
msoSyncErrorFileInUse = 6
msoSyncErrorVirusUpload = 7
msoSyncErrorVirusDownload = 8
msoSyncErrorUnknownUpload = 9
msoSyncErrorUnknownDownload = 10
msoSyncErrorCouldNotOpen = 11
msoSyncErrorCouldNotUpdate = 12
msoSyncErrorCouldNotCompare = 13
msoSyncErrorCouldNotResolve = 14
msoSyncErrorNoNetwork = 15
msoSyncErrorUnknown = 16
MsoSyncErrorType = c_int # enum

# values for enumeration 'MsoSyncConflictResolutionType'
msoSyncConflictClientWins = 0
msoSyncConflictServerWins = 1
msoSyncConflictMerge = 2
MsoSyncConflictResolutionType = c_int # enum

# values for enumeration 'MsoPresetLightingDirection'
msoPresetLightingDirectionMixed = -2
msoLightingTopLeft = 1
msoLightingTop = 2
msoLightingTopRight = 3
msoLightingLeft = 4
msoLightingNone = 5
msoLightingRight = 6
msoLightingBottomLeft = 7
msoLightingBottom = 8
msoLightingBottomRight = 9
MsoPresetLightingDirection = c_int # enum

# values for enumeration 'MsoSyncVersionType'
msoSyncVersionLastViewed = 0
msoSyncVersionServer = 1
MsoSyncVersionType = c_int # enum

# values for enumeration 'MsoSyncCompareType'
msoSyncCompareAndMerge = 0
msoSyncCompareSideBySide = 1
MsoSyncCompareType = c_int # enum
PolicyItem._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrID' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrDescription' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Data',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrStatement' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for PolicyItem implementation
##class PolicyItem_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return pbstrDescription
##
##    @property
##    def Data(self):
##        '-no docstring-'
##        #return pbstrStatement
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pbstrID
##


# values for enumeration 'MsoSyncEventType'
msoSyncEventDownloadInitiated = 0
msoSyncEventDownloadSucceeded = 1
msoSyncEventDownloadFailed = 2
msoSyncEventUploadInitiated = 3
msoSyncEventUploadSucceeded = 4
msoSyncEventUploadFailed = 5
msoSyncEventDownloadNoChange = 6
msoSyncEventOffline = 7
MsoSyncEventType = c_int # enum
class DocumentProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2DF8D04D-5BFA-101B-BDE5-00AA0044DE52}')
    _idlflags_ = []
class DocumentProperty(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2DF8D04E-5BFA-101B-BDE5-00AA0044DE52}')
    _idlflags_ = []
DocumentProperties._methods_ = [
    COMMETHOD(['propget'], POINTER(IDispatch), 'Parent'),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(DocumentProperty)), 'ppIDocProp' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pc' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], VARIANT_BOOL, 'LinkToContent' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Value' ),
              ( ['in', 'optional'], VARIANT, 'LinkSource' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(DocumentProperty)), 'ppIDocProp' )),
    COMMETHOD(['nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'plCreator' )),
]
################################################################
## code template for DocumentProperties implementation
##class DocumentProperties_Impl(object):
##    def Add(self, Name, LinkToContent, Type, Value, LinkSource, lcid):
##        '-no docstring-'
##        #return ppIDocProp
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index, lcid):
##        '-no docstring-'
##        #return ppIDocProp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pc
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##

IMsoDisplayUnitLabel._methods_ = [
]
################################################################
## code template for IMsoDisplayUnitLabel implementation
##class IMsoDisplayUnitLabel_Impl(object):


# values for enumeration 'MsoTextUnderlineType'
msoUnderlineMixed = -2
msoNoUnderline = 0
msoUnderlineWords = 1
msoUnderlineSingleLine = 2
msoUnderlineDoubleLine = 3
msoUnderlineHeavyLine = 4
msoUnderlineDottedLine = 5
msoUnderlineDottedHeavyLine = 6
msoUnderlineDashLine = 7
msoUnderlineDashHeavyLine = 8
msoUnderlineDashLongLine = 9
msoUnderlineDashLongHeavyLine = 10
msoUnderlineDotDashLine = 11
msoUnderlineDotDashHeavyLine = 12
msoUnderlineDotDotDashLine = 13
msoUnderlineDotDotDashHeavyLine = 14
msoUnderlineWavyLine = 15
msoUnderlineWavyHeavyLine = 16
msoUnderlineWavyDoubleLine = 17
MsoTextUnderlineType = c_int # enum
class GlowFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03BD-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ReflectionFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03BE-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class LineFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0317-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class ShadowFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoSoftEdgeType'
msoSoftEdgeTypeMixed = -2
msoSoftEdgeTypeNone = 0
msoSoftEdgeType1 = 1
msoSoftEdgeType2 = 2
msoSoftEdgeType3 = 3
msoSoftEdgeType4 = 4
msoSoftEdgeType5 = 5
msoSoftEdgeType6 = 6
MsoSoftEdgeType = c_int # enum
Font2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Bold',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Bold' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Bold',
              ( ['in'], MsoTriState, 'Bold' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Italic',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Italic' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Italic',
              ( ['in'], MsoTriState, 'Italic' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Strike',
              ( ['retval', 'out'], POINTER(MsoTextStrike), 'Strike' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Strike',
              ( ['in'], MsoTextStrike, 'Strike' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Caps',
              ( ['retval', 'out'], POINTER(MsoTextCaps), 'Caps' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Caps',
              ( ['in'], MsoTextCaps, 'Caps' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'AutorotateNumbers',
              ( ['retval', 'out'], POINTER(MsoTriState), 'RotateNumbers' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'AutorotateNumbers',
              ( ['in'], MsoTriState, 'RotateNumbers' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'BaselineOffset',
              ( ['retval', 'out'], POINTER(c_float), 'Offset' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'BaselineOffset',
              ( ['in'], c_float, 'Offset' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Kerning',
              ( ['retval', 'out'], POINTER(c_float), 'KerningSize' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Kerning',
              ( ['in'], c_float, 'KerningSize' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(c_float), 'Size' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'Size' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Spacing',
              ( ['retval', 'out'], POINTER(c_float), 'Spacing' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_float, 'Spacing' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'UnderlineStyle',
              ( ['retval', 'out'], POINTER(MsoTextUnderlineType), 'Style' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'UnderlineStyle',
              ( ['in'], MsoTextUnderlineType, 'Style' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Allcaps',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Allcaps' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'Allcaps',
              ( ['in'], MsoTriState, 'Allcaps' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'DoubleStrikeThrough',
              ( ['retval', 'out'], POINTER(MsoTriState), 'DoubleStrikeThrough' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'DoubleStrikeThrough',
              ( ['in'], MsoTriState, 'DoubleStrikeThrough' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Equalize',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Equalize' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'Equalize',
              ( ['in'], MsoTriState, 'Equalize' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(FillFormat)), 'Fill' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Glow',
              ( ['retval', 'out'], POINTER(POINTER(GlowFormat)), 'Glow' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Reflection',
              ( ['retval', 'out'], POINTER(POINTER(ReflectionFormat)), 'Reflection' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(POINTER(LineFormat)), 'Line' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(POINTER(ShadowFormat)), 'Shadow' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Highlight',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'Highlight' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'UnderlineColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'UnderlineColor' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'Smallcaps',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Smallcaps' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'Smallcaps',
              ( ['in'], MsoTriState, 'Smallcaps' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'SoftEdgeFormat',
              ( ['retval', 'out'], POINTER(MsoSoftEdgeType), 'SoftEdgeFormat' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'SoftEdgeFormat',
              ( ['in'], MsoSoftEdgeType, 'SoftEdgeFormat' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'StrikeThrough',
              ( ['retval', 'out'], POINTER(MsoTriState), 'StrikeThrough' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'StrikeThrough',
              ( ['in'], MsoTriState, 'StrikeThrough' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'Subscript',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Subscript' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'Subscript',
              ( ['in'], MsoTriState, 'Subscript' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Superscript',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Superscript' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'Superscript',
              ( ['in'], MsoTriState, 'Superscript' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'WordArtformat',
              ( ['retval', 'out'], POINTER(MsoPresetTextEffect), 'WordArtformat' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'WordArtformat',
              ( ['in'], MsoPresetTextEffect, 'WordArtformat' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Embeddable',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Embeddable' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'Embedded',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Embedded' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'NameAscii',
              ( ['retval', 'out'], POINTER(BSTR), 'NameAscii' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'NameAscii',
              ( ['in'], BSTR, 'NameAscii' )),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'NameComplexScript',
              ( ['retval', 'out'], POINTER(BSTR), 'NameComplexScript' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'NameComplexScript',
              ( ['in'], BSTR, 'NameComplexScript' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'NameFarEast',
              ( ['retval', 'out'], POINTER(BSTR), 'NameFarEast' )),
    COMMETHOD([dispid(33), 'propput'], HRESULT, 'NameFarEast',
              ( ['in'], BSTR, 'NameFarEast' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'NameOther',
              ( ['retval', 'out'], POINTER(BSTR), 'NameOther' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'NameOther',
              ( ['in'], BSTR, 'NameOther' )),
]
################################################################
## code template for Font2 implementation
##class Font2_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Superscript
##    def _set(self, Superscript):
##        '-no docstring-'
##    Superscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Bold
##    def _set(self, Bold):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SoftEdgeFormat
##    def _set(self, SoftEdgeFormat):
##        '-no docstring-'
##    SoftEdgeFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Equalize
##    def _set(self, Equalize):
##        '-no docstring-'
##    Equalize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Highlight(self):
##        '-no docstring-'
##        #return Highlight
##
##    def _get(self):
##        '-no docstring-'
##        #return WordArtformat
##    def _set(self, WordArtformat):
##        '-no docstring-'
##    WordArtformat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return Glow
##
##    def _get(self):
##        '-no docstring-'
##        #return NameOther
##    def _set(self, NameOther):
##        '-no docstring-'
##    NameOther = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotateNumbers
##    def _set(self, RotateNumbers):
##        '-no docstring-'
##    AutorotateNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Spacing
##    def _set(self, Spacing):
##        '-no docstring-'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NameComplexScript
##    def _set(self, NameComplexScript):
##        '-no docstring-'
##    NameComplexScript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Italic
##    def _set(self, Italic):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Subscript
##    def _set(self, Subscript):
##        '-no docstring-'
##    Subscript = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return Reflection
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return Line
##
##    def _get(self):
##        '-no docstring-'
##        #return DoubleStrikeThrough
##    def _set(self, DoubleStrikeThrough):
##        '-no docstring-'
##    DoubleStrikeThrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Offset
##    def _set(self, Offset):
##        '-no docstring-'
##    BaselineOffset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Allcaps
##    def _set(self, Allcaps):
##        '-no docstring-'
##    Allcaps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Smallcaps
##    def _set(self, Smallcaps):
##        '-no docstring-'
##    Smallcaps = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def UnderlineColor(self):
##        '-no docstring-'
##        #return UnderlineColor
##
##    def _get(self):
##        '-no docstring-'
##        #return NameAscii
##    def _set(self, NameAscii):
##        '-no docstring-'
##    NameAscii = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NameFarEast
##    def _set(self, NameFarEast):
##        '-no docstring-'
##    NameFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Size
##    def _set(self, Size):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return Shadow
##
##    def _get(self):
##        '-no docstring-'
##        #return Caps
##    def _set(self, Caps):
##        '-no docstring-'
##    Caps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Style
##    def _set(self, Style):
##        '-no docstring-'
##    UnderlineStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Embedded(self):
##        '-no docstring-'
##        #return Embedded
##
##    @property
##    def Embeddable(self):
##        '-no docstring-'
##        #return Embeddable
##
##    def _get(self):
##        '-no docstring-'
##        #return StrikeThrough
##    def _set(self, StrikeThrough):
##        '-no docstring-'
##    StrikeThrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Strike
##    def _set(self, Strike):
##        '-no docstring-'
##    Strike = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return Fill
##
##    def _get(self):
##        '-no docstring-'
##        #return KerningSize
##    def _set(self, KerningSize):
##        '-no docstring-'
##    Kerning = property(_get, _set, doc = _set.__doc__)
##

class Script(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0341-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoScriptLanguage'
msoScriptLanguageJava = 1
msoScriptLanguageVisualBasic = 2
msoScriptLanguageASP = 3
msoScriptLanguageOther = 4
MsoScriptLanguage = c_int # enum
Script._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Extended',
              ( ['retval', 'out'], POINTER(BSTR), 'Extended' )),
    COMMETHOD([dispid(1610809345), 'propput'], HRESULT, 'Extended',
              ( ['in'], BSTR, 'Extended' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'Id' )),
    COMMETHOD([dispid(1610809347), 'propput'], HRESULT, 'Id',
              ( ['in'], BSTR, 'Id' )),
    COMMETHOD([dispid(1610809349), 'propget'], HRESULT, 'Language',
              ( ['retval', 'out'], POINTER(MsoScriptLanguage), 'Language' )),
    COMMETHOD([dispid(1610809349), 'propput'], HRESULT, 'Language',
              ( ['in'], MsoScriptLanguage, 'Language' )),
    COMMETHOD([dispid(1610809351), 'propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(MsoScriptLocation), 'Location' )),
    COMMETHOD([dispid(1610809352)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610809353), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Object' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ScriptText',
              ( ['retval', 'out'], POINTER(BSTR), 'Script' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'ScriptText',
              ( ['in'], BSTR, 'Script' )),
]
################################################################
## code template for Script implementation
##class Script_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Language
##    def _set(self, Language):
##        '-no docstring-'
##    Language = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Script
##    def _set(self, Script):
##        '-no docstring-'
##    ScriptText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return Object
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Extended
##    def _set(self, Extended):
##        '-no docstring-'
##    Extended = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Location(self):
##        '-no docstring-'
##        #return Location
##
##    def _get(self):
##        '-no docstring-'
##        #return Id
##    def _set(self, Id):
##        '-no docstring-'
##    Id = property(_get, _set, doc = _set.__doc__)
##

FileDialogFilter._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Extensions',
              ( ['retval', 'out'], POINTER(BSTR), 'Extensions' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'Description' )),
]
################################################################
## code template for FileDialogFilter implementation
##class FileDialogFilter_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return Description
##
##    @property
##    def Extensions(self):
##        '-no docstring-'
##        #return Extensions
##


# values for enumeration 'MsoPresetMaterial'
msoPresetMaterialMixed = -2
msoMaterialMatte = 1
msoMaterialPlastic = 2
msoMaterialMetal = 3
msoMaterialWireFrame = 4
msoMaterialMatte2 = 5
msoMaterialPlastic2 = 6
msoMaterialMetal2 = 7
msoMaterialWarmMatte = 8
msoMaterialTranslucentPowder = 9
msoMaterialPowder = 10
msoMaterialDarkEdge = 11
msoMaterialSoftEdge = 12
msoMaterialClear = 13
msoMaterialFlat = 14
msoMaterialSoftMetal = 15
MsoPresetMaterial = c_int # enum
class Sync(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0386-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Sync._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(MsoSyncStatusType), 'pStatusType' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'WorkspaceLastChangedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrWorkspaceLastChangedBy' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'LastSyncTime',
              ( ['retval', 'out'], POINTER(VARIANT), 'pdatSavedTo' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ErrorType',
              ( ['retval', 'out'], POINTER(MsoSyncErrorType), 'pErrorType' )),
    COMMETHOD([dispid(6)], HRESULT, 'GetUpdate'),
    COMMETHOD([dispid(7)], HRESULT, 'PutUpdate'),
    COMMETHOD([dispid(8)], HRESULT, 'OpenVersion',
              ( ['in'], MsoSyncVersionType, 'SyncVersionType' )),
    COMMETHOD([dispid(9)], HRESULT, 'ResolveConflict',
              ( ['in'], MsoSyncConflictResolutionType, 'SyncConflictResolution' )),
    COMMETHOD([dispid(10)], HRESULT, 'Unsuspend'),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for Sync implementation
##class Sync_Impl(object):
##    @property
##    def WorkspaceLastChangedBy(self):
##        '-no docstring-'
##        #return pbstrWorkspaceLastChangedBy
##
##    def PutUpdate(self):
##        '-no docstring-'
##        #return 
##
##    def Unsuspend(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def GetUpdate(self):
##        '-no docstring-'
##        #return 
##
##    def OpenVersion(self, SyncVersionType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def LastSyncTime(self):
##        '-no docstring-'
##        #return pdatSavedTo
##
##    def ResolveConflict(self, SyncConflictResolution):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Status(self):
##        '-no docstring-'
##        #return pStatusType
##
##    @property
##    def ErrorType(self):
##        '-no docstring-'
##        #return pErrorType
##


# values for enumeration 'MsoFileFindOptions'
msoOptionsNew = 1
msoOptionsAdd = 2
msoOptionsWithin = 3
MsoFileFindOptions = c_int # enum

# values for enumeration 'MsoClipboardFormat'
msoClipboardFormatMixed = -2
msoClipboardFormatNative = 1
msoClipboardFormatHTML = 2
msoClipboardFormatRTF = 3
msoClipboardFormatPlainText = 4
MsoClipboardFormat = c_int # enum

# values for enumeration 'MsoFileFindView'
msoViewFileInfo = 1
msoViewPreview = 2
msoViewSummaryInfo = 3
MsoFileFindView = c_int # enum
DocumentLibraryVersion._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Modified',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarDate' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'lIndex' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ModifiedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'userName' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Comments',
              ( ['retval', 'out'], POINTER(BSTR), 'Comments' )),
    COMMETHOD([dispid(5)], HRESULT, 'Delete'),
    COMMETHOD([dispid(6)], HRESULT, 'Open',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispOpened' )),
    COMMETHOD([dispid(7)], HRESULT, 'Restore',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispOpened' )),
]
################################################################
## code template for DocumentLibraryVersion implementation
##class DocumentLibraryVersion_Impl(object):
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return Comments
##
##    @property
##    def ModifiedBy(self):
##        '-no docstring-'
##        #return userName
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Restore(self):
##        '-no docstring-'
##        #return ppdispOpened
##
##    @property
##    def Modified(self):
##        '-no docstring-'
##        #return pvarDate
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lIndex
##
##    def Open(self):
##        '-no docstring-'
##        #return ppdispOpened
##


# values for enumeration 'MsoFileFindSortBy'
msoFileFindSortbyAuthor = 1
msoFileFindSortbyDateCreated = 2
msoFileFindSortbyLastSavedBy = 3
msoFileFindSortbyDateSaved = 4
msoFileFindSortbyFileName = 5
msoFileFindSortbySize = 6
msoFileFindSortbyTitle = 7
MsoFileFindSortBy = c_int # enum
class MetaProperties(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C038E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class MetaProperty(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C038F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MetaProperties._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(MetaProperty)), 'ppmp' )),
    COMMETHOD([dispid(1)], HRESULT, 'GetItemByInternalName',
              ( ['in'], BSTR, 'InternalName' ),
              ( ['retval', 'out'], POINTER(POINTER(MetaProperty)), 'ppmp' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pc' )),
    COMMETHOD([dispid(3)], HRESULT, 'Validate',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrError' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'ValidationError',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'SchemaXml',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for MetaProperties implementation
##class MetaProperties_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def SchemaXml(self):
##        '-no docstring-'
##        #return pbstr
##
##    def GetItemByInternalName(self, InternalName):
##        '-no docstring-'
##        #return ppmp
##
##    @property
##    def ValidationError(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppmp
##
##    def Validate(self):
##        '-no docstring-'
##        #return pbstrError
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pc
##

IMsoPlotArea._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'ppfill' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(1667), 'propget'], HRESULT, 'InsideLeft',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(1667), 'propput'], HRESULT, 'InsideLeft',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(1668), 'propget'], HRESULT, 'InsideTop',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(1668), 'propput'], HRESULT, 'InsideTop',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(1669), 'propget'], HRESULT, 'InsideWidth',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(1669), 'propput'], HRESULT, 'InsideWidth',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(1670), 'propget'], HRESULT, 'InsideHeight',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(1670), 'propput'], HRESULT, 'InsideHeight',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlChartElementPosition), 'pval' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'pval' )),
    COMMETHOD([dispid(1610743833), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoPlotArea implementation
##class IMsoPlotArea_Impl(object):
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    InsideWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    InsideLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return pvar
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    InsideTop = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppfill
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    InsideHeight = property(_get, _set, doc = _set.__doc__)
##

class CustomXMLValidationErrors(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB0F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CustomXMLValidationError(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB0E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CustomXMLValidationErrors._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLValidationError)), 'ppError' )),
    COMMETHOD([dispid(1610809347)], HRESULT, 'Add',
              ( ['in'], POINTER(CustomXMLNode), 'Node' ),
              ( ['in'], BSTR, 'ErrorName' ),
              ( ['in', 'optional'], BSTR, 'ErrorText', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ClearedOnUpdate', True )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for CustomXMLValidationErrors implementation
##class CustomXMLValidationErrors_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Add(self, Node, ErrorName, ErrorText, ClearedOnUpdate):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppError
##

class IMsoSeriesLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1729-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoSeriesLines._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoSeriesLines implementation
##class IMsoSeriesLines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##

class PictureFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class SoftEdgeFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03BC-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
IMsoChartFormat._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(FillFormat)), 'ppfill' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Glow',
              ( ['retval', 'out'], POINTER(POINTER(GlowFormat)), 'ppGlow' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(POINTER(LineFormat)), 'ppline' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'PictureFormat',
              ( ['retval', 'out'], POINTER(POINTER(PictureFormat)), 'ppPictureFormat' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(POINTER(ShadowFormat)), 'ppShadow' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'SoftEdge',
              ( ['retval', 'out'], POINTER(POINTER(SoftEdgeFormat)), 'ppSoftEdge' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'TextFrame2',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame2)), 'ppTextFrame' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'ppThreeD' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoChartFormat implementation
##class IMsoChartFormat_Impl(object):
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return ppline
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return ppGlow
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ppThreeD
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return ppTextFrame
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return ppPictureFormat
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return ppSoftEdge
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return ppShadow
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppfill
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##

class ThemeFont(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A3-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
ThemeFont._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Val' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Val' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
]
################################################################
## code template for ThemeFont implementation
##class ThemeFont_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Val
##    def _set(self, Val):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##

class ThemeFonts(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A4-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
ThemeFonts._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], MsoFontLanguageIndex, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ThemeFont)), 'Val' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
]
################################################################
## code template for ThemeFonts implementation
##class ThemeFonts_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Val
##

IMsoFloor._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'ppfill' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'pvar' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste'),
    COMMETHOD([dispid(2419), 'propget'], HRESULT, 'Thickness',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2419), 'propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoFloor implementation
##class IMsoFloor_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pvar
##    def _set(self, pvar):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return pvar
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppfill
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##

class IConverterPreferences(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03D4-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
IConverterPreferences._methods_ = [
    COMMETHOD([], HRESULT, 'HrGetMacroEnabled',
              ( ['out'], POINTER(c_int), 'pfMacroEnabled' )),
    COMMETHOD([], HRESULT, 'HrCheckFormat',
              ( ['out'], POINTER(c_int), 'pFormat' )),
    COMMETHOD([], HRESULT, 'HrGetLossySave',
              ( ['out'], POINTER(c_int), 'pfLossySave' )),
]
################################################################
## code template for IConverterPreferences implementation
##class IConverterPreferences_Impl(object):
##    def HrGetMacroEnabled(self):
##        '-no docstring-'
##        #return pfMacroEnabled
##
##    def HrCheckFormat(self):
##        '-no docstring-'
##        #return pFormat
##
##    def HrGetLossySave(self):
##        '-no docstring-'
##        #return pfLossySave
##

CustomXMLValidationError._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Node',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppNode' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrText' )),
    COMMETHOD([dispid(1610809348), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoCustomXMLValidationErrorType), 'pErrorType' )),
    COMMETHOD([dispid(1610809349)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610809350), 'propget'], HRESULT, 'ErrorCode',
              ( ['retval', 'out'], POINTER(c_int), 'plErrorCode' )),
]
################################################################
## code template for CustomXMLValidationError implementation
##class CustomXMLValidationError_Impl(object):
##    @property
##    def ErrorCode(self):
##        '-no docstring-'
##        #return plErrorCode
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return pErrorType
##
##    @property
##    def Text(self):
##        '-no docstring-'
##        #return pbstrText
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Node(self):
##        '-no docstring-'
##        #return ppNode
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##

IMsoInterior._methods_ = [
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Pattern',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'PatternColor',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'PatternColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'PatternColorIndex',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'PatternColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IMsoInterior implementation
##class IMsoInterior_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    PatternColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    PatternColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##

class IConverterApplicationPreferences(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03D5-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
IConverterApplicationPreferences._methods_ = [
    COMMETHOD([], HRESULT, 'HrGetLcid',
              ( ['out'], POINTER(c_ulong), 'plcid' )),
    COMMETHOD([], HRESULT, 'HrGetHwnd',
              ( ['out'], POINTER(c_int), 'phwnd' )),
    COMMETHOD([], HRESULT, 'HrGetApplication',
              ( ['out'], POINTER(BSTR), 'pbstrApplication' )),
    COMMETHOD([], HRESULT, 'HrCheckFormat',
              ( ['out'], POINTER(c_int), 'pFormat' )),
]
################################################################
## code template for IConverterApplicationPreferences implementation
##class IConverterApplicationPreferences_Impl(object):
##    def HrCheckFormat(self):
##        '-no docstring-'
##        #return pFormat
##
##    def HrGetLcid(self):
##        '-no docstring-'
##        #return plcid
##
##    def HrGetApplication(self):
##        '-no docstring-'
##        #return pbstrApplication
##
##    def HrGetHwnd(self):
##        '-no docstring-'
##        #return phwnd
##

class IConverter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03D7-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
class IConverterUICallback(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03D6-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
IConverter._methods_ = [
    COMMETHOD([], HRESULT, 'HrInitConverter',
              ( ['in'], POINTER(IConverterApplicationPreferences), 'pcap' ),
              ( ['out'], POINTER(POINTER(IConverterPreferences)), 'ppcp' ),
              ( ['in'], POINTER(IConverterUICallback), 'pcuic' )),
    COMMETHOD([], HRESULT, 'HrUninitConverter',
              ( ['in'], POINTER(IConverterUICallback), 'pcuic' )),
    COMMETHOD([], HRESULT, 'HrImport',
              ( ['in'], BSTR, 'bstrSourcePath' ),
              ( ['in'], BSTR, 'bstrDestPath' ),
              ( ['in'], POINTER(IConverterApplicationPreferences), 'pcap' ),
              ( ['out'], POINTER(POINTER(IConverterPreferences)), 'ppcp' ),
              ( ['in'], POINTER(IConverterUICallback), 'pcuic' )),
    COMMETHOD([], HRESULT, 'HrExport',
              ( ['in'], BSTR, 'bstrSourcePath' ),
              ( ['in'], BSTR, 'bstrDestPath' ),
              ( ['in'], BSTR, 'bstrClass' ),
              ( ['in'], POINTER(IConverterApplicationPreferences), 'pcap' ),
              ( ['out'], POINTER(POINTER(IConverterPreferences)), 'ppcp' ),
              ( ['in'], POINTER(IConverterUICallback), 'pcuic' )),
    COMMETHOD([], HRESULT, 'HrGetFormat',
              ( ['in'], BSTR, 'bstrPath' ),
              ( ['out'], POINTER(BSTR), 'pbstrClass' ),
              ( ['in'], POINTER(IConverterApplicationPreferences), 'pcap' ),
              ( ['out'], POINTER(POINTER(IConverterPreferences)), 'ppcp' ),
              ( ['in'], POINTER(IConverterUICallback), 'pcuic' )),
    COMMETHOD([], HRESULT, 'HrGetErrorString',
              ( ['in'], c_int, 'hrErr' ),
              ( ['out'], POINTER(BSTR), 'pbstrErrorMsg' ),
              ( ['in'], POINTER(IConverterApplicationPreferences), 'pcap' )),
]
################################################################
## code template for IConverter implementation
##class IConverter_Impl(object):
##    def HrGetFormat(self, bstrPath, pcap, pcuic):
##        '-no docstring-'
##        #return pbstrClass, ppcp
##
##    def HrExport(self, bstrSourcePath, bstrDestPath, bstrClass, pcap, pcuic):
##        '-no docstring-'
##        #return ppcp
##
##    def HrUninitConverter(self, pcuic):
##        '-no docstring-'
##        #return 
##
##    def HrInitConverter(self, pcap, pcuic):
##        '-no docstring-'
##        #return ppcp
##
##    def HrGetErrorString(self, hrErr, pcap):
##        '-no docstring-'
##        #return pbstrErrorMsg
##
##    def HrImport(self, bstrSourcePath, bstrDestPath, pcap, pcuic):
##        '-no docstring-'
##        #return ppcp
##


# values for enumeration 'MsoFeatureInstall'
msoFeatureInstallNone = 0
msoFeatureInstallOnDemand = 1
msoFeatureInstallOnDemandWithUI = 2
MsoFeatureInstall = c_int # enum
class ThemeFontScheme(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
ThemeFontScheme._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2)], HRESULT, 'Load',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(3)], HRESULT, 'Save',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'MinorFont',
              ( ['retval', 'out'], POINTER(POINTER(ThemeFonts)), 'MinorFont' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'MajorFont',
              ( ['retval', 'out'], POINTER(POINTER(ThemeFonts)), 'MajorFont' )),
]
################################################################
## code template for ThemeFontScheme implementation
##class ThemeFontScheme_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Save(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def Load(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def MinorFont(self):
##        '-no docstring-'
##        #return MinorFont
##
##    @property
##    def MajorFont(self):
##        '-no docstring-'
##        #return MajorFont
##

SoftEdgeFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoSoftEdgeType), 'Type' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoSoftEdgeType, 'Type' )),
]
################################################################
## code template for SoftEdgeFormat implementation
##class SoftEdgeFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##

IConverterUICallback._methods_ = [
    COMMETHOD([], HRESULT, 'HrReportProgress',
              ( ['in'], c_uint, 'uPercentComplete' )),
    COMMETHOD([], HRESULT, 'HrMessageBox',
              ( ['in'], BSTR, 'bstrText' ),
              ( ['in'], BSTR, 'bstrCaption' ),
              ( ['in'], c_uint, 'uType' ),
              ( ['out'], POINTER(c_int), 'pidResult' )),
    COMMETHOD([], HRESULT, 'HrInputBox',
              ( ['in'], BSTR, 'bstrText' ),
              ( ['in'], BSTR, 'bstrCaption' ),
              ( ['out'], POINTER(BSTR), 'pbstrInput' ),
              ( ['in'], c_int, 'fPassword' )),
]
################################################################
## code template for IConverterUICallback implementation
##class IConverterUICallback_Impl(object):
##    def HrMessageBox(self, bstrText, bstrCaption, uType):
##        '-no docstring-'
##        #return pidResult
##
##    def HrInputBox(self, bstrText, bstrCaption, fPassword):
##        '-no docstring-'
##        #return pbstrInput
##
##    def HrReportProgress(self, uPercentComplete):
##        '-no docstring-'
##        #return 
##

CommandBarControls._methods_ = [
    COMMETHOD([dispid(1610809344)], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Id' ),
              ( ['in', 'optional'], VARIANT, 'Parameter' ),
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'Temporary' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControl)), 'ppcbc' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcToolbarControls' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControl)), 'ppcbc' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(1610809348), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(CommandBar)), 'ppcb' )),
]
################################################################
## code template for CommandBarControls implementation
##class CommandBarControls_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppcb
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcToolbarControls
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Add(self, Type, Id, Parameter, Before, Temporary):
##        '-no docstring-'
##        #return ppcbc
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppcbc
##

class IMsoUpBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C172A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoUpBars._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'ppfill' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoUpBars implementation
##class IMsoUpBars_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppfill
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##

class ThemeEffectScheme(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A6-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
ThemeEffectScheme._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2)], HRESULT, 'Load',
              ( ['in'], BSTR, 'FileName' )),
]
################################################################
## code template for ThemeEffectScheme implementation
##class ThemeEffectScheme_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Load(self, FileName):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoBarPosition'
msoBarLeft = 0
msoBarTop = 1
msoBarRight = 2
msoBarBottom = 3
msoBarFloating = 4
msoBarPopup = 5
msoBarMenuBar = 6
MsoBarPosition = c_int # enum

# values for enumeration 'MsoBarProtection'
msoBarNoProtection = 0
msoBarNoCustomize = 1
msoBarNoResize = 2
msoBarNoMove = 4
msoBarNoChangeVisible = 8
msoBarNoChangeDock = 16
msoBarNoVerticalDock = 32
msoBarNoHorizontalDock = 64
MsoBarProtection = c_int # enum

# values for enumeration 'MsoBarType'
msoBarTypeNormal = 0
msoBarTypeMenuBar = 1
msoBarTypePopup = 2
MsoBarType = c_int # enum
CommandBar._methods_ = [
    COMMETHOD([dispid(1610874880), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfBuiltIn' )),
    COMMETHOD([dispid(1610874881), 'propget'], HRESULT, 'Context',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrContext' )),
    COMMETHOD([dispid(1610874881), 'propput'], HRESULT, 'Context',
              ( ['in'], BSTR, 'pbstrContext' )),
    COMMETHOD([dispid(1610874883), 'propget'], HRESULT, 'Controls',
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControls)), 'ppcbcs' )),
    COMMETHOD([dispid(1610874884)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610874885), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfEnabled' )),
    COMMETHOD([dispid(1610874885), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pvarfEnabled' )),
    COMMETHOD([dispid(1610874887)], HRESULT, 'FindControl',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Id' ),
              ( ['in', 'optional'], VARIANT, 'Tag' ),
              ( ['in', 'optional'], VARIANT, 'Visible' ),
              ( ['in', 'optional'], VARIANT, 'Recursive' ),
              ( ['retval', 'out'], POINTER(POINTER(CommandBarControl)), 'ppcbc' )),
    COMMETHOD([dispid(1610874888), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_int), 'pdy' )),
    COMMETHOD([dispid(1610874888), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'pdy' )),
    COMMETHOD([dispid(1610874890), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'pi' )),
    COMMETHOD([dispid(1610874891), 'hidden', 'propget'], HRESULT, 'InstanceId',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(1610874892), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_int), 'pxpLeft' )),
    COMMETHOD([dispid(1610874892), 'propput'], HRESULT, 'Left',
              ( ['in'], c_int, 'pxpLeft' )),
    COMMETHOD([dispid(1610874894), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610874894), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'pbstrName' )),
    COMMETHOD([dispid(1610874896), 'propget'], HRESULT, 'NameLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNameLocal' )),
    COMMETHOD([dispid(1610874896), 'propput'], HRESULT, 'NameLocal',
              ( ['in'], BSTR, 'pbstrNameLocal' )),
    COMMETHOD([dispid(1610874898), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610874899), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(MsoBarPosition), 'ppos' )),
    COMMETHOD([dispid(1610874899), 'propput'], HRESULT, 'Position',
              ( ['in'], MsoBarPosition, 'ppos' )),
    COMMETHOD([dispid(1610874901), 'propget'], HRESULT, 'RowIndex',
              ( ['retval', 'out'], POINTER(c_int), 'piRow' )),
    COMMETHOD([dispid(1610874901), 'propput'], HRESULT, 'RowIndex',
              ( ['in'], c_int, 'piRow' )),
    COMMETHOD([dispid(1610874903), 'propget'], HRESULT, 'Protection',
              ( ['retval', 'out'], POINTER(MsoBarProtection), 'pprot' )),
    COMMETHOD([dispid(1610874903), 'propput'], HRESULT, 'Protection',
              ( ['in'], MsoBarProtection, 'pprot' )),
    COMMETHOD([dispid(1610874905)], HRESULT, 'Reset'),
    COMMETHOD([dispid(1610874906)], HRESULT, 'ShowPopup',
              ( ['in', 'optional'], VARIANT, 'x' ),
              ( ['in', 'optional'], VARIANT, 'y' )),
    COMMETHOD([dispid(1610874907), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_int), 'pypTop' )),
    COMMETHOD([dispid(1610874907), 'propput'], HRESULT, 'Top',
              ( ['in'], c_int, 'pypTop' )),
    COMMETHOD([dispid(1610874909), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoBarType), 'ptype' )),
    COMMETHOD([dispid(1610874910), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfVisible' )),
    COMMETHOD([dispid(1610874910), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pvarfVisible' )),
    COMMETHOD([dispid(1610874912), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'pdx' )),
    COMMETHOD([dispid(1610874912), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'pdx' )),
    COMMETHOD([dispid(1610874914), 'propget'], HRESULT, 'AdaptiveMenu',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfAdaptiveMenu' )),
    COMMETHOD([dispid(1610874914), 'propput'], HRESULT, 'AdaptiveMenu',
              ( ['in'], VARIANT_BOOL, 'pvarfAdaptiveMenu' )),
    COMMETHOD([dispid(1610874916), 'hidden', 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
]
################################################################
## code template for CommandBar implementation
##class CommandBar_Impl(object):
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return ptype
##
##    def _get(self):
##        '-no docstring-'
##        #return pxpLeft
##    def _set(self, pxpLeft):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfEnabled
##    def _set(self, pvarfEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def FindControl(self, Type, Id, Tag, Visible, Recursive):
##        '-no docstring-'
##        #return ppcbc
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pid
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfAdaptiveMenu
##    def _set(self, pvarfAdaptiveMenu):
##        '-no docstring-'
##    AdaptiveMenu = property(_get, _set, doc = _set.__doc__)
##
##    def ShowPopup(self, x, y):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pypTop
##    def _set(self, pypTop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Controls(self):
##        '-no docstring-'
##        #return ppcbcs
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pvarfBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return ppos
##    def _set(self, ppos):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def InstanceId(self):
##        '-no docstring-'
##        #return pid
##
##    def _get(self):
##        '-no docstring-'
##        #return pdy
##    def _set(self, pdy):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pprot
##    def _set(self, pprot):
##        '-no docstring-'
##    Protection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return piRow
##    def _set(self, piRow):
##        '-no docstring-'
##    RowIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrContext
##    def _set(self, pbstrContext):
##        '-no docstring-'
##    Context = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrNameLocal
##    def _set(self, pbstrNameLocal):
##        '-no docstring-'
##    NameLocal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return pi
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrName
##    def _set(self, pbstrName):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfVisible
##    def _set(self, pvarfVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pdx
##    def _set(self, pdx):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoEncoding'
msoEncodingThai = 874
msoEncodingJapaneseShiftJIS = 932
msoEncodingSimplifiedChineseGBK = 936
msoEncodingKorean = 949
msoEncodingTraditionalChineseBig5 = 950
msoEncodingUnicodeLittleEndian = 1200
msoEncodingUnicodeBigEndian = 1201
msoEncodingCentralEuropean = 1250
msoEncodingCyrillic = 1251
msoEncodingWestern = 1252
msoEncodingGreek = 1253
msoEncodingTurkish = 1254
msoEncodingHebrew = 1255
msoEncodingArabic = 1256
msoEncodingBaltic = 1257
msoEncodingVietnamese = 1258
msoEncodingAutoDetect = 50001
msoEncodingJapaneseAutoDetect = 50932
msoEncodingSimplifiedChineseAutoDetect = 50936
msoEncodingKoreanAutoDetect = 50949
msoEncodingTraditionalChineseAutoDetect = 50950
msoEncodingCyrillicAutoDetect = 51251
msoEncodingGreekAutoDetect = 51253
msoEncodingArabicAutoDetect = 51256
msoEncodingISO88591Latin1 = 28591
msoEncodingISO88592CentralEurope = 28592
msoEncodingISO88593Latin3 = 28593
msoEncodingISO88594Baltic = 28594
msoEncodingISO88595Cyrillic = 28595
msoEncodingISO88596Arabic = 28596
msoEncodingISO88597Greek = 28597
msoEncodingISO88598Hebrew = 28598
msoEncodingISO88599Turkish = 28599
msoEncodingISO885915Latin9 = 28605
msoEncodingISO88598HebrewLogical = 38598
msoEncodingISO2022JPNoHalfwidthKatakana = 50220
msoEncodingISO2022JPJISX02021984 = 50221
msoEncodingISO2022JPJISX02011989 = 50222
msoEncodingISO2022KR = 50225
msoEncodingISO2022CNTraditionalChinese = 50227
msoEncodingISO2022CNSimplifiedChinese = 50229
msoEncodingMacRoman = 10000
msoEncodingMacJapanese = 10001
msoEncodingMacTraditionalChineseBig5 = 10002
msoEncodingMacKorean = 10003
msoEncodingMacArabic = 10004
msoEncodingMacHebrew = 10005
msoEncodingMacGreek1 = 10006
msoEncodingMacCyrillic = 10007
msoEncodingMacSimplifiedChineseGB2312 = 10008
msoEncodingMacRomania = 10010
msoEncodingMacUkraine = 10017
msoEncodingMacLatin2 = 10029
msoEncodingMacIcelandic = 10079
msoEncodingMacTurkish = 10081
msoEncodingMacCroatia = 10082
msoEncodingEBCDICUSCanada = 37
msoEncodingEBCDICInternational = 500
msoEncodingEBCDICMultilingualROECELatin2 = 870
msoEncodingEBCDICGreekModern = 875
msoEncodingEBCDICTurkishLatin5 = 1026
msoEncodingEBCDICGermany = 20273
msoEncodingEBCDICDenmarkNorway = 20277
msoEncodingEBCDICFinlandSweden = 20278
msoEncodingEBCDICItaly = 20280
msoEncodingEBCDICLatinAmericaSpain = 20284
msoEncodingEBCDICUnitedKingdom = 20285
msoEncodingEBCDICJapaneseKatakanaExtended = 20290
msoEncodingEBCDICFrance = 20297
msoEncodingEBCDICArabic = 20420
msoEncodingEBCDICGreek = 20423
msoEncodingEBCDICHebrew = 20424
msoEncodingEBCDICKoreanExtended = 20833
msoEncodingEBCDICThai = 20838
msoEncodingEBCDICIcelandic = 20871
msoEncodingEBCDICTurkish = 20905
msoEncodingEBCDICRussian = 20880
msoEncodingEBCDICSerbianBulgarian = 21025
msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese = 50930
msoEncodingEBCDICUSCanadaAndJapanese = 50931
msoEncodingEBCDICKoreanExtendedAndKorean = 50933
msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese = 50935
msoEncodingEBCDICUSCanadaAndTraditionalChinese = 50937
msoEncodingEBCDICJapaneseLatinExtendedAndJapanese = 50939
msoEncodingOEMUnitedStates = 437
msoEncodingOEMGreek437G = 737
msoEncodingOEMBaltic = 775
msoEncodingOEMMultilingualLatinI = 850
msoEncodingOEMMultilingualLatinII = 852
msoEncodingOEMCyrillic = 855
msoEncodingOEMTurkish = 857
msoEncodingOEMPortuguese = 860
msoEncodingOEMIcelandic = 861
msoEncodingOEMHebrew = 862
msoEncodingOEMCanadianFrench = 863
msoEncodingOEMArabic = 864
msoEncodingOEMNordic = 865
msoEncodingOEMCyrillicII = 866
msoEncodingOEMModernGreek = 869
msoEncodingEUCJapanese = 51932
msoEncodingEUCChineseSimplifiedChinese = 51936
msoEncodingEUCKorean = 51949
msoEncodingEUCTaiwaneseTraditionalChinese = 51950
msoEncodingISCIIDevanagari = 57002
msoEncodingISCIIBengali = 57003
msoEncodingISCIITamil = 57004
msoEncodingISCIITelugu = 57005
msoEncodingISCIIAssamese = 57006
msoEncodingISCIIOriya = 57007
msoEncodingISCIIKannada = 57008
msoEncodingISCIIMalayalam = 57009
msoEncodingISCIIGujarati = 57010
msoEncodingISCIIPunjabi = 57011
msoEncodingArabicASMO = 708
msoEncodingArabicTransparentASMO = 720
msoEncodingKoreanJohab = 1361
msoEncodingTaiwanCNS = 20000
msoEncodingTaiwanTCA = 20001
msoEncodingTaiwanEten = 20002
msoEncodingTaiwanIBM5550 = 20003
msoEncodingTaiwanTeleText = 20004
msoEncodingTaiwanWang = 20005
msoEncodingIA5IRV = 20105
msoEncodingIA5German = 20106
msoEncodingIA5Swedish = 20107
msoEncodingIA5Norwegian = 20108
msoEncodingUSASCII = 20127
msoEncodingT61 = 20261
msoEncodingISO6937NonSpacingAccent = 20269
msoEncodingKOI8R = 20866
msoEncodingExtAlphaLowercase = 21027
msoEncodingKOI8U = 21866
msoEncodingEuropa3 = 29001
msoEncodingHZGBSimplifiedChinese = 52936
msoEncodingSimplifiedChineseGB18030 = 54936
msoEncodingUTF7 = 65000
msoEncodingUTF8 = 65001
MsoEncoding = c_int # enum

# values for enumeration 'XlLegendPosition'
xlLegendPositionBottom = -4107
xlLegendPositionCorner = 2
xlLegendPositionLeft = -4131
xlLegendPositionRight = -4152
xlLegendPositionTop = -4160
xlLegendPositionCustom = -4161
XlLegendPosition = c_int # enum
IMsoLegend._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD([dispid(173)], HRESULT, 'LegendEntries',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlLegendPosition), 'RHS' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], XlLegendPosition, 'RHS' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(111)], HRESULT, 'Clear',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'RHS' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1525), 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1525), 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoLegend implementation
##class IMsoLegend_Impl(object):
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def LegendEntries(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoModeType'
msoModeModal = 0
msoModeAutoDown = 1
msoModeModeless = 2
MsoModeType = c_int # enum
_CustomXMLPart._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'DocumentElement',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppDocumentElement' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrID' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'NamespaceURI',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNamespaceURI' )),
    COMMETHOD([dispid(1610809348), 'propget'], HRESULT, 'SchemaCollection',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLSchemaCollection)), 'ppSchemaCollection' )),
    COMMETHOD([dispid(1610809348), 'propput'], HRESULT, 'SchemaCollection',
              ( ['in'], POINTER(CustomXMLSchemaCollection), 'ppSchemaCollection' )),
    COMMETHOD([dispid(1610809350), 'propget'], HRESULT, 'NamespaceManager',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLPrefixMappings)), 'ppPrefixMappings' )),
    COMMETHOD([dispid(1610809351), 'propget'], HRESULT, 'XML',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrXML' )),
    COMMETHOD([dispid(1610809352)], HRESULT, 'AddNode',
              ( ['in'], POINTER(CustomXMLNode), 'Parent' ),
              ( ['in', 'optional'], BSTR, 'Name', '' ),
              ( ['in', 'optional'], BSTR, 'NamespaceURI', '' ),
              ( ['in', 'optional'], POINTER(CustomXMLNode), 'NextSibling', 0 ),
              ( ['in', 'optional'], MsoCustomXMLNodeType, 'NodeType', 1 ),
              ( ['in', 'optional'], BSTR, 'NodeValue', '' )),
    COMMETHOD([dispid(1610809353)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610809354)], HRESULT, 'Load',
              ( ['in'], BSTR, 'FilePath' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfRet' )),
    COMMETHOD([dispid(1610809355)], HRESULT, 'LoadXML',
              ( ['in'], BSTR, 'XML' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfRet' )),
    COMMETHOD([dispid(1610809356)], HRESULT, 'SelectNodes',
              ( ['in'], BSTR, 'XPath' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNodes)), 'ppNodes' )),
    COMMETHOD([dispid(1610809357)], HRESULT, 'SelectSingleNode',
              ( ['in'], BSTR, 'XPath' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppNode' )),
    COMMETHOD([dispid(1610809358), 'propget'], HRESULT, 'Errors',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLValidationErrors)), 'ppErrors' )),
    COMMETHOD([dispid(1610809359), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfRet' )),
]
################################################################
## code template for _CustomXMLPart implementation
##class _CustomXMLPart_Impl(object):
##    def Load(self, FilePath):
##        '-no docstring-'
##        #return pfRet
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pfRet
##
##    def SelectSingleNode(self, XPath):
##        '-no docstring-'
##        #return ppNode
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def XML(self):
##        '-no docstring-'
##        #return pbstrXML
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pbstrID
##
##    def LoadXML(self, XML):
##        '-no docstring-'
##        #return pfRet
##
##    @property
##    def Errors(self):
##        '-no docstring-'
##        #return ppErrors
##
##    @property
##    def DocumentElement(self):
##        '-no docstring-'
##        #return ppDocumentElement
##
##    @property
##    def NamespaceManager(self):
##        '-no docstring-'
##        #return ppPrefixMappings
##
##    @property
##    def NamespaceURI(self):
##        '-no docstring-'
##        #return pbstrNamespaceURI
##
##    def SelectNodes(self, XPath):
##        '-no docstring-'
##        #return ppNodes
##
##    def _get(self):
##        '-no docstring-'
##        #return ppSchemaCollection
##    def _set(self, ppSchemaCollection):
##        '-no docstring-'
##    SchemaCollection = property(_get, _set, doc = _set.__doc__)
##
##    def AddNode(self, Parent, Name, NamespaceURI, NextSibling, NodeType, NodeValue):
##        '-no docstring-'
##        #return 
##

class COMAddIns(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0339-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class COMAddIn(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C033A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
COMAddIns._methods_ = [
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(COMAddIn)), 'RetValue' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(-4), 'restricted', 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RetValue' )),
    COMMETHOD([dispid(2)], HRESULT, 'Update'),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(4), 'nonbrowsable', 'hidden'], HRESULT, 'SetAppModal',
              ( ['in'], VARIANT_BOOL, 'varfModal' )),
]
################################################################
## code template for COMAddIns implementation
##class COMAddIns_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RetValue
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RetValue
##
##    def SetAppModal(self, varfModal):
##        '-no docstring-'
##        #return 
##

class AnswerWizard(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0360-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
AnswerWizard._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Files',
              ( ['retval', 'out'], POINTER(POINTER(AnswerWizardFiles)), 'Files' )),
    COMMETHOD([dispid(1610809346)], HRESULT, 'ClearFileList'),
    COMMETHOD([dispid(1610809347)], HRESULT, 'ResetFileList'),
]
################################################################
## code template for AnswerWizard implementation
##class AnswerWizard_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def ClearFileList(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Files(self):
##        '-no docstring-'
##        #return Files
##
##    def ResetFileList(self):
##        '-no docstring-'
##        #return 
##

GridLines._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for GridLines implementation
##class GridLines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##

_CustomXMLParts._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLPart)), 'ppPart' )),
    COMMETHOD([dispid(1610809347)], HRESULT, 'Add',
              ( ['in', 'optional'], BSTR, 'XML', '' ),
              ( ['in', 'optional'], VARIANT, 'SchemaCollection' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLPart)), 'ppPart' )),
    COMMETHOD([dispid(1610809348)], HRESULT, 'SelectByID',
              ( ['in'], BSTR, 'Id' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLPart)), 'ppPart' )),
    COMMETHOD([dispid(1610809349)], HRESULT, 'SelectByNamespace',
              ( ['in'], BSTR, 'NamespaceURI' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLParts)), 'ppParts' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for _CustomXMLParts implementation
##class _CustomXMLParts_Impl(object):
##    def SelectByNamespace(self, NamespaceURI):
##        '-no docstring-'
##        #return ppParts
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Add(self, XML, SchemaCollection):
##        '-no docstring-'
##        #return ppPart
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppPart
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    def SelectByID(self, Id):
##        '-no docstring-'
##        #return ppPart
##

class ChartColorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C171D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ChartColorFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SchemeColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SchemeColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RGB',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RGB',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for ChartColorFormat implementation
##class ChartColorFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RGB = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##

class IMsoDownBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C172D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoDownBars._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'ppfill' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoDownBars implementation
##class IMsoDownBars_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppfill
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##


# values for enumeration 'XlSizeRepresents'
xlSizeIsWidth = 2
xlSizeIsArea = 1
XlSizeRepresents = c_int # enum
class CustomTaskPaneEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8A64A872-FC6B-4D4A-926E-3A3689562C1C}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
CustomTaskPaneEvents._methods_ = [
    COMMETHOD([dispid(1)], None, 'VisibleStateChange',
              ( ['in'], POINTER(_CustomTaskPane), 'CustomTaskPaneInst' )),
    COMMETHOD([dispid(2)], None, 'DockPositionStateChange',
              ( ['in'], POINTER(_CustomTaskPane), 'CustomTaskPaneInst' )),
]
################################################################
## code template for CustomTaskPaneEvents implementation
##class CustomTaskPaneEvents_Impl(object):
##    def DockPositionStateChange(self, CustomTaskPaneInst):
##        '-no docstring-'
##        #return 
##
##    def VisibleStateChange(self, CustomTaskPaneInst):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoCTPDockPosition'
msoCTPDockPositionLeft = 0
msoCTPDockPositionTop = 1
msoCTPDockPositionRight = 2
msoCTPDockPositionBottom = 3
msoCTPDockPositionFloating = 4
MsoCTPDockPosition = c_int # enum

# values for enumeration 'MsoCTPDockPositionRestrict'
msoCTPDockPositionRestrictNone = 0
msoCTPDockPositionRestrictNoChange = 1
msoCTPDockPositionRestrictNoHorizontal = 2
msoCTPDockPositionRestrictNoVertical = 3
MsoCTPDockPositionRestrict = c_int # enum
_CustomTaskPane._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Window',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ContentControl',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'DockPosition',
              ( ['retval', 'out'], POINTER(MsoCTPDockPosition), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'DockPosition',
              ( ['in'], MsoCTPDockPosition, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'DockPositionRestrict',
              ( ['retval', 'out'], POINTER(MsoCTPDockPositionRestrict), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'DockPositionRestrict',
              ( ['in'], MsoCTPDockPositionRestrict, 'prop' )),
    COMMETHOD([dispid(9)], HRESULT, 'Delete'),
]
################################################################
## code template for _CustomTaskPane implementation
##class _CustomTaskPane_Impl(object):
##    @property
##    def Title(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DockPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Window(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContentControl(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DockPositionRestrict = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlChartSplitType'
xlSplitByPosition = 1
xlSplitByPercentValue = 3
xlSplitByCustomSplit = 4
xlSplitByValue = 2
XlChartSplitType = c_int # enum
class WebPageFonts(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0914-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
WebPageFonts._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], MsoCharacterSet, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(WebPageFont)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
]
################################################################
## code template for WebPageFonts implementation
##class WebPageFonts_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##


# values for enumeration 'XlVAlign'
xlVAlignBottom = -4107
xlVAlignCenter = -4108
xlVAlignDistributed = -4117
xlVAlignJustify = -4130
xlVAlignTop = -4160
XlVAlign = c_int # enum

# values for enumeration 'MsoBarRow'
msoBarRowFirst = 0
msoBarRowLast = -1
MsoBarRow = c_int # enum
class WebComponentProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0373-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
WebComponentProperties._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RetValue' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'URL',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'URL',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'HTML',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'HTML',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'PreviewGraphic',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'PreviewGraphic',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'PreviewHTML',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'PreviewHTML',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'RetValue' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'RetValue' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Tag',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Tag',
              ( ['in'], BSTR, 'RetValue' )),
]
################################################################
## code template for WebComponentProperties implementation
##class WebComponentProperties_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    URL = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    PreviewGraphic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    PreviewHTML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return RetValue
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    HTML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Tag = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoSearchIn'
msoSearchInMyComputer = 0
msoSearchInOutlook = 1
msoSearchInMyNetworkPlaces = 2
msoSearchInCustom = 3
MsoSearchIn = c_int # enum

# values for enumeration 'MsoButtonStyleHidden'
msoButtonWrapText = 4
msoButtonTextBelow = 8
MsoButtonStyleHidden = c_int # enum
class MsoDebugOptions_UT(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C038B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
MsoDebugOptions_UT._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'CollectionName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrColName' )),
    COMMETHOD([dispid(2)], HRESULT, 'Run',
              ( ['retval', 'out'], POINTER(POINTER(MsoDebugOptions_UTRunResult)), 'ppRunResult' )),
]
################################################################
## code template for MsoDebugOptions_UT implementation
##class MsoDebugOptions_UT_Impl(object):
##    def Run(self):
##        '-no docstring-'
##        #return ppRunResult
##
##    @property
##    def CollectionName(self):
##        '-no docstring-'
##        #return pbstrColName
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##

class MsoDebugOptions_UTs(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C038A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
MsoDebugOptions_UTs._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(MsoDebugOptions_UT)), 'ppUnitTest' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'iCountRetVal' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD([dispid(2)], HRESULT, 'GetUnitTestsInCollection',
              ( ['in'], BSTR, 'bstrCollectionName' ),
              ( ['retval', 'out'], POINTER(POINTER(MsoDebugOptions_UTs)), 'MsoDebugOptions_UTs' )),
    COMMETHOD([dispid(3)], HRESULT, 'GetUnitTest',
              ( ['in'], BSTR, 'bstrCollectionName' ),
              ( ['in'], BSTR, 'bstrUnitTestName' ),
              ( ['retval', 'out'], POINTER(POINTER(MsoDebugOptions_UT)), 'MsoDebugOptions_UT' )),
    COMMETHOD([dispid(4)], HRESULT, 'GetMatchingUnitTestsInCollection',
              ( ['in'], BSTR, 'bstrCollectionName' ),
              ( ['in'], BSTR, 'bstrUnitTestNameFilter' ),
              ( ['retval', 'out'], POINTER(POINTER(MsoDebugOptions_UTs)), 'MsoDebugOptions_UTs' )),
]
################################################################
## code template for MsoDebugOptions_UTs implementation
##class MsoDebugOptions_UTs_Impl(object):
##    def GetMatchingUnitTestsInCollection(self, bstrCollectionName, bstrUnitTestNameFilter):
##        '-no docstring-'
##        #return MsoDebugOptions_UTs
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppUnitTest
##
##    def GetUnitTestsInCollection(self, bstrCollectionName):
##        '-no docstring-'
##        #return MsoDebugOptions_UTs
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iCountRetVal
##
##    def GetUnitTest(self, bstrCollectionName, bstrUnitTestName):
##        '-no docstring-'
##        #return MsoDebugOptions_UT
##

class SharedWorkspaceMember(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0381-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceMember._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'DomainName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrDomainName' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Email',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrEmail' )),
    COMMETHOD([dispid(3)], HRESULT, 'Delete'),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'Id' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for SharedWorkspaceMember implementation
##class SharedWorkspaceMember_Impl(object):
##    @property
##    def Email(self):
##        '-no docstring-'
##        #return pbstrEmail
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def DomainName(self):
##        '-no docstring-'
##        #return pbstrDomainName
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return Id
##

class ScopeFolders(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0369-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
class ScopeFolder(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0368-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
ScopeFolders._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ScopeFolder)), 'ScopeFolderRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'iCountRetVal' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for ScopeFolders implementation
##class ScopeFolders_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iCountRetVal
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ScopeFolderRet
##

class WebComponentWindowExternal(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD101-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class WebComponent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD100-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
WebComponentWindowExternal._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'InterfaceVersion',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ApplicationName',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ApplicationVersion',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RetValue' )),
    COMMETHOD([dispid(5)], HRESULT, 'CloseWindow'),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'WebComponent',
              ( ['retval', 'out'], POINTER(POINTER(WebComponent)), 'RetValue' )),
]
################################################################
## code template for WebComponentWindowExternal implementation
##class WebComponentWindowExternal_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def ApplicationName(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def WebComponent(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def ApplicationVersion(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def InterfaceVersion(self):
##        '-no docstring-'
##        #return RetValue
##
##    def CloseWindow(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoFileNewAction'
msoEditFile = 0
msoCreateNewFile = 1
msoOpenFile = 2
MsoFileNewAction = c_int # enum

# values for enumeration 'MsoMixedType'
msoIntegerMixed = 32768
msoSingleMixed = -2147483648
MsoMixedType = c_int # enum

# values for enumeration 'MsoFileFindListBy'
msoListbyName = 1
msoListbyTitle = 2
MsoFileFindListBy = c_int # enum
class WebComponentFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD102-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
WebComponentFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RetValue' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'URL',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'URL',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'HTML',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'HTML',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'RetValue' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'RetValue' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'PreviewGraphic',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'PreviewGraphic',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(9)], HRESULT, 'LaunchPropertiesWindow'),
]
################################################################
## code template for WebComponentFormat implementation
##class WebComponentFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    URL = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PreviewGraphic = property(_get, _set, doc = _set.__doc__)
##
##    def LaunchPropertiesWindow(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    HTML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RetValue
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoBackgroundStyleIndex'
msoBackgroundStyleMixed = -2
msoBackgroundStyleNotAPreset = 0
msoBackgroundStylePreset1 = 1
msoBackgroundStylePreset2 = 2
msoBackgroundStylePreset3 = 3
msoBackgroundStylePreset4 = 4
msoBackgroundStylePreset5 = 5
msoBackgroundStylePreset6 = 6
msoBackgroundStylePreset7 = 7
msoBackgroundStylePreset8 = 8
msoBackgroundStylePreset9 = 9
msoBackgroundStylePreset10 = 10
msoBackgroundStylePreset11 = 11
msoBackgroundStylePreset12 = 12
MsoBackgroundStyleIndex = c_int # enum
Ruler2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Levels',
              ( ['retval', 'out'], POINTER(POINTER(RulerLevels2)), 'RulerLevels' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'TabStops',
              ( ['retval', 'out'], POINTER(POINTER(TabStops2)), 'TabStops' )),
]
################################################################
## code template for Ruler2 implementation
##class Ruler2_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Levels(self):
##        '-no docstring-'
##        #return RulerLevels
##
##    @property
##    def TabStops(self):
##        '-no docstring-'
##        #return TabStops
##

GlowFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Radius',
              ( ['retval', 'out'], POINTER(c_float), 'Radius' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Radius',
              ( ['in'], c_float, 'Radius' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'Color' )),
]
################################################################
## code template for GlowFormat implementation
##class GlowFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Radius
##    def _set(self, Radius):
##        '-no docstring-'
##    Radius = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return Color
##


# values for enumeration 'MsoMetaPropertyType'
msoMetaPropertyTypeUnknown = 0
msoMetaPropertyTypeBoolean = 1
msoMetaPropertyTypeChoice = 2
msoMetaPropertyTypeCalculated = 3
msoMetaPropertyTypeComputed = 4
msoMetaPropertyTypeCurrency = 5
msoMetaPropertyTypeDateTime = 6
msoMetaPropertyTypeFillInChoice = 7
msoMetaPropertyTypeGuid = 8
msoMetaPropertyTypeInteger = 9
msoMetaPropertyTypeLookup = 10
msoMetaPropertyTypeMultiChoiceLookup = 11
msoMetaPropertyTypeMultiChoice = 12
msoMetaPropertyTypeMultiChoiceFillIn = 13
msoMetaPropertyTypeNote = 14
msoMetaPropertyTypeNumber = 15
msoMetaPropertyTypeText = 16
msoMetaPropertyTypeUrl = 17
msoMetaPropertyTypeUser = 18
msoMetaPropertyTypeUserMulti = 19
msoMetaPropertyTypeBusinessData = 20
msoMetaPropertyTypeMax = 21
MsoMetaPropertyType = c_int # enum
MetaProperty._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarValue' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'pvarValue' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrID' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IsReadOnly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfReadOnly' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'IsRequired',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfRequired' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoMetaPropertyType), 'ptype' )),
    COMMETHOD([dispid(6)], HRESULT, 'Validate',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrError' )),
    COMMETHOD([dispid(7), 'hidden', 'propget'], HRESULT, 'ValidationError',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for MetaProperty implementation
##class MetaProperty_Impl(object):
##    def Validate(self):
##        '-no docstring-'
##        #return pbstrError
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarValue
##    def _set(self, pvarValue):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsRequired(self):
##        '-no docstring-'
##        #return pfRequired
##
##    @property
##    def ValidationError(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return ptype
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def IsReadOnly(self):
##        '-no docstring-'
##        #return pfReadOnly
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pbstrID
##


# values for enumeration 'MsoDiagramType'
msoDiagramMixed = -2
msoDiagramOrgChart = 1
msoDiagramCycle = 2
msoDiagramRadial = 3
msoDiagramPyramid = 4
msoDiagramVenn = 5
msoDiagramTarget = 6
MsoDiagramType = c_int # enum
Shapes._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddCallout',
              ( ['in'], MsoCalloutType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Callout' )),
    COMMETHOD([dispid(11)], HRESULT, 'AddConnector',
              ( ['in'], MsoConnectorType, 'Type' ),
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Connector' )),
    COMMETHOD([dispid(12)], HRESULT, 'AddCurve',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Curve' )),
    COMMETHOD([dispid(13)], HRESULT, 'AddLabel',
              ( ['in'], MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Label' )),
    COMMETHOD([dispid(14)], HRESULT, 'AddLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Line' )),
    COMMETHOD([dispid(15)], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], MsoTriState, 'LinkToFile' ),
              ( ['in'], MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Picture' )),
    COMMETHOD([dispid(16)], HRESULT, 'AddPolyline',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Polyline' )),
    COMMETHOD([dispid(17)], HRESULT, 'AddShape',
              ( ['in'], MsoAutoShapeType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(18)], HRESULT, 'AddTextEffect',
              ( ['in'], MsoPresetTextEffect, 'PresetTextEffect' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_float, 'FontSize' ),
              ( ['in'], MsoTriState, 'FontBold' ),
              ( ['in'], MsoTriState, 'FontItalic' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'TextEffect' )),
    COMMETHOD([dispid(19)], HRESULT, 'AddTextbox',
              ( ['in'], MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Textbox' )),
    COMMETHOD([dispid(20)], HRESULT, 'BuildFreeform',
              ( ['in'], MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['retval', 'out'], POINTER(POINTER(FreeformBuilder)), 'FreeformBuilder' )),
    COMMETHOD([dispid(21)], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'Range' )),
    COMMETHOD([dispid(22)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Background',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Background' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Default' )),
    COMMETHOD([dispid(23), 'hidden'], HRESULT, 'AddDiagram',
              ( ['in'], MsoDiagramType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Diagram' )),
    COMMETHOD([dispid(25), 'hidden'], HRESULT, 'AddCanvas',
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(26)], HRESULT, 'AddChart',
              ( ['in', 'optional'], XlChartType, 'Type', -1 ),
              ( ['in', 'optional'], c_float, 'Left', -1.0 ),
              ( ['in', 'optional'], c_float, 'Top', -1.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Chart' )),
    COMMETHOD([dispid(27), 'hidden'], HRESULT, 'AddTable',
              ( ['in'], c_int, 'NumRows' ),
              ( ['in'], c_int, 'NumColumns' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Table' )),
]
################################################################
## code template for Shapes implementation
##class Shapes_Impl(object):
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##
##    def AddChart(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Chart
##
##    def AddLabel(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Label
##
##    def AddTable(self, NumRows, NumColumns, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Table
##
##    def AddShape(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Shape
##
##    def AddPicture(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Picture
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return Range
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def AddPolyline(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Polyline
##
##    def AddTextEffect(self, PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top):
##        '-no docstring-'
##        #return TextEffect
##
##    def AddLine(self, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Line
##
##    def BuildFreeform(self, EditingType, X1, Y1):
##        '-no docstring-'
##        #return FreeformBuilder
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def AddTextbox(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Textbox
##
##    def AddCurve(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Curve
##
##    def AddConnector(self, Type, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Connector
##
##    def AddCanvas(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Shape
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return Default
##
##    def AddCallout(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Callout
##
##    def AddDiagram(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Diagram
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##

class FileTypes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C036C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
FileTypes._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(MsoFileType), 'MsoFileTypeRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'iCountRetVal' )),
    COMMETHOD([dispid(3)], HRESULT, 'Add',
              ( ['in'], MsoFileType, 'FileType' )),
    COMMETHOD([dispid(4)], HRESULT, 'Remove',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for FileTypes implementation
##class FileTypes_Impl(object):
##    def Remove(self, Index):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iCountRetVal
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Add(self, FileType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return MsoFileTypeRet
##

class LegendEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1719-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class LegendEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C171A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
LegendEntries._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(LegendEntry)), 'RHS' )),
    COMMETHOD(['nonbrowsable'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(LegendEntry)), 'RHS' )),
]
################################################################
## code template for LegendEntries implementation
##class LegendEntries_Impl(object):
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##


# values for enumeration 'MsoTextChangeCase'
msoCaseSentence = 1
msoCaseLower = 2
msoCaseUpper = 3
msoCaseTitle = 4
msoCaseToggle = 5
MsoTextChangeCase = c_int # enum
class SharedWorkspaceMembers(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0382-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceMembers._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceMember)), 'ppidisp' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Email' ),
              ( ['in'], BSTR, 'DomainName' ),
              ( ['in'], BSTR, 'DisplayName' ),
              ( ['in', 'optional'], VARIANT, 'Role' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceMember)), 'ppMember' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ItemCountExceeded',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pf' )),
]
################################################################
## code template for SharedWorkspaceMembers implementation
##class SharedWorkspaceMembers_Impl(object):
##    @property
##    def ItemCountExceeded(self):
##        '-no docstring-'
##        #return pf
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Add(self, Email, DomainName, DisplayName, Role):
##        '-no docstring-'
##        #return ppMember
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcItems
##

class ILicWizExternal(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4CAC6328-B9B0-11D3-8D59-0050048384E3}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ILicWizExternal._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'PrintHtmlDocument',
              ( ['in'], POINTER(IUnknown), 'punkHtmlDoc' )),
    COMMETHOD([dispid(2)], HRESULT, 'InvokeDateTimeApplet'),
    COMMETHOD([dispid(3)], HRESULT, 'FormatDate',
              ( ['in'], c_double, 'date' ),
              ( ['in', 'optional'], BSTR, 'pFormat' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pDateString' )),
    COMMETHOD([dispid(4)], HRESULT, 'ShowHelp',
              ( ['in', 'optional'], POINTER(VARIANT), 'pvarId' )),
    COMMETHOD([dispid(5)], HRESULT, 'Terminate'),
    COMMETHOD([dispid(6)], HRESULT, 'DisableVORWReminder',
              ( ['in'], c_int, 'BPC' )),
    COMMETHOD([dispid(7)], HRESULT, 'SaveReceipt',
              ( ['in'], BSTR, 'bstrReceipt' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPath' )),
    COMMETHOD([dispid(8)], HRESULT, 'OpenInDefaultBrowser',
              ( ['in'], BSTR, 'bstrUrl' )),
    COMMETHOD([dispid(9)], HRESULT, 'MsoAlert',
              ( ['in'], BSTR, 'bstrText' ),
              ( ['in'], BSTR, 'bstrButtons' ),
              ( ['in'], BSTR, 'bstrIcon' ),
              ( ['retval', 'out'], POINTER(c_int), 'plRet' )),
    COMMETHOD([dispid(10)], HRESULT, 'DepositPidKey',
              ( ['in'], BSTR, 'bstrKey' ),
              ( ['in'], c_int, 'fMORW' ),
              ( ['retval', 'out'], POINTER(c_int), 'plRet' )),
    COMMETHOD([dispid(11)], HRESULT, 'WriteLog',
              ( ['in'], BSTR, 'bstrMessage' )),
    COMMETHOD([dispid(12)], HRESULT, 'ResignDpc',
              ( ['in'], BSTR, 'bstrProductCode' )),
    COMMETHOD([dispid(13)], HRESULT, 'ResetPID'),
    COMMETHOD([dispid(14)], HRESULT, 'SetDialogSize',
              ( ['in'], c_int, 'dx' ),
              ( ['in'], c_int, 'dy' )),
    COMMETHOD([dispid(15)], HRESULT, 'VerifyClock',
              ( ['in'], c_int, 'lMode' ),
              ( ['retval', 'out'], POINTER(c_int), 'plRet' )),
    COMMETHOD([dispid(16)], HRESULT, 'SortSelectOptions',
              ( ['in'], POINTER(IDispatch), 'pdispSelect' )),
    COMMETHOD([dispid(17)], HRESULT, 'InternetDisconnect'),
    COMMETHOD([dispid(18)], HRESULT, 'GetConnectedState',
              ( ['retval', 'out'], POINTER(c_int), 'pfConnected' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Context',
              ( ['retval', 'out'], POINTER(c_int), 'plwctx' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'Validator',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispValidator' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'LicAgent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispLicAgent' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'CountryInfo',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrUrl' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'WizardVisible',
              ( ['in'], c_int, 'rhs' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'WizardTitle',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'AnimationEnabled',
              ( ['retval', 'out'], POINTER(c_int), 'fEnabled' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'CurrentHelpId',
              ( ['in'], c_int, 'rhs' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'OfficeOnTheWebUrl',
              ( ['retval', 'out'], POINTER(BSTR), 'bstrUrl' )),
]
################################################################
## code template for ILicWizExternal implementation
##class ILicWizExternal_Impl(object):
##    def PrintHtmlDocument(self, punkHtmlDoc):
##        '-no docstring-'
##        #return 
##
##    def DisableVORWReminder(self, BPC):
##        '-no docstring-'
##        #return 
##
##    def SaveReceipt(self, bstrReceipt):
##        '-no docstring-'
##        #return pbstrPath
##
##    def MsoAlert(self, bstrText, bstrButtons, bstrIcon):
##        '-no docstring-'
##        #return plRet
##
##    def WriteLog(self, bstrMessage):
##        '-no docstring-'
##        #return 
##
##    def ResignDpc(self, bstrProductCode):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        '-no docstring-'
##    WizardVisible = property(fset = _set, doc = _set.__doc__)
##
##    def VerifyClock(self, lMode):
##        '-no docstring-'
##        #return plRet
##
##    def FormatDate(self, date, pFormat):
##        '-no docstring-'
##        #return pDateString
##
##    def Terminate(self):
##        '-no docstring-'
##        #return 
##
##    def InvokeDateTimeApplet(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Context(self):
##        '-no docstring-'
##        #return plwctx
##
##    def OpenInDefaultBrowser(self, bstrUrl):
##        '-no docstring-'
##        #return 
##
##    def ShowHelp(self, pvarId):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OfficeOnTheWebUrl(self):
##        '-no docstring-'
##        #return bstrUrl
##
##    @property
##    def CountryInfo(self):
##        '-no docstring-'
##        #return pbstrUrl
##
##    def SortSelectOptions(self, pdispSelect):
##        '-no docstring-'
##        #return 
##
##    def InternetDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        '-no docstring-'
##    WizardTitle = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def Validator(self):
##        '-no docstring-'
##        #return ppdispValidator
##
##    def SetDialogSize(self, dx, dy):
##        '-no docstring-'
##        #return 
##
##    def DepositPidKey(self, bstrKey, fMORW):
##        '-no docstring-'
##        #return plRet
##
##    def GetConnectedState(self):
##        '-no docstring-'
##        #return pfConnected
##
##    @property
##    def AnimationEnabled(self):
##        '-no docstring-'
##        #return fEnabled
##
##    def _set(self, rhs):
##        '-no docstring-'
##    CurrentHelpId = property(fset = _set, doc = _set.__doc__)
##
##    def ResetPID(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def LicAgent(self):
##        '-no docstring-'
##        #return ppdispLicAgent
##

SharedWorkspaceTask._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'Title' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'Title' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'AssignedTo',
              ( ['retval', 'out'], POINTER(BSTR), 'AssignedTo' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'AssignedTo',
              ( ['in'], BSTR, 'AssignedTo' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(MsoSharedWorkspaceTaskStatus), 'Status' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Status',
              ( ['in'], MsoSharedWorkspaceTaskStatus, 'Status' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(MsoSharedWorkspaceTaskPriority), 'Priority' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Priority',
              ( ['in'], MsoSharedWorkspaceTaskPriority, 'Priority' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'Description' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'Description' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'DueDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'DueDate' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'DueDate',
              ( ['in'], VARIANT, 'DueDate' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'CreatedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'CreatedBy' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'CreatedDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'CreatedDate' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ModifiedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'ModifiedBy' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ModifiedDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'ModifiedDate' )),
    COMMETHOD([dispid(10)], HRESULT, 'Save'),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for SharedWorkspaceTask implementation
##class SharedWorkspaceTask_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Description
##    def _set(self, Description):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Save(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def _get(self):
##        '-no docstring-'
##        #return DueDate
##    def _set(self, DueDate):
##        '-no docstring-'
##    DueDate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AssignedTo
##    def _set(self, AssignedTo):
##        '-no docstring-'
##    AssignedTo = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ModifiedBy(self):
##        '-no docstring-'
##        #return ModifiedBy
##
##    def _get(self):
##        '-no docstring-'
##        #return Title
##    def _set(self, Title):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Priority
##    def _set(self, Priority):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CreatedDate(self):
##        '-no docstring-'
##        #return CreatedDate
##
##    @property
##    def CreatedBy(self):
##        '-no docstring-'
##        #return CreatedBy
##
##    def _get(self):
##        '-no docstring-'
##        #return Status
##    def _set(self, Status):
##        '-no docstring-'
##    Status = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ModifiedDate(self):
##        '-no docstring-'
##        #return ModifiedDate
##


# values for enumeration 'MsoHyperlinkType'
msoHyperlinkRange = 0
msoHyperlinkShape = 1
msoHyperlinkInlineShape = 2
MsoHyperlinkType = c_int # enum

# values for enumeration 'MsoSortBy'
msoSortByFileName = 1
msoSortBySize = 2
msoSortByFileType = 3
msoSortByLastModified = 4
msoSortByNone = 5
MsoSortBy = c_int # enum
class IMsoDataLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C171F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMsoDataLabels._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoCharacters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLinked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowLegendKey',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlDataLabelPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowSeriesName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowCategoryName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowValue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowPercentage',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowBubbleSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Separator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoDataLabel)), 'RHS' )),
    COMMETHOD(['nonbrowsable'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoDataLabel)), 'RHS' )),
]
################################################################
## code template for IMsoDataLabels implementation
##class IMsoDataLabels_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##


# values for enumeration 'MsoExtraInfoMethod'
msoMethodGet = 0
msoMethodPost = 1
MsoExtraInfoMethod = c_int # enum
class FoundFiles(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0331-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
FoundFiles._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrFile' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pc' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for FoundFiles implementation
##class FoundFiles_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pc
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index, lcid):
##        '-no docstring-'
##        #return pbstrFile
##


# values for enumeration 'MsoLightRigType'
msoLightRigMixed = -2
msoLightRigLegacyFlat1 = 1
msoLightRigLegacyFlat2 = 2
msoLightRigLegacyFlat3 = 3
msoLightRigLegacyFlat4 = 4
msoLightRigLegacyNormal1 = 5
msoLightRigLegacyNormal2 = 6
msoLightRigLegacyNormal3 = 7
msoLightRigLegacyNormal4 = 8
msoLightRigLegacyHarsh1 = 9
msoLightRigLegacyHarsh2 = 10
msoLightRigLegacyHarsh3 = 11
msoLightRigLegacyHarsh4 = 12
msoLightRigThreePoint = 13
msoLightRigBalanced = 14
msoLightRigSoft = 15
msoLightRigHarsh = 16
msoLightRigFlood = 17
msoLightRigContrasting = 18
msoLightRigMorning = 19
msoLightRigSunrise = 20
msoLightRigSunset = 21
msoLightRigChilly = 22
msoLightRigFreezing = 23
msoLightRigFlat = 24
msoLightRigTwoPoint = 25
msoLightRigGlow = 26
msoLightRigBrightRoom = 27
MsoLightRigType = c_int # enum
LegendEntry._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LegendKey',
              ( ['retval', 'out'], POINTER(POINTER(IMsoLegendKey)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for LegendEntry implementation
##class LegendEntry_Impl(object):
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LegendKey(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##

class SeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C170A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class IMsoSeries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C170B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'oleautomation']
SeriesCollection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], XlRowCol, 'Rowcol', 2 ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoSeries)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Extend',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'Rowcol' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoSeries)), 'RHS' )),
    COMMETHOD(['nonbrowsable'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['in', 'optional'], XlRowCol, 'Rowcol', 2 ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'optional'], VARIANT, 'NewSeries' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'NewSeries',
              ( ['retval', 'out'], POINTER(POINTER(IMsoSeries)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IMsoSeries)), 'RHS' )),
]
################################################################
## code template for SeriesCollection implementation
##class SeriesCollection_Impl(object):
##    def NewSeries(self):
##        '-no docstring-'
##        #return RHS
##
##    def Extend(self, Source, Rowcol, CategoryLabels):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self, Rowcol, SeriesLabels, CategoryLabels, Replace, NewSeries):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Source, Rowcol, SeriesLabels, CategoryLabels, Replace):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##

class MsoDebugOptions_UTManager(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0389-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
MsoDebugOptions_UTManager._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'UnitTests',
              ( ['retval', 'out'], POINTER(POINTER(MsoDebugOptions_UTs)), 'ppMsoUnitTests' )),
    COMMETHOD([dispid(1)], HRESULT, 'NotifyStartOfTestSuiteRun'),
    COMMETHOD([dispid(2)], HRESULT, 'NotifyEndOfTestSuiteRun'),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ReportErrors',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfReportErrors' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'ReportErrors',
              ( ['in'], VARIANT_BOOL, 'pfReportErrors' )),
]
################################################################
## code template for MsoDebugOptions_UTManager implementation
##class MsoDebugOptions_UTManager_Impl(object):
##    def NotifyStartOfTestSuiteRun(self):
##        '-no docstring-'
##        #return 
##
##    def NotifyEndOfTestSuiteRun(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UnitTests(self):
##        '-no docstring-'
##        #return ppMsoUnitTests
##
##    def _get(self):
##        '-no docstring-'
##        #return pfReportErrors
##    def _set(self, pfReportErrors):
##        '-no docstring-'
##    ReportErrors = property(_get, _set, doc = _set.__doc__)
##

class ICommandBarsEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{55F88892-7708-11D1-ACEB-006008961DA5}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ICommandBarsEvents._methods_ = [
    COMMETHOD([dispid(1)], None, 'OnUpdate'),
]
################################################################
## code template for ICommandBarsEvents implementation
##class ICommandBarsEvents_Impl(object):
##    def OnUpdate(self):
##        '-no docstring-'
##        #return 
##

class LanguageSettings(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0353-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoAppLanguageID'
msoLanguageIDInstall = 1
msoLanguageIDUI = 2
msoLanguageIDHelp = 3
msoLanguageIDExeMode = 4
msoLanguageIDUIPrevious = 5
MsoAppLanguageID = c_int # enum

# values for enumeration 'MsoLanguageID'
msoLanguageIDMixed = -2
msoLanguageIDNone = 0
msoLanguageIDNoProofing = 1024
msoLanguageIDAfrikaans = 1078
msoLanguageIDAlbanian = 1052
msoLanguageIDAmharic = 1118
msoLanguageIDArabicAlgeria = 5121
msoLanguageIDArabicBahrain = 15361
msoLanguageIDArabicEgypt = 3073
msoLanguageIDArabicIraq = 2049
msoLanguageIDArabicJordan = 11265
msoLanguageIDArabicKuwait = 13313
msoLanguageIDArabicLebanon = 12289
msoLanguageIDArabicLibya = 4097
msoLanguageIDArabicMorocco = 6145
msoLanguageIDArabicOman = 8193
msoLanguageIDArabicQatar = 16385
msoLanguageIDArabic = 1025
msoLanguageIDArabicSyria = 10241
msoLanguageIDArabicTunisia = 7169
msoLanguageIDArabicUAE = 14337
msoLanguageIDArabicYemen = 9217
msoLanguageIDArmenian = 1067
msoLanguageIDAssamese = 1101
msoLanguageIDAzeriCyrillic = 2092
msoLanguageIDAzeriLatin = 1068
msoLanguageIDBasque = 1069
msoLanguageIDByelorussian = 1059
msoLanguageIDBengali = 1093
msoLanguageIDBosnian = 4122
msoLanguageIDBosnianBosniaHerzegovinaCyrillic = 8218
msoLanguageIDBosnianBosniaHerzegovinaLatin = 5146
msoLanguageIDBulgarian = 1026
msoLanguageIDBurmese = 1109
msoLanguageIDCatalan = 1027
msoLanguageIDChineseHongKongSAR = 3076
msoLanguageIDChineseMacaoSAR = 5124
msoLanguageIDSimplifiedChinese = 2052
msoLanguageIDChineseSingapore = 4100
msoLanguageIDTraditionalChinese = 1028
msoLanguageIDCherokee = 1116
msoLanguageIDCroatian = 1050
msoLanguageIDCzech = 1029
msoLanguageIDDanish = 1030
msoLanguageIDDivehi = 1125
msoLanguageIDBelgianDutch = 2067
msoLanguageIDDutch = 1043
msoLanguageIDDzongkhaBhutan = 2129
msoLanguageIDEdo = 1126
msoLanguageIDEnglishAUS = 3081
msoLanguageIDEnglishBelize = 10249
msoLanguageIDEnglishCanadian = 4105
msoLanguageIDEnglishCaribbean = 9225
msoLanguageIDEnglishIndonesia = 14345
msoLanguageIDEnglishIreland = 6153
msoLanguageIDEnglishJamaica = 8201
msoLanguageIDEnglishNewZealand = 5129
msoLanguageIDEnglishPhilippines = 13321
msoLanguageIDEnglishSouthAfrica = 7177
msoLanguageIDEnglishTrinidadTobago = 11273
msoLanguageIDEnglishUK = 2057
msoLanguageIDEnglishUS = 1033
msoLanguageIDEnglishZimbabwe = 12297
msoLanguageIDEstonian = 1061
msoLanguageIDFaeroese = 1080
msoLanguageIDFarsi = 1065
msoLanguageIDFilipino = 1124
msoLanguageIDFinnish = 1035
msoLanguageIDBelgianFrench = 2060
msoLanguageIDFrenchCameroon = 11276
msoLanguageIDFrenchCanadian = 3084
msoLanguageIDFrenchCotedIvoire = 12300
msoLanguageIDFrench = 1036
msoLanguageIDFrenchHaiti = 15372
msoLanguageIDFrenchLuxembourg = 5132
msoLanguageIDFrenchMali = 13324
msoLanguageIDFrenchMonaco = 6156
msoLanguageIDFrenchMorocco = 14348
msoLanguageIDFrenchReunion = 8204
msoLanguageIDFrenchSenegal = 10252
msoLanguageIDSwissFrench = 4108
msoLanguageIDFrenchWestIndies = 7180
msoLanguageIDFrenchZaire = 9228
msoLanguageIDFrenchCongoDRC = 9228
msoLanguageIDFrisianNetherlands = 1122
msoLanguageIDFulfulde = 1127
msoLanguageIDGaelicIreland = 2108
msoLanguageIDGaelicScotland = 1084
msoLanguageIDGalician = 1110
msoLanguageIDGeorgian = 1079
msoLanguageIDGermanAustria = 3079
msoLanguageIDGerman = 1031
msoLanguageIDGermanLiechtenstein = 5127
msoLanguageIDGermanLuxembourg = 4103
msoLanguageIDSwissGerman = 2055
msoLanguageIDGreek = 1032
msoLanguageIDGuarani = 1140
msoLanguageIDGujarati = 1095
msoLanguageIDHausa = 1128
msoLanguageIDHawaiian = 1141
msoLanguageIDHebrew = 1037
msoLanguageIDHindi = 1081
msoLanguageIDHungarian = 1038
msoLanguageIDIbibio = 1129
msoLanguageIDIcelandic = 1039
msoLanguageIDIgbo = 1136
msoLanguageIDIndonesian = 1057
msoLanguageIDInuktitut = 1117
msoLanguageIDItalian = 1040
msoLanguageIDSwissItalian = 2064
msoLanguageIDJapanese = 1041
msoLanguageIDKannada = 1099
msoLanguageIDKanuri = 1137
msoLanguageIDKashmiri = 1120
msoLanguageIDKashmiriDevanagari = 2144
msoLanguageIDKazakh = 1087
msoLanguageIDKhmer = 1107
msoLanguageIDKirghiz = 1088
msoLanguageIDKonkani = 1111
msoLanguageIDKorean = 1042
msoLanguageIDKyrgyz = 1088
msoLanguageIDLatin = 1142
msoLanguageIDLao = 1108
msoLanguageIDLatvian = 1062
msoLanguageIDLithuanian = 1063
msoLanguageIDMacedonian = 1071
msoLanguageIDMacedonianFYROM = 1071
msoLanguageIDMalaysian = 1086
msoLanguageIDMalayBruneiDarussalam = 2110
msoLanguageIDMalayalam = 1100
msoLanguageIDMaltese = 1082
msoLanguageIDManipuri = 1112
msoLanguageIDMaori = 1153
msoLanguageIDMarathi = 1102
msoLanguageIDMongolian = 1104
msoLanguageIDNepali = 1121
msoLanguageIDNorwegianBokmol = 1044
msoLanguageIDNorwegianNynorsk = 2068
msoLanguageIDOriya = 1096
msoLanguageIDOromo = 1138
msoLanguageIDPashto = 1123
msoLanguageIDPolish = 1045
msoLanguageIDBrazilianPortuguese = 1046
msoLanguageIDPortuguese = 2070
msoLanguageIDPunjabi = 1094
msoLanguageIDQuechuaBolivia = 1131
msoLanguageIDQuechuaEcuador = 2155
msoLanguageIDQuechuaPeru = 3179
msoLanguageIDRhaetoRomanic = 1047
msoLanguageIDRomanianMoldova = 2072
msoLanguageIDRomanian = 1048
msoLanguageIDRussianMoldova = 2073
msoLanguageIDRussian = 1049
msoLanguageIDSamiLappish = 1083
msoLanguageIDSanskrit = 1103
msoLanguageIDSepedi = 1132
msoLanguageIDSerbianBosniaHerzegovinaCyrillic = 7194
msoLanguageIDSerbianBosniaHerzegovinaLatin = 6170
msoLanguageIDSerbianCyrillic = 3098
msoLanguageIDSerbianLatin = 2074
msoLanguageIDSesotho = 1072
msoLanguageIDSindhi = 1113
msoLanguageIDSindhiPakistan = 2137
msoLanguageIDSinhalese = 1115
msoLanguageIDSlovak = 1051
msoLanguageIDSlovenian = 1060
msoLanguageIDSomali = 1143
msoLanguageIDSorbian = 1070
msoLanguageIDSpanishArgentina = 11274
msoLanguageIDSpanishBolivia = 16394
msoLanguageIDSpanishChile = 13322
msoLanguageIDSpanishColombia = 9226
msoLanguageIDSpanishCostaRica = 5130
msoLanguageIDSpanishDominicanRepublic = 7178
msoLanguageIDSpanishEcuador = 12298
msoLanguageIDSpanishElSalvador = 17418
msoLanguageIDSpanishGuatemala = 4106
msoLanguageIDSpanishHonduras = 18442
msoLanguageIDMexicanSpanish = 2058
msoLanguageIDSpanishNicaragua = 19466
msoLanguageIDSpanishPanama = 6154
msoLanguageIDSpanishParaguay = 15370
msoLanguageIDSpanishPeru = 10250
msoLanguageIDSpanishPuertoRico = 20490
msoLanguageIDSpanishModernSort = 3082
msoLanguageIDSpanish = 1034
msoLanguageIDSpanishUruguay = 14346
msoLanguageIDSpanishVenezuela = 8202
msoLanguageIDSutu = 1072
msoLanguageIDSwahili = 1089
msoLanguageIDSwedishFinland = 2077
msoLanguageIDSwedish = 1053
msoLanguageIDSyriac = 1114
msoLanguageIDTajik = 1064
msoLanguageIDTamil = 1097
msoLanguageIDTamazight = 1119
msoLanguageIDTamazightLatin = 2143
msoLanguageIDTatar = 1092
msoLanguageIDTelugu = 1098
msoLanguageIDThai = 1054
msoLanguageIDTibetan = 1105
msoLanguageIDTigrignaEthiopic = 1139
msoLanguageIDTigrignaEritrea = 2163
msoLanguageIDTsonga = 1073
msoLanguageIDTswana = 1074
msoLanguageIDTurkish = 1055
msoLanguageIDTurkmen = 1090
msoLanguageIDUkrainian = 1058
msoLanguageIDUrdu = 1056
msoLanguageIDUzbekCyrillic = 2115
msoLanguageIDUzbekLatin = 1091
msoLanguageIDVenda = 1075
msoLanguageIDVietnamese = 1066
msoLanguageIDWelsh = 1106
msoLanguageIDXhosa = 1076
msoLanguageIDYi = 1144
msoLanguageIDYiddish = 1085
msoLanguageIDYoruba = 1130
msoLanguageIDZulu = 1077
MsoLanguageID = c_int # enum
LanguageSettings._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'LanguageID',
              ( ['in'], MsoAppLanguageID, 'Id' ),
              ( ['retval', 'out'], POINTER(c_int), 'plid' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'LanguagePreferredForEditing',
              ( ['in'], MsoLanguageID, 'lid' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pf' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for LanguageSettings implementation
##class LanguageSettings_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def LanguagePreferredForEditing(self, lid):
##        '-no docstring-'
##        #return pf
##
##    @property
##    def LanguageID(self, Id):
##        '-no docstring-'
##        #return plid
##


# values for enumeration 'MsoAutomationSecurity'
msoAutomationSecurityLow = 1
msoAutomationSecurityByUI = 2
msoAutomationSecurityForceDisable = 3
MsoAutomationSecurity = c_int # enum

# values for enumeration 'XlConstants'
xlAutomatic = -4105
xlCombination = -4111
xlCustom = -4114
xlBar = 2
xlColumn = 3
xl3DBar = -4099
xl3DSurface = -4103
xlDefaultAutoFormat = -1
xlNone = -4142
xlAbove = 0
xlBelow = 1
xlBoth = 1
xlBottom = -4107
xlCenter = -4108
xlChecker = 9
xlCircle = 8
xlCorner = 2
xlCrissCross = 16
xlCross = 4
xlDiamond = 2
xlDistributed = -4117
xlFill = 5
xlFixedValue = 1
xlGeneral = 1
xlGray16 = 17
xlGray25 = -4124
xlGray50 = -4125
xlGray75 = -4126
xlGray8 = 18
xlGrid = 15
xlHigh = -4127
xlInside = 2
xlJustify = -4130
xlLeft = -4131
xlLightDown = 13
xlLightHorizontal = 11
xlLightUp = 14
xlLightVertical = 12
xlLow = -4134
xlMaximum = 2
xlMinimum = 4
xlMinusValues = 3
xlNextToAxis = 4
xlOpaque = 3
xlOutside = 3
xlPercent = 2
xlPlus = 9
xlPlusValues = 2
xlRight = -4152
xlScale = 3
xlSemiGray75 = 10
xlShowLabel = 4
xlShowLabelAndPercent = 5
xlShowPercent = 3
xlShowValue = 2
xlSingle = 2
xlSolid = 1
xlSquare = 1
xlStar = 5
xlStError = 4
xlTop = -4160
xlTransparent = 2
xlTriangle = 3
XlConstants = c_int # enum
class ODSOColumn(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1531-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ODSOColumn._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'plIndex' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrValue' )),
]
################################################################
## code template for ODSOColumn implementation
##class ODSOColumn_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return plIndex
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return pbstrValue
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##


# values for enumeration 'MsoArrowheadLength'
msoArrowheadLengthMixed = -2
msoArrowheadShort = 1
msoArrowheadLengthMedium = 2
msoArrowheadLong = 3
MsoArrowheadLength = c_int # enum
class IFoundFiles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0338-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IFoundFiles._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pCount' )),
    COMMETHOD([dispid(-4), 'restricted', 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for IFoundFiles implementation
##class IFoundFiles_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return pbstr
##

class ODSOColumns(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1532-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ODSOColumns._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParentOdso' )),
    COMMETHOD([dispid(1610809346)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'varIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppColumn' )),
]
################################################################
## code template for ODSOColumns implementation
##class ODSOColumns_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParentOdso
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    def Item(self, varIndex):
##        '-no docstring-'
##        #return ppColumn
##


# values for enumeration 'MsoTargetBrowser'
msoTargetBrowserV3 = 0
msoTargetBrowserV4 = 1
msoTargetBrowserIE4 = 2
msoTargetBrowserIE5 = 3
msoTargetBrowserIE6 = 4
MsoTargetBrowser = c_int # enum
class BalloonCheckbox(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0328-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
BalloonCheckbox._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809347), 'propput'], HRESULT, 'Checked',
              ( ['in'], VARIANT_BOOL, 'pvarfChecked' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'Checked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfChecked' )),
    COMMETHOD([dispid(1610809349), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610809349), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
]
################################################################
## code template for BalloonCheckbox implementation
##class BalloonCheckbox_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfChecked
##    def _set(self, pvarfChecked):
##        '-no docstring-'
##    Checked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Item(self):
##        '-no docstring-'
##        #return pbstrName
##


# values for enumeration 'MsoLineStyle'
msoLineStyleMixed = -2
msoLineSingle = 1
msoLineThinThin = 2
msoLineThinThick = 3
msoLineThickThin = 4
msoLineThickBetweenThin = 5
MsoLineStyle = c_int # enum
class Scripts(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0340-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
Scripts._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Script)), 'Item' )),
    COMMETHOD([dispid(1610809348)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(IDispatch), 'Anchor' ),
              ( ['in', 'optional'], MsoScriptLocation, 'Location', 2 ),
              ( ['in', 'optional'], MsoScriptLanguage, 'Language', 2 ),
              ( ['in', 'optional'], BSTR, 'Id', '' ),
              ( ['in', 'optional'], BSTR, 'Extended', '' ),
              ( ['in', 'optional'], BSTR, 'ScriptText', '' ),
              ( ['retval', 'out'], POINTER(POINTER(Script)), 'Add' )),
    COMMETHOD([dispid(1610809349)], HRESULT, 'Delete'),
]
################################################################
## code template for Scripts implementation
##class Scripts_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def Add(self, Anchor, Location, Language, Id, Extended, ScriptText):
##        '-no docstring-'
##        #return Add
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##

class ICustomXMLPartEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CDB06-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ICustomXMLPartEvents._methods_ = [
    COMMETHOD([dispid(1)], None, 'NodeAfterInsert',
              ( ['in'], POINTER(CustomXMLNode), 'NewNode' ),
              ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    COMMETHOD([dispid(2)], None, 'NodeAfterDelete',
              ( ['in'], POINTER(CustomXMLNode), 'OldNode' ),
              ( ['in'], POINTER(CustomXMLNode), 'OldParentNode' ),
              ( ['in'], POINTER(CustomXMLNode), 'OldNextSibling' ),
              ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    COMMETHOD([dispid(3)], None, 'NodeAfterReplace',
              ( ['in'], POINTER(CustomXMLNode), 'OldNode' ),
              ( ['in'], POINTER(CustomXMLNode), 'NewNode' ),
              ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
]
################################################################
## code template for ICustomXMLPartEvents implementation
##class ICustomXMLPartEvents_Impl(object):
##    def NodeAfterDelete(self, OldNode, OldParentNode, OldNextSibling, InUndoRedo):
##        '-no docstring-'
##        #return 
##
##    def NodeAfterReplace(self, OldNode, NewNode, InUndoRedo):
##        '-no docstring-'
##        #return 
##
##    def NodeAfterInsert(self, NewNode, InUndoRedo):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoArrowheadWidth'
msoArrowheadWidthMixed = -2
msoArrowheadNarrow = 1
msoArrowheadWidthMedium = 2
msoArrowheadWide = 3
MsoArrowheadWidth = c_int # enum

# values for enumeration 'XlBorderWeight'
xlHairline = 1
xlMedium = -4138
xlThick = 4
xlThin = 2
XlBorderWeight = c_int # enum
WorkflowTemplate._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'DocumentLibraryName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'DocumentLibraryURL',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(6)], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(c_int), 'pRet' )),
]
################################################################
## code template for WorkflowTemplate implementation
##class WorkflowTemplate_Impl(object):
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def DocumentLibraryName(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def DocumentLibraryURL(self):
##        '-no docstring-'
##        #return pbstr
##
##    def Show(self):
##        '-no docstring-'
##        #return pRet
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pbstr
##

class Library(object):
    'Microsoft Office 12.0 Object Library'
    name = 'Office'
    _reg_typelib_ = ('{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}', 2, 4)

class SignatureInfo(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD6A2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']

# values for enumeration 'SignatureDetail'
sigdetLocalSigningTime = 0
sigdetApplicationName = 1
sigdetApplicationVersion = 2
sigdetOfficeVersion = 3
sigdetWindowsVersion = 4
sigdetNumberOfMonitors = 5
sigdetHorizResolution = 6
sigdetVertResolution = 7
sigdetColorDepth = 8
sigdetSignedData = 9
sigdetDocPreviewImg = 10
sigdetIPFormHash = 11
sigdetIPCurrentView = 12
sigdetSignatureType = 13
sigdetHashAlgorithm = 14
sigdetShouldShowViewWarning = 15
sigdetDelSuggSigner = 16
sigdetDelSuggSignerSet = 17
sigdetDelSuggSignerLine2 = 18
sigdetDelSuggSignerLine2Set = 19
sigdetDelSuggSignerEmail = 20
sigdetDelSuggSignerEmailSet = 21
SignatureDetail = c_int # enum

# values for enumeration 'CertificateDetail'
certdetAvailable = 0
certdetSubject = 1
certdetIssuer = 2
certdetExpirationDate = 3
certdetThumbprint = 4
CertificateDetail = c_int # enum

# values for enumeration 'ContentVerificationResults'
contverresError = 0
contverresVerifying = 1
contverresUnverified = 2
contverresValid = 3
contverresModified = 4
ContentVerificationResults = c_int # enum

# values for enumeration 'CertificateVerificationResults'
certverresError = 0
certverresVerifying = 1
certverresUnverified = 2
certverresValid = 3
certverresInvalid = 4
certverresExpired = 5
certverresRevoked = 6
certverresUntrusted = 7
CertificateVerificationResults = c_int # enum
SignatureInfo._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ReadOnly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarf' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'SignatureProvider',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrSigProv' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'SignatureText',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'SignatureText',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'SignatureImage',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppipictdisp' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'SignatureImage',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp), 'ppipictdisp' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'SignatureComment',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'SignatureComment',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(6)], HRESULT, 'GetSignatureDetail',
              ( ['in'], SignatureDetail, 'sigdet' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(7)], HRESULT, 'GetCertificateDetail',
              ( ['in'], CertificateDetail, 'certdet' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ContentVerificationResults',
              ( ['retval', 'out'], POINTER(ContentVerificationResults), 'pcontverres' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'CertificateVerificationResults',
              ( ['retval', 'out'], POINTER(CertificateVerificationResults), 'pcertverres' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'IsValid',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfValid' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'IsCertificateExpired',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfExpired' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'IsCertificateRevoked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfRevoked' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'IsCertificateUntrusted',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfUntrusted' )),
    COMMETHOD([dispid(14)], HRESULT, 'ShowSignatureCertificate',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' )),
    COMMETHOD([dispid(15)], HRESULT, 'SelectSignatureCertificate',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' )),
    COMMETHOD([dispid(16)], HRESULT, 'SelectCertificateDetailByThumbprint',
              ( ['in'], BSTR, 'bstrThumbprint' )),
]
################################################################
## code template for SignatureInfo implementation
##class SignatureInfo_Impl(object):
##    @property
##    def IsCertificateRevoked(self):
##        '-no docstring-'
##        #return pvarfRevoked
##
##    @property
##    def CertificateVerificationResults(self):
##        '-no docstring-'
##        #return pcertverres
##
##    def GetCertificateDetail(self, certdet):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def SignatureProvider(self):
##        '-no docstring-'
##        #return pbstrSigProv
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SignatureComment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ppipictdisp
##    def _set(self, ppipictdisp):
##        '-no docstring-'
##    SignatureImage = property(_get, _set, doc = _set.__doc__)
##
##    def SelectSignatureCertificate(self, ParentWindow):
##        '-no docstring-'
##        #return 
##
##    def SelectCertificateDetailByThumbprint(self, bstrThumbprint):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsCertificateUntrusted(self):
##        '-no docstring-'
##        #return pvarfUntrusted
##
##    def ShowSignatureCertificate(self, ParentWindow):
##        '-no docstring-'
##        #return 
##
##    def GetSignatureDetail(self, sigdet):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def ContentVerificationResults(self):
##        '-no docstring-'
##        #return pcontverres
##
##    @property
##    def IsValid(self):
##        '-no docstring-'
##        #return pvarfValid
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SignatureText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ReadOnly(self):
##        '-no docstring-'
##        #return pvarf
##
##    @property
##    def IsCertificateExpired(self):
##        '-no docstring-'
##        #return pvarfExpired
##

class IDocumentInspector(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD706-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
IDocumentInspector._methods_ = [
    COMMETHOD([], HRESULT, 'GetInfo',
              ( ['out'], POINTER(BSTR), 'Name' ),
              ( ['out'], POINTER(BSTR), 'Desc' )),
    COMMETHOD([], HRESULT, 'Inspect',
              ( ['in'], POINTER(IDispatch), 'Doc' ),
              ( ['out'], POINTER(MsoDocInspectorStatus), 'Status' ),
              ( ['out'], POINTER(BSTR), 'Result' ),
              ( ['out'], POINTER(BSTR), 'Action' )),
    COMMETHOD([], HRESULT, 'Fix',
              ( ['in'], POINTER(IDispatch), 'Doc' ),
              ( ['in'], c_int, 'Hwnd' ),
              ( ['out'], POINTER(MsoDocInspectorStatus), 'Status' ),
              ( ['out'], POINTER(BSTR), 'Result' )),
]
################################################################
## code template for IDocumentInspector implementation
##class IDocumentInspector_Impl(object):
##    def Inspect(self, Doc):
##        '-no docstring-'
##        #return Status, Result, Action
##
##    def Fix(self, Doc, Hwnd):
##        '-no docstring-'
##        #return Status, Result
##
##    def GetInfo(self):
##        '-no docstring-'
##        #return Name, Desc
##


# values for enumeration 'MsoOrgChartLayoutType'
msoOrgChartLayoutMixed = -2
msoOrgChartLayoutStandard = 1
msoOrgChartLayoutBothHanging = 2
msoOrgChartLayoutLeftHanging = 3
msoOrgChartLayoutRightHanging = 4
MsoOrgChartLayoutType = c_int # enum

# values for enumeration 'EncryptionCipherMode'
cipherModeECB = 0
cipherModeCBC = 1
EncryptionCipherMode = c_int # enum

# values for enumeration 'MsoArrowheadStyle'
msoArrowheadStyleMixed = -2
msoArrowheadNone = 1
msoArrowheadTriangle = 2
msoArrowheadOpen = 3
msoArrowheadStealth = 4
msoArrowheadDiamond = 5
msoArrowheadOval = 6
MsoArrowheadStyle = c_int # enum

# values for enumeration 'EncryptionProviderDetail'
encprovdetUrl = 0
encprovdetAlgorithm = 1
encprovdetBlockCipher = 2
encprovdetCipherBlockSize = 3
encprovdetCipherMode = 4
EncryptionProviderDetail = c_int # enum
class IBlogPictureExtensibility(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03C5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
IBlogPictureExtensibility._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'BlogPictureProviderProperties',
              ( ['out'], POINTER(BSTR), 'BlogPictureProvider' ),
              ( ['out'], POINTER(BSTR), 'FriendlyName' )),
    COMMETHOD([dispid(2)], HRESULT, 'CreatePictureAccount',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], BSTR, 'BlogProvider' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' )),
    COMMETHOD([dispid(3)], HRESULT, 'PublishPicture',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' ),
              ( ['in'], POINTER(IUnknown), 'Image' ),
              ( ['out'], POINTER(BSTR), 'PictureURI' ),
              ( ['in'], c_int, 'ImageType' )),
]
################################################################
## code template for IBlogPictureExtensibility implementation
##class IBlogPictureExtensibility_Impl(object):
##    def CreatePictureAccount(self, Account, BlogProvider, ParentWindow, Document):
##        '-no docstring-'
##        #return 
##
##    def PublishPicture(self, Account, ParentWindow, Document, Image, ImageType):
##        '-no docstring-'
##        #return PictureURI
##
##    def BlogPictureProviderProperties(self):
##        '-no docstring-'
##        #return BlogPictureProvider, FriendlyName
##


# values for enumeration 'SignatureType'
sigtypeUnknown = 0
sigtypeNonVisible = 1
sigtypeSignatureLine = 2
sigtypeMax = 3
SignatureType = c_int # enum

# values for enumeration 'MsoLineDashStyle'
msoLineDashStyleMixed = -2
msoLineSolid = 1
msoLineSquareDot = 2
msoLineRoundDot = 3
msoLineDash = 4
msoLineDashDot = 5
msoLineDashDotDot = 6
msoLineLongDash = 7
msoLineLongDashDot = 8
msoLineLongDashDotDot = 9
msoLineSysDash = 10
msoLineSysDot = 11
msoLineSysDashDot = 12
MsoLineDashStyle = c_int # enum
Signature._methods_ = [
    COMMETHOD([dispid(1610809344), 'hidden', 'propget'], HRESULT, 'Signer',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610809345), 'hidden', 'propget'], HRESULT, 'Issuer',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610809346), 'hidden', 'propget'], HRESULT, 'ExpireDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarDate' )),
    COMMETHOD([dispid(1610809347), 'hidden', 'propget'], HRESULT, 'IsValid',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfValid' )),
    COMMETHOD([dispid(1610809348), 'hidden', 'propget'], HRESULT, 'AttachCertificate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfAttach' )),
    COMMETHOD([dispid(1610809348), 'hidden', 'propput'], HRESULT, 'AttachCertificate',
              ( ['in'], VARIANT_BOOL, 'pvarfAttach' )),
    COMMETHOD([dispid(1610809350)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610809351), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809352), 'hidden', 'propget'], HRESULT, 'IsCertificateExpired',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfExpired' )),
    COMMETHOD([dispid(1610809353), 'hidden', 'propget'], HRESULT, 'IsCertificateRevoked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfRevoked' )),
    COMMETHOD([dispid(1610809354), 'hidden', 'propget'], HRESULT, 'SignDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarDate' )),
    COMMETHOD([dispid(1610809355), 'propget'], HRESULT, 'IsSigned',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfSigned' )),
    COMMETHOD([dispid(1610809356)], HRESULT, 'Sign',
              ( ['in', 'optional'], VARIANT, 'varSigImg' ),
              ( ['in', 'optional'], VARIANT, 'varDelSuggSigner' ),
              ( ['in', 'optional'], VARIANT, 'varDelSuggSignerLine2' ),
              ( ['in', 'optional'], VARIANT, 'varDelSuggSignerEmail' )),
    COMMETHOD([dispid(1610809357), 'propget'], HRESULT, 'Details',
              ( ['retval', 'out'], POINTER(POINTER(SignatureInfo)), 'ppsiginfo' )),
    COMMETHOD([dispid(1610809358)], HRESULT, 'ShowDetails'),
    COMMETHOD([dispid(1610809359), 'propget'], HRESULT, 'CanSetup',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfCanSetup' )),
    COMMETHOD([dispid(1610809360), 'propget'], HRESULT, 'Setup',
              ( ['retval', 'out'], POINTER(POINTER(SignatureSetup)), 'ppsigsetup' )),
    COMMETHOD([dispid(1610809361), 'propget'], HRESULT, 'IsSignatureLine',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pvarfSignatureLine' )),
    COMMETHOD([dispid(1610809362), 'propget'], HRESULT, 'SignatureLineShape',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidispShape' )),
    COMMETHOD([dispid(1610809363), 'propget'], HRESULT, 'SortHint',
              ( ['retval', 'out'], POINTER(c_int), 'plSortHint' )),
]
################################################################
## code template for Signature implementation
##class Signature_Impl(object):
##    def ShowDetails(self):
##        '-no docstring-'
##        #return 
##
##    def Sign(self, varSigImg, varDelSuggSigner, varDelSuggSignerLine2, varDelSuggSignerEmail):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SignatureLineShape(self):
##        '-no docstring-'
##        #return ppidispShape
##
##    @property
##    def ExpireDate(self):
##        '-no docstring-'
##        #return pvarDate
##
##    @property
##    def IsSigned(self):
##        '-no docstring-'
##        #return pvarfSigned
##
##    @property
##    def Details(self):
##        '-no docstring-'
##        #return ppsiginfo
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsCertificateRevoked(self):
##        '-no docstring-'
##        #return pvarfRevoked
##
##    def _get(self):
##        '-no docstring-'
##        #return pvarfAttach
##    def _set(self, pvarfAttach):
##        '-no docstring-'
##    AttachCertificate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Setup(self):
##        '-no docstring-'
##        #return ppsigsetup
##
##    @property
##    def Issuer(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Signer(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def IsSignatureLine(self):
##        '-no docstring-'
##        #return pvarfSignatureLine
##
##    @property
##    def SignDate(self):
##        '-no docstring-'
##        #return pvarDate
##
##    @property
##    def IsValid(self):
##        '-no docstring-'
##        #return pvarfValid
##
##    @property
##    def SortHint(self):
##        '-no docstring-'
##        #return plSortHint
##
##    @property
##    def IsCertificateExpired(self):
##        '-no docstring-'
##        #return pvarfExpired
##
##    @property
##    def CanSetup(self):
##        '-no docstring-'
##        #return pvarfCanSetup
##


# values for enumeration 'MsoBalloonType'
msoBalloonTypeButtons = 0
msoBalloonTypeBullets = 1
msoBalloonTypeNumbers = 2
MsoBalloonType = c_int # enum

# values for enumeration 'MsoIconType'
msoIconNone = 0
msoIconAlert = 2
msoIconTip = 3
msoIconAlertInfo = 4
msoIconAlertWarning = 5
msoIconAlertQuery = 6
msoIconAlertCritical = 7
MsoIconType = c_int # enum

# values for enumeration 'MsoBalloonButtonType'
msoBalloonButtonYesToAll = -15
msoBalloonButtonOptions = -14
msoBalloonButtonTips = -13
msoBalloonButtonClose = -12
msoBalloonButtonSnooze = -11
msoBalloonButtonSearch = -10
msoBalloonButtonIgnore = -9
msoBalloonButtonAbort = -8
msoBalloonButtonRetry = -7
msoBalloonButtonNext = -6
msoBalloonButtonBack = -5
msoBalloonButtonNo = -4
msoBalloonButtonYes = -3
msoBalloonButtonCancel = -2
msoBalloonButtonOK = -1
msoBalloonButtonNull = 0
MsoBalloonButtonType = c_int # enum
Balloon._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Checkboxes',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'Labels',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809347), 'propput'], HRESULT, 'BalloonType',
              ( ['in'], MsoBalloonType, 'pbty' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'BalloonType',
              ( ['retval', 'out'], POINTER(MsoBalloonType), 'pbty' )),
    COMMETHOD([dispid(1610809349), 'propput'], HRESULT, 'Icon',
              ( ['in'], MsoIconType, 'picn' )),
    COMMETHOD([dispid(1610809349), 'propget'], HRESULT, 'Icon',
              ( ['retval', 'out'], POINTER(MsoIconType), 'picn' )),
    COMMETHOD([dispid(1610809351), 'propput'], HRESULT, 'Heading',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610809351), 'propget'], HRESULT, 'Heading',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610809353), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610809353), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610809355), 'propput'], HRESULT, 'Mode',
              ( ['in'], MsoModeType, 'pmd' )),
    COMMETHOD([dispid(1610809355), 'propget'], HRESULT, 'Mode',
              ( ['retval', 'out'], POINTER(MsoModeType), 'pmd' )),
    COMMETHOD([dispid(1610809357), 'propput'], HRESULT, 'Animation',
              ( ['in'], MsoAnimationType, 'pfca' )),
    COMMETHOD([dispid(1610809357), 'propget'], HRESULT, 'Animation',
              ( ['retval', 'out'], POINTER(MsoAnimationType), 'pfca' )),
    COMMETHOD([dispid(1610809359), 'propput'], HRESULT, 'Button',
              ( ['in'], MsoButtonSetType, 'psbs' )),
    COMMETHOD([dispid(1610809359), 'propget'], HRESULT, 'Button',
              ( ['retval', 'out'], POINTER(MsoButtonSetType), 'psbs' )),
    COMMETHOD([dispid(1610809361), 'propput'], HRESULT, 'Callback',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610809361), 'propget'], HRESULT, 'Callback',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610809363), 'propput'], HRESULT, 'Private',
              ( ['in'], c_int, 'plPrivate' )),
    COMMETHOD([dispid(1610809363), 'propget'], HRESULT, 'Private',
              ( ['retval', 'out'], POINTER(c_int), 'plPrivate' )),
    COMMETHOD([dispid(1610809365)], HRESULT, 'SetAvoidRectangle',
              ( ['in'], c_int, 'Left' ),
              ( ['in'], c_int, 'Top' ),
              ( ['in'], c_int, 'Right' ),
              ( ['in'], c_int, 'Bottom' )),
    COMMETHOD([dispid(1610809366), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809367)], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(MsoBalloonButtonType), 'pibtn' )),
    COMMETHOD([dispid(1610809368)], HRESULT, 'Close'),
]
################################################################
## code template for Balloon implementation
##class Balloon_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return picn
##    def _set(self, picn):
##        '-no docstring-'
##    Icon = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Labels(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Callback = property(_get, _set, doc = _set.__doc__)
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pfca
##    def _set(self, pfca):
##        '-no docstring-'
##    Animation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return plPrivate
##    def _set(self, plPrivate):
##        '-no docstring-'
##    Private = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Checkboxes(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def _get(self):
##        '-no docstring-'
##        #return pbty
##    def _set(self, pbty):
##        '-no docstring-'
##    BalloonType = property(_get, _set, doc = _set.__doc__)
##
##    def SetAvoidRectangle(self, Left, Top, Right, Bottom):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return psbs
##    def _set(self, psbs):
##        '-no docstring-'
##    Button = property(_get, _set, doc = _set.__doc__)
##
##    def Show(self):
##        '-no docstring-'
##        #return pibtn
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def _get(self):
##        '-no docstring-'
##        #return pmd
##    def _set(self, pmd):
##        '-no docstring-'
##    Mode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Heading = property(_get, _set, doc = _set.__doc__)
##

class OfficeTheme(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03A0-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
OfficeTheme._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ThemeColorScheme',
              ( ['retval', 'out'], POINTER(POINTER(ThemeColorScheme)), 'ThemeColorScheme' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ThemeFontScheme',
              ( ['retval', 'out'], POINTER(POINTER(ThemeFontScheme)), 'ThemeFontScheme' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ThemeEffectScheme',
              ( ['retval', 'out'], POINTER(POINTER(ThemeEffectScheme)), 'ThemeEffectScheme' )),
]
################################################################
## code template for OfficeTheme implementation
##class OfficeTheme_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def ThemeEffectScheme(self):
##        '-no docstring-'
##        #return ThemeEffectScheme
##
##    @property
##    def ThemeFontScheme(self):
##        '-no docstring-'
##        #return ThemeFontScheme
##
##    @property
##    def ThemeColorScheme(self):
##        '-no docstring-'
##        #return ThemeColorScheme
##

_CustomXMLPartEvents._disp_methods_ = [
    DISPMETHOD([dispid(1)], None, 'NodeAfterInsert',
               ( ['in'], POINTER(CustomXMLNode), 'NewNode' ),
               ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    DISPMETHOD([dispid(2)], None, 'NodeAfterDelete',
               ( ['in'], POINTER(CustomXMLNode), 'OldNode' ),
               ( ['in'], POINTER(CustomXMLNode), 'OldParentNode' ),
               ( ['in'], POINTER(CustomXMLNode), 'OldNextSibling' ),
               ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    DISPMETHOD([dispid(3)], None, 'NodeAfterReplace',
               ( ['in'], POINTER(CustomXMLNode), 'OldNode' ),
               ( ['in'], POINTER(CustomXMLNode), 'NewNode' ),
               ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
]
class IBlogExtensibility(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03C4-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoBlogCategorySupport'
msoBlogNoCategories = 0
msoBlogOneCategory = 1
msoBlogMultipleCategories = 2
MsoBlogCategorySupport = c_int # enum
IBlogExtensibility._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'BlogProviderProperties',
              ( ['out'], POINTER(BSTR), 'BlogProvider' ),
              ( ['out'], POINTER(BSTR), 'FriendlyName' ),
              ( ['out'], POINTER(MsoBlogCategorySupport), 'CategorySupport' ),
              ( ['out'], POINTER(VARIANT_BOOL), 'Padding' )),
    COMMETHOD([dispid(2)], HRESULT, 'SetupBlogAccount',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' ),
              ( ['in'], VARIANT_BOOL, 'NewAccount' ),
              ( ['out'], POINTER(VARIANT_BOOL), 'ShowPictureUI' )),
    COMMETHOD([dispid(3)], HRESULT, 'GetUserBlogs',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'BlogNames' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'BlogIDs' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'BlogURLs' )),
    COMMETHOD([dispid(4)], HRESULT, 'GetRecentPosts',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'PostTitles' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'PostDates' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'PostIDs' )),
    COMMETHOD([dispid(5)], HRESULT, 'Open',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], BSTR, 'PostID' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['out'], POINTER(BSTR), 'xHTML' ),
              ( ['out'], POINTER(BSTR), 'Title' ),
              ( ['out'], POINTER(BSTR), 'DatePosted' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'Categories' )),
    COMMETHOD([dispid(6)], HRESULT, 'PublishPost',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' ),
              ( ['in'], BSTR, 'xHTML' ),
              ( ['in'], BSTR, 'Title' ),
              ( ['in'], BSTR, 'DateTime' ),
              ( ['in'], _midlSAFEARRAY(BSTR), 'Categories' ),
              ( ['in'], VARIANT_BOOL, 'Draft' ),
              ( ['out'], POINTER(BSTR), 'PostID' ),
              ( ['out'], POINTER(BSTR), 'PublishMessage' )),
    COMMETHOD([dispid(7)], HRESULT, 'RepublishPost',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' ),
              ( ['in'], BSTR, 'PostID' ),
              ( ['in'], BSTR, 'xHTML' ),
              ( ['in'], BSTR, 'Title' ),
              ( ['in'], BSTR, 'DateTime' ),
              ( ['in'], _midlSAFEARRAY(BSTR), 'Categories' ),
              ( ['in'], VARIANT_BOOL, 'Draft' ),
              ( ['out'], POINTER(BSTR), 'PublishMessage' )),
    COMMETHOD([dispid(8)], HRESULT, 'GetCategories',
              ( ['in'], BSTR, 'Account' ),
              ( ['in'], c_int, 'ParentWindow' ),
              ( ['in'], POINTER(IDispatch), 'Document' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'Categories' )),
]
################################################################
## code template for IBlogExtensibility implementation
##class IBlogExtensibility_Impl(object):
##    def GetRecentPosts(self, Account, ParentWindow, Document):
##        '-no docstring-'
##        #return PostTitles, PostDates, PostIDs
##
##    def GetCategories(self, Account, ParentWindow, Document):
##        '-no docstring-'
##        #return Categories
##
##    def PublishPost(self, Account, ParentWindow, Document, xHTML, Title, DateTime, Categories, Draft):
##        '-no docstring-'
##        #return PostID, PublishMessage
##
##    def SetupBlogAccount(self, Account, ParentWindow, Document, NewAccount):
##        '-no docstring-'
##        #return ShowPictureUI
##
##    def RepublishPost(self, Account, ParentWindow, Document, PostID, xHTML, Title, DateTime, Categories, Draft):
##        '-no docstring-'
##        #return PublishMessage
##
##    def BlogProviderProperties(self):
##        '-no docstring-'
##        #return BlogProvider, FriendlyName, CategorySupport, Padding
##
##    def GetUserBlogs(self, Account, ParentWindow, Document):
##        '-no docstring-'
##        #return BlogNames, BlogIDs, BlogURLs
##
##    def Open(self, Account, PostID, ParentWindow):
##        '-no docstring-'
##        #return xHTML, Title, DatePosted, Categories
##

class TextFrame(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0320-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
TextFrame._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'MarginBottom',
              ( ['retval', 'out'], POINTER(c_float), 'MarginBottom' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'MarginBottom',
              ( ['in'], c_float, 'MarginBottom' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'MarginLeft',
              ( ['retval', 'out'], POINTER(c_float), 'MarginLeft' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'MarginLeft',
              ( ['in'], c_float, 'MarginLeft' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'MarginRight',
              ( ['retval', 'out'], POINTER(c_float), 'MarginRight' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'MarginRight',
              ( ['in'], c_float, 'MarginRight' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'MarginTop',
              ( ['retval', 'out'], POINTER(c_float), 'MarginTop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'MarginTop',
              ( ['in'], c_float, 'MarginTop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(MsoTextOrientation), 'Orientation' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Orientation',
              ( ['in'], MsoTextOrientation, 'Orientation' )),
]
################################################################
## code template for TextFrame implementation
##class TextFrame_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Orientation
##    def _set(self, Orientation):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginBottom
##    def _set(self, MarginBottom):
##        '-no docstring-'
##    MarginBottom = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginTop
##    def _set(self, MarginTop):
##        '-no docstring-'
##    MarginTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginRight
##    def _set(self, MarginRight):
##        '-no docstring-'
##    MarginRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginLeft
##    def _set(self, MarginLeft):
##        '-no docstring-'
##    MarginLeft = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoPresetThreeDFormat'
msoPresetThreeDFormatMixed = -2
msoThreeD1 = 1
msoThreeD2 = 2
msoThreeD3 = 3
msoThreeD4 = 4
msoThreeD5 = 5
msoThreeD6 = 6
msoThreeD7 = 7
msoThreeD8 = 8
msoThreeD9 = 9
msoThreeD10 = 10
msoThreeD11 = 11
msoThreeD12 = 12
msoThreeD13 = 13
msoThreeD14 = 14
msoThreeD15 = 15
msoThreeD16 = 16
msoThreeD17 = 17
msoThreeD18 = 18
msoThreeD19 = 19
msoThreeD20 = 20
MsoPresetThreeDFormat = c_int # enum

# values for enumeration 'MsoBlogImageType'
msoblogImageTypeJPEG = 1
msoblogImageTypeGIF = 2
msoblogImageTypePNG = 3
MsoBlogImageType = c_int # enum
IMsoEnvelopeVB._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Introduction',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrIntro' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Introduction',
              ( ['in'], BSTR, 'pbstrIntro' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Item',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdisp' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdisp' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'CommandBars',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdisp' )),
]
################################################################
## code template for IMsoEnvelopeVB implementation
##class IMsoEnvelopeVB_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdisp
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return ppdisp
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrIntro
##    def _set(self, pbstrIntro):
##        '-no docstring-'
##    Introduction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Item(self):
##        '-no docstring-'
##        #return ppdisp
##

class ODSOFilter(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1533-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ODSOFilter._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'plIndex' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Column',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCol' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Column',
              ( ['in'], BSTR, 'pbstrCol' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Comparison',
              ( ['retval', 'out'], POINTER(MsoFilterComparison), 'pComparison' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Comparison',
              ( ['in'], MsoFilterComparison, 'pComparison' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'CompareTo',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCompareTo' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'CompareTo',
              ( ['in'], BSTR, 'pbstrCompareTo' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Conjunction',
              ( ['retval', 'out'], POINTER(MsoFilterConjunction), 'pConjunction' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Conjunction',
              ( ['in'], MsoFilterConjunction, 'pConjunction' )),
]
################################################################
## code template for ODSOFilter implementation
##class ODSOFilter_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pbstrCol
##    def _set(self, pbstrCol):
##        '-no docstring-'
##    Column = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrCompareTo
##    def _set(self, pbstrCompareTo):
##        '-no docstring-'
##    CompareTo = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pConjunction
##    def _set(self, pConjunction):
##        '-no docstring-'
##    Conjunction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return plIndex
##
##    def _get(self):
##        '-no docstring-'
##        #return pComparison
##    def _set(self, pComparison):
##        '-no docstring-'
##    Comparison = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlReadingOrder'
xlContext = -5002
xlLTR = -5003
xlRTL = -5004
XlReadingOrder = c_int # enum

# values for enumeration 'XlUnderlineStyle'
xlUnderlineStyleDouble = -4119
xlUnderlineStyleDoubleAccounting = 5
xlUnderlineStyleNone = -4142
xlUnderlineStyleSingle = 2
xlUnderlineStyleSingleAccounting = 4
XlUnderlineStyle = c_int # enum

# values for enumeration 'MsoPresetExtrusionDirection'
msoPresetExtrusionDirectionMixed = -2
msoExtrusionBottomRight = 1
msoExtrusionBottom = 2
msoExtrusionBottomLeft = 3
msoExtrusionRight = 4
msoExtrusionNone = 5
msoExtrusionLeft = 6
msoExtrusionTopRight = 7
msoExtrusionTop = 8
msoExtrusionTopLeft = 9
MsoPresetExtrusionDirection = c_int # enum
ThreeDFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementRotationX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementRotationY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(12)], HRESULT, 'ResetRotation'),
    COMMETHOD([dispid(13)], HRESULT, 'SetThreeDFormat',
              ( ['in'], MsoPresetThreeDFormat, 'PresetThreeDFormat' )),
    COMMETHOD([dispid(14)], HRESULT, 'SetExtrusionDirection',
              ( ['in'], MsoPresetExtrusionDirection, 'PresetExtrusionDirection' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Depth',
              ( ['retval', 'out'], POINTER(c_float), 'Depth' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Depth',
              ( ['in'], c_float, 'Depth' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ExtrusionColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ExtrusionColor' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'ExtrusionColorType',
              ( ['retval', 'out'], POINTER(MsoExtrusionColorType), 'ExtrusionColorType' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'ExtrusionColorType',
              ( ['in'], MsoExtrusionColorType, 'ExtrusionColorType' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Perspective',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Perspective' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Perspective',
              ( ['in'], MsoTriState, 'Perspective' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PresetExtrusionDirection',
              ( ['retval', 'out'], POINTER(MsoPresetExtrusionDirection), 'PresetExtrusionDirection' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'PresetLightingDirection',
              ( ['retval', 'out'], POINTER(MsoPresetLightingDirection), 'PresetLightingDirection' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'PresetLightingDirection',
              ( ['in'], MsoPresetLightingDirection, 'PresetLightingDirection' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'PresetLightingSoftness',
              ( ['retval', 'out'], POINTER(MsoPresetLightingSoftness), 'PresetLightingSoftness' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'PresetLightingSoftness',
              ( ['in'], MsoPresetLightingSoftness, 'PresetLightingSoftness' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetMaterial',
              ( ['retval', 'out'], POINTER(MsoPresetMaterial), 'PresetMaterial' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetMaterial',
              ( ['in'], MsoPresetMaterial, 'PresetMaterial' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetThreeDFormat',
              ( ['retval', 'out'], POINTER(MsoPresetThreeDFormat), 'PresetThreeDFormat' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotationX',
              ( ['retval', 'out'], POINTER(c_float), 'RotationX' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotationX',
              ( ['in'], c_float, 'RotationX' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotationY',
              ( ['retval', 'out'], POINTER(c_float), 'RotationY' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotationY',
              ( ['in'], c_float, 'RotationY' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Visible' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Visible',
              ( ['in'], MsoTriState, 'Visible' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetPresetCamera',
              ( ['in'], MsoPresetCamera, 'PresetCamera' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementRotationZ',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'IncrementRotationHorizontal',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(18)], HRESULT, 'IncrementRotationVertical',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'PresetLighting',
              ( ['retval', 'out'], POINTER(MsoLightRigType), 'PresetLightRigType' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'PresetLighting',
              ( ['in'], MsoLightRigType, 'PresetLightRigType' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Z',
              ( ['retval', 'out'], POINTER(c_float), 'Z' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Z',
              ( ['in'], c_float, 'Z' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'BevelTopType',
              ( ['retval', 'out'], POINTER(MsoBevelType), 'BevelTopType' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'BevelTopType',
              ( ['in'], MsoBevelType, 'BevelTopType' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'BevelTopInset',
              ( ['retval', 'out'], POINTER(c_float), 'BevelTopInset' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'BevelTopInset',
              ( ['in'], c_float, 'BevelTopInset' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'BevelTopDepth',
              ( ['retval', 'out'], POINTER(c_float), 'BevelTopDepth' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'BevelTopDepth',
              ( ['in'], c_float, 'BevelTopDepth' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'BevelBottomType',
              ( ['retval', 'out'], POINTER(MsoBevelType), 'BevelBottomType' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'BevelBottomType',
              ( ['in'], MsoBevelType, 'BevelBottomType' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'BevelBottomInset',
              ( ['retval', 'out'], POINTER(c_float), 'BevelBottomInset' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'BevelBottomInset',
              ( ['in'], c_float, 'BevelBottomInset' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'BevelBottomDepth',
              ( ['retval', 'out'], POINTER(c_float), 'BevelBottomDepth' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'BevelBottomDepth',
              ( ['in'], c_float, 'BevelBottomDepth' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'PresetCamera',
              ( ['retval', 'out'], POINTER(MsoPresetCamera), 'PresetCamera' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotationZ',
              ( ['retval', 'out'], POINTER(c_float), 'RotationZ' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotationZ',
              ( ['in'], c_float, 'RotationZ' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ContourWidth',
              ( ['retval', 'out'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'ContourWidth',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'ContourColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ContourColor' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'FieldOfView',
              ( ['retval', 'out'], POINTER(c_float), 'FOV' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'FieldOfView',
              ( ['in'], c_float, 'FOV' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'ProjectText',
              ( ['retval', 'out'], POINTER(MsoTriState), 'ProjectText' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'ProjectText',
              ( ['in'], MsoTriState, 'ProjectText' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'LightAngle',
              ( ['retval', 'out'], POINTER(c_float), 'LightAngle' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'LightAngle',
              ( ['in'], c_float, 'LightAngle' )),
]
################################################################
## code template for ThreeDFormat implementation
##class ThreeDFormat_Impl(object):
##    def IncrementRotationZ(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return ExtrusionColorType
##    def _set(self, ExtrusionColorType):
##        '-no docstring-'
##    ExtrusionColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopType
##    def _set(self, BevelTopType):
##        '-no docstring-'
##    BevelTopType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ProjectText
##    def _set(self, ProjectText):
##        '-no docstring-'
##    ProjectText = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementRotationVertical(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def SetPresetCamera(self, PresetCamera):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetCamera(self):
##        '-no docstring-'
##        #return PresetCamera
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomInset
##    def _set(self, BevelBottomInset):
##        '-no docstring-'
##    BevelBottomInset = property(_get, _set, doc = _set.__doc__)
##
##    def SetExtrusionDirection(self, PresetExtrusionDirection):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightingDirection
##    def _set(self, PresetLightingDirection):
##        '-no docstring-'
##    PresetLightingDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomDepth
##    def _set(self, BevelBottomDepth):
##        '-no docstring-'
##    BevelBottomDepth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Depth
##    def _set(self, Depth):
##        '-no docstring-'
##    Depth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContourColor(self):
##        '-no docstring-'
##        #return ContourColor
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    ContourWidth = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementRotationHorizontal(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetExtrusionDirection(self):
##        '-no docstring-'
##        #return PresetExtrusionDirection
##
##    @property
##    def PresetThreeDFormat(self):
##        '-no docstring-'
##        #return PresetThreeDFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetMaterial
##    def _set(self, PresetMaterial):
##        '-no docstring-'
##    PresetMaterial = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationY
##    def _set(self, RotationY):
##        '-no docstring-'
##    RotationY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Perspective
##    def _set(self, Perspective):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ExtrusionColor(self):
##        '-no docstring-'
##        #return ExtrusionColor
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightRigType
##    def _set(self, PresetLightRigType):
##        '-no docstring-'
##    PresetLighting = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopDepth
##    def _set(self, BevelTopDepth):
##        '-no docstring-'
##    BevelTopDepth = property(_get, _set, doc = _set.__doc__)
##
##    def ResetRotation(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationX
##    def _set(self, RotationX):
##        '-no docstring-'
##    RotationX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LightAngle
##    def _set(self, LightAngle):
##        '-no docstring-'
##    LightAngle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Z
##    def _set(self, Z):
##        '-no docstring-'
##    Z = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightingSoftness
##    def _set(self, PresetLightingSoftness):
##        '-no docstring-'
##    PresetLightingSoftness = property(_get, _set, doc = _set.__doc__)
##
##    def SetThreeDFormat(self, PresetThreeDFormat):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomType
##    def _set(self, BevelBottomType):
##        '-no docstring-'
##    BevelBottomType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationZ
##    def _set(self, RotationZ):
##        '-no docstring-'
##    RotationZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopInset
##    def _set(self, BevelTopInset):
##        '-no docstring-'
##    BevelTopInset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FOV
##    def _set(self, FOV):
##        '-no docstring-'
##    FieldOfView = property(_get, _set, doc = _set.__doc__)
##

class SmartDocument(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0377-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SmartDocument._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'SolutionID',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrID' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'SolutionID',
              ( ['in'], BSTR, 'pbstrID' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'SolutionURL',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrUrl' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'SolutionURL',
              ( ['in'], BSTR, 'pbstrUrl' )),
    COMMETHOD([dispid(3)], HRESULT, 'PickSolution',
              ( ['in', 'optional'], VARIANT_BOOL, 'ConsiderAllSchemas', False )),
    COMMETHOD([dispid(4)], HRESULT, 'RefreshPane'),
]
################################################################
## code template for SmartDocument implementation
##class SmartDocument_Impl(object):
##    def RefreshPane(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrUrl
##    def _set(self, pbstrUrl):
##        '-no docstring-'
##    SolutionURL = property(_get, _set, doc = _set.__doc__)
##
##    def PickSolution(self, ConsiderAllSchemas):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrID
##    def _set(self, pbstrID):
##        '-no docstring-'
##    SolutionID = property(_get, _set, doc = _set.__doc__)
##

IMsoBorder._methods_ = [
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'LineStyle',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'LineStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Weight',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Weight',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IMsoBorder implementation
##class IMsoBorder_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##


# values for enumeration 'MsoScaleFrom'
msoScaleFromTopLeft = 0
msoScaleFromMiddle = 1
msoScaleFromBottomRight = 2
MsoScaleFrom = c_int # enum
class SignatureProvider(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD6A3-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']

# values for enumeration 'SignatureLineImage'
siglnimgSoftwareRequired = 0
siglnimgUnsigned = 1
siglnimgSignedValid = 2
siglnimgSignedInvalid = 3
siglnimgSigned = 4
SignatureLineImage = c_int # enum

# values for enumeration 'SignatureProviderDetail'
sigprovdetUrl = 0
sigprovdetHashAlgorithm = 1
sigprovdetUIOnly = 2
sigprovdetUseOfficeUI = 3
sigprovdetUseOfficeStampUI = 4
SignatureProviderDetail = c_int # enum
SignatureProvider._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'GenerateSignatureLineImage',
              ( ['in'], SignatureLineImage, 'siglnimg' ),
              ( ['in'], POINTER(SignatureSetup), 'psigsetup' ),
              ( ['in'], POINTER(SignatureInfo), 'psiginfo' ),
              ( ['in'], POINTER(IUnknown), 'XmlDsigStream' ),
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppipictdisp' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'ShowSignatureSetup',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' ),
              ( ['in'], POINTER(SignatureSetup), 'psigsetup' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'ShowSigningCeremony',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' ),
              ( ['in'], POINTER(SignatureSetup), 'psigsetup' ),
              ( ['in'], POINTER(SignatureInfo), 'psiginfo' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'SignXmlDsig',
              ( ['in'], POINTER(IUnknown), 'QueryContinue' ),
              ( ['in'], POINTER(SignatureSetup), 'psigsetup' ),
              ( ['in'], POINTER(SignatureInfo), 'psiginfo' ),
              ( ['in'], POINTER(IUnknown), 'XmlDsigStream' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'NotifySignatureAdded',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' ),
              ( ['in'], POINTER(SignatureSetup), 'psigsetup' ),
              ( ['in'], POINTER(SignatureInfo), 'psiginfo' )),
    COMMETHOD([dispid(1610743813)], HRESULT, 'VerifyXmlDsig',
              ( ['in'], POINTER(IUnknown), 'QueryContinue' ),
              ( ['in'], POINTER(SignatureSetup), 'psigsetup' ),
              ( ['in'], POINTER(SignatureInfo), 'psiginfo' ),
              ( ['in'], POINTER(IUnknown), 'XmlDsigStream' ),
              ( ['in', 'out'], POINTER(ContentVerificationResults), 'pcontverres' ),
              ( ['in', 'out'], POINTER(CertificateVerificationResults), 'pcertverres' )),
    COMMETHOD([dispid(1610743814)], HRESULT, 'ShowSignatureDetails',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' ),
              ( ['in'], POINTER(SignatureSetup), 'psigsetup' ),
              ( ['in'], POINTER(SignatureInfo), 'psiginfo' ),
              ( ['in'], POINTER(IUnknown), 'XmlDsigStream' ),
              ( ['in', 'out'], POINTER(ContentVerificationResults), 'pcontverres' ),
              ( ['in', 'out'], POINTER(CertificateVerificationResults), 'pcertverres' )),
    COMMETHOD([dispid(1610743815)], HRESULT, 'GetProviderDetail',
              ( ['in'], SignatureProviderDetail, 'sigprovdet' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'HashStream',
              ( ['in'], POINTER(IUnknown), 'QueryContinue' ),
              ( ['in'], POINTER(IUnknown), 'Stream' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_ubyte)), 'ppsargb' )),
]
################################################################
## code template for SignatureProvider implementation
##class SignatureProvider_Impl(object):
##    def GetProviderDetail(self, sigprovdet):
##        '-no docstring-'
##        #return pvar
##
##    def SignXmlDsig(self, QueryContinue, psigsetup, psiginfo, XmlDsigStream):
##        '-no docstring-'
##        #return 
##
##    def HashStream(self, QueryContinue, Stream):
##        '-no docstring-'
##        #return ppsargb
##
##    def GenerateSignatureLineImage(self, siglnimg, psigsetup, psiginfo, XmlDsigStream):
##        '-no docstring-'
##        #return ppipictdisp
##
##    def ShowSigningCeremony(self, ParentWindow, psigsetup, psiginfo):
##        '-no docstring-'
##        #return 
##
##    def NotifySignatureAdded(self, ParentWindow, psigsetup, psiginfo):
##        '-no docstring-'
##        #return 
##
##    def VerifyXmlDsig(self, QueryContinue, psigsetup, psiginfo, XmlDsigStream):
##        '-no docstring-'
##        #return pcontverres, pcertverres
##
##    def ShowSignatureSetup(self, ParentWindow, psigsetup):
##        '-no docstring-'
##        #return 
##
##    def ShowSignatureDetails(self, ParentWindow, psigsetup, psiginfo, XmlDsigStream):
##        '-no docstring-'
##        #return pcontverres, pcertverres
##

ThemeColor._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'RGB',
              ( ['retval', 'out'], POINTER(MsoRGBType), 'RGB' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'RGB',
              ( ['in'], MsoRGBType, 'RGB' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'ThemeColorSchemeIndex',
              ( ['retval', 'out'], POINTER(MsoThemeColorSchemeIndex), 'pValue' )),
]
################################################################
## code template for ThemeColor implementation
##class ThemeColor_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return RGB
##    def _set(self, RGB):
##        '-no docstring-'
##    RGB = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ThemeColorSchemeIndex(self):
##        '-no docstring-'
##        #return pValue
##

CustomXMLPrefixMapping._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Prefix',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPrefix' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'NamespaceURI',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNamespaceURI' )),
]
################################################################
## code template for CustomXMLPrefixMapping implementation
##class CustomXMLPrefixMapping_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    @property
##    def NamespaceURI(self):
##        '-no docstring-'
##        #return pbstrNamespaceURI
##
##    @property
##    def Prefix(self):
##        '-no docstring-'
##        #return pbstrPrefix
##

WebComponent._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RetValue' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'URL',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'URL',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'HTML',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'HTML',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'RetValue' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_int), 'RetValue' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'RetValue' )),
    COMMETHOD([dispid(7)], HRESULT, 'SetPlaceHolderGraphic',
              ( ['in'], BSTR, 'PlaceHolderGraphic' )),
    COMMETHOD([dispid(8)], HRESULT, 'Commit'),
    COMMETHOD([dispid(9)], HRESULT, 'Revert'),
]
################################################################
## code template for WebComponent implementation
##class WebComponent_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    URL = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return RetValue
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    HTML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def SetPlaceHolderGraphic(self, PlaceHolderGraphic):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def Revert(self):
##        '-no docstring-'
##        #return 
##
##    def Commit(self):
##        '-no docstring-'
##        #return 
##

TextRange2._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrText' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstrText' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(2)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Paragraphs',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Range' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Sentences',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Range' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Words',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Range' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Range' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Lines',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Range' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Runs',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'Range' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['retval', 'out'], POINTER(POINTER(ParagraphFormat2)), 'Format' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font2)), 'Font' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Length',
              ( ['retval', 'out'], POINTER(c_int), 'Length' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Start',
              ( ['retval', 'out'], POINTER(c_int), 'Start' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'BoundLeft',
              ( ['retval', 'out'], POINTER(c_float), 'BoundLeft' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'BoundTop',
              ( ['retval', 'out'], POINTER(c_float), 'BoundTop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'BoundWidth',
              ( ['retval', 'out'], POINTER(c_float), 'BoundWidth' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'BoundHeight',
              ( ['retval', 'out'], POINTER(c_float), 'BoundHeight' )),
    COMMETHOD([dispid(18)], HRESULT, 'TrimText',
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TrimText' )),
    COMMETHOD([dispid(19)], HRESULT, 'InsertAfter',
              ( ['in', 'optional'], BSTR, 'NewText', '' ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TextRange' )),
    COMMETHOD([dispid(20)], HRESULT, 'InsertBefore',
              ( ['in', 'optional'], BSTR, 'NewText', '' ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TextRange' )),
    COMMETHOD([dispid(21)], HRESULT, 'InsertSymbol',
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_int, 'CharNumber' ),
              ( ['in', 'optional'], MsoTriState, 'Unicode', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TextRange' )),
    COMMETHOD([dispid(22)], HRESULT, 'Select'),
    COMMETHOD([dispid(23)], HRESULT, 'Cut'),
    COMMETHOD([dispid(24)], HRESULT, 'Copy'),
    COMMETHOD([dispid(25)], HRESULT, 'Delete'),
    COMMETHOD([dispid(26)], HRESULT, 'Paste',
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TextRange' )),
    COMMETHOD([dispid(27)], HRESULT, 'PasteSpecial',
              ( ['in'], MsoClipboardFormat, 'Format' ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TextRange' )),
    COMMETHOD([dispid(28)], HRESULT, 'ChangeCase',
              ( ['in'], MsoTextChangeCase, 'Type' )),
    COMMETHOD([dispid(29)], HRESULT, 'AddPeriods'),
    COMMETHOD([dispid(30)], HRESULT, 'RemovePeriods'),
    COMMETHOD([dispid(31)], HRESULT, 'Find',
              ( ['in'], BSTR, 'FindWhat' ),
              ( ['in', 'optional'], c_int, 'After', 0 ),
              ( ['in', 'optional'], MsoTriState, 'MatchCase', 0 ),
              ( ['in', 'optional'], MsoTriState, 'WholeWords', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TextRange' )),
    COMMETHOD([dispid(32)], HRESULT, 'Replace',
              ( ['in'], BSTR, 'FindWhat' ),
              ( ['in'], BSTR, 'ReplaceWhat' ),
              ( ['in', 'optional'], c_int, 'After', 0 ),
              ( ['in', 'optional'], MsoTriState, 'MatchCase', 0 ),
              ( ['in', 'optional'], MsoTriState, 'WholeWords', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(TextRange2)), 'TextRange' )),
    COMMETHOD([dispid(33)], HRESULT, 'RotatedBounds',
              ( ['out'], POINTER(c_float), 'X1' ),
              ( ['out'], POINTER(c_float), 'Y1' ),
              ( ['out'], POINTER(c_float), 'X2' ),
              ( ['out'], POINTER(c_float), 'Y2' ),
              ( ['out'], POINTER(c_float), 'X3' ),
              ( ['out'], POINTER(c_float), 'Y3' ),
              ( ['out'], POINTER(c_float), 'x4' ),
              ( ['out'], POINTER(c_float), 'y4' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'LanguageID',
              ( ['retval', 'out'], POINTER(MsoLanguageID), 'LanguageID' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], MsoLanguageID, 'LanguageID' )),
    COMMETHOD([dispid(35)], HRESULT, 'RtlRun'),
    COMMETHOD([dispid(36)], HRESULT, 'LtrRun'),
]
################################################################
## code template for TextRange2 implementation
##class TextRange2_Impl(object):
##    def TrimText(self):
##        '-no docstring-'
##        #return TrimText
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def InsertSymbol(self, FontName, CharNumber, Unicode):
##        '-no docstring-'
##        #return TextRange
##
##    @property
##    def Sentences(self, Start, Length):
##        '-no docstring-'
##        #return Range
##
##    def _get(self):
##        '-no docstring-'
##        #return LanguageID
##    def _set(self, LanguageID):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Runs(self, Start, Length):
##        '-no docstring-'
##        #return Range
##
##    def ChangeCase(self, Type):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Start(self):
##        '-no docstring-'
##        #return Start
##
##    def Replace(self, FindWhat, ReplaceWhat, After, MatchCase, WholeWords):
##        '-no docstring-'
##        #return TextRange
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def BoundHeight(self):
##        '-no docstring-'
##        #return BoundHeight
##
##    @property
##    def BoundTop(self):
##        '-no docstring-'
##        #return BoundTop
##
##    @property
##    def Lines(self, Start, Length):
##        '-no docstring-'
##        #return Range
##
##    def LtrRun(self):
##        '-no docstring-'
##        #return 
##
##    def Find(self, FindWhat, After, MatchCase, WholeWords):
##        '-no docstring-'
##        #return TextRange
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrText
##    def _set(self, pbstrText):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return Length
##
##    @property
##    def Paragraphs(self, Start, Length):
##        '-no docstring-'
##        #return Range
##
##    @property
##    def BoundLeft(self):
##        '-no docstring-'
##        #return BoundLeft
##
##    def InsertBefore(self, NewText):
##        '-no docstring-'
##        #return TextRange
##
##    def RtlRun(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return Font
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def RotatedBounds(self):
##        '-no docstring-'
##        #return X1, Y1, X2, Y2, X3, Y3, x4, y4
##
##    def AddPeriods(self):
##        '-no docstring-'
##        #return 
##
##    def InsertAfter(self, NewText):
##        '-no docstring-'
##        #return TextRange
##
##    @property
##    def Words(self, Start, Length):
##        '-no docstring-'
##        #return Range
##
##    def PasteSpecial(self, Format):
##        '-no docstring-'
##        #return TextRange
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Paste(self):
##        '-no docstring-'
##        #return TextRange
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return Range
##
##    def RemovePeriods(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BoundWidth(self):
##        '-no docstring-'
##        #return BoundWidth
##
##    @property
##    def ParagraphFormat(self):
##        '-no docstring-'
##        #return Format
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##

class IMsoErrorBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C1721-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMsoSeries._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['nonbrowsable', 'hidden'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'IMsoLegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisGroup',
              ( ['retval', 'out'], POINTER(XlAxisGroup), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AxisGroup',
              ( ['in'], XlAxisGroup, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'DataLabels',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ErrorBar',
              ( ['in'], XlErrorBarDirection, 'Direction' ),
              ( ['in'], XlErrorBarInclude, 'Include' ),
              ( ['in'], XlErrorBarType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Amount' ),
              ( ['in', 'optional'], VARIANT, 'MinusValues' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ErrorBars',
              ( ['retval', 'out'], POINTER(POINTER(IMsoErrorBars)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Explosion',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1Local',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasDataLabels',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasDataLabels',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasErrorBars',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasErrorBars',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerStyle',
              ( ['retval', 'out'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(XlChartPictureType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PlotOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PlotOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Points',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Smooth',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Trendlines',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ChartType',
              ( ['retval', 'out'], POINTER(XlChartType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ChartType',
              ( ['in'], XlChartType, 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyCustomType',
              ( ['in'], XlChartType, 'ChartType' )),
    COMMETHOD(['propget'], HRESULT, 'Values',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Values',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'XValues',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'XValues',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BubbleSizes',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BubbleSizes',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BarShape',
              ( ['retval', 'out'], POINTER(XlBarShape), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToSides',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToFront',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToEnd',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Has3DEffect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasLeaderLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasLeaderLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeaderLines',
              ( ['retval', 'out'], POINTER(POINTER(IMsoLeaderLines)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'IMsoLegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for IMsoSeries implementation
##class IMsoSeries_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataLabels = property(_get, _set, doc = _set.__doc__)
##
##    def _ApplyDataLabels(self, Type, IMsoLegendKey, AutoText, HasLeaderLines):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Values = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasErrorBars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ErrorBars(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LeaderLines(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Trendlines(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasLeaderLines = property(_get, _set, doc = _set.__doc__)
##
##    def Points(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    def ErrorBar(self, Direction, Include, Type, Amount, MinusValues):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    XValues = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyCustomType(self, ChartType):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BubbleSizes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    def DataLabels(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyDataLabels(self, Type, IMsoLegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return RHS
##

LineFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'BackColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'BackColor',
              ( ['in'], POINTER(ColorFormat), 'BackColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BeginArrowheadLength',
              ( ['retval', 'out'], POINTER(MsoArrowheadLength), 'BeginArrowheadLength' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'BeginArrowheadLength',
              ( ['in'], MsoArrowheadLength, 'BeginArrowheadLength' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BeginArrowheadStyle',
              ( ['retval', 'out'], POINTER(MsoArrowheadStyle), 'BeginArrowheadStyle' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BeginArrowheadStyle',
              ( ['in'], MsoArrowheadStyle, 'BeginArrowheadStyle' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'BeginArrowheadWidth',
              ( ['retval', 'out'], POINTER(MsoArrowheadWidth), 'BeginArrowheadWidth' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'BeginArrowheadWidth',
              ( ['in'], MsoArrowheadWidth, 'BeginArrowheadWidth' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'DashStyle',
              ( ['retval', 'out'], POINTER(MsoLineDashStyle), 'DashStyle' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'DashStyle',
              ( ['in'], MsoLineDashStyle, 'DashStyle' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EndArrowheadLength',
              ( ['retval', 'out'], POINTER(MsoArrowheadLength), 'EndArrowheadLength' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'EndArrowheadLength',
              ( ['in'], MsoArrowheadLength, 'EndArrowheadLength' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'EndArrowheadStyle',
              ( ['retval', 'out'], POINTER(MsoArrowheadStyle), 'EndArrowheadStyle' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'EndArrowheadStyle',
              ( ['in'], MsoArrowheadStyle, 'EndArrowheadStyle' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'EndArrowheadWidth',
              ( ['retval', 'out'], POINTER(MsoArrowheadWidth), 'EndArrowheadWidth' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'EndArrowheadWidth',
              ( ['in'], MsoArrowheadWidth, 'EndArrowheadWidth' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(MsoPatternType), 'Pattern' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Pattern',
              ( ['in'], MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(MsoLineStyle), 'Style' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Style',
              ( ['in'], MsoLineStyle, 'Style' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['retval', 'out'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Visible' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'Visible',
              ( ['in'], MsoTriState, 'Visible' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Weight',
              ( ['retval', 'out'], POINTER(c_float), 'Weight' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Weight',
              ( ['in'], c_float, 'Weight' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'InsetPen',
              ( ['retval', 'out'], POINTER(MsoTriState), 'InsetPen' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'InsetPen',
              ( ['in'], MsoTriState, 'InsetPen' )),
]
################################################################
## code template for LineFormat implementation
##class LineFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return InsetPen
##    def _set(self, InsetPen):
##        '-no docstring-'
##    InsetPen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Weight
##    def _set(self, Weight):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Style
##    def _set(self, Style):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadStyle
##    def _set(self, BeginArrowheadStyle):
##        '-no docstring-'
##    BeginArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadLength
##    def _set(self, BeginArrowheadLength):
##        '-no docstring-'
##    BeginArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DashStyle
##    def _set(self, DashStyle):
##        '-no docstring-'
##    DashStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BackColor
##    def _set(self, BackColor):
##        '-no docstring-'
##    BackColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadLength
##    def _set(self, EndArrowheadLength):
##        '-no docstring-'
##    EndArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Pattern
##    def _set(self, Pattern):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadWidth
##    def _set(self, BeginArrowheadWidth):
##        '-no docstring-'
##    BeginArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadStyle
##    def _set(self, EndArrowheadStyle):
##        '-no docstring-'
##    EndArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadWidth
##    def _set(self, EndArrowheadWidth):
##        '-no docstring-'
##    EndArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##

class IMsoDispCagNotifySink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0359-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoDispCagNotifySink._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'InsertClip',
              ( ['in'], POINTER(IUnknown), 'pClipMoniker' ),
              ( ['in'], POINTER(IUnknown), 'pItemMoniker' )),
    COMMETHOD([dispid(2)], HRESULT, 'WindowIsClosing'),
]
################################################################
## code template for IMsoDispCagNotifySink implementation
##class IMsoDispCagNotifySink_Impl(object):
##    def InsertClip(self, pClipMoniker, pItemMoniker):
##        '-no docstring-'
##        #return 
##
##    def WindowIsClosing(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoDistributeCmd'
msoDistributeHorizontally = 0
msoDistributeVertically = 1
MsoDistributeCmd = c_int # enum
class IFind(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0337-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IFind._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'SearchPath',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'SubDir',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Author',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Keywords',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Subject',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Options',
              ( ['retval', 'out'], POINTER(MsoFileFindOptions), 'penmOptions' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'MatchCase',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'PatternMatch',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'DateSavedFrom',
              ( ['retval', 'out'], POINTER(VARIANT), 'pdatSavedFrom' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'DateSavedTo',
              ( ['retval', 'out'], POINTER(VARIANT), 'pdatSavedTo' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'SavedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'DateCreatedFrom',
              ( ['retval', 'out'], POINTER(VARIANT), 'pdatCreatedFrom' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'DateCreatedTo',
              ( ['retval', 'out'], POINTER(VARIANT), 'pdatCreatedTo' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'View',
              ( ['retval', 'out'], POINTER(MsoFileFindView), 'penmView' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'SortBy',
              ( ['retval', 'out'], POINTER(MsoFileFindSortBy), 'penmSortBy' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'ListBy',
              ( ['retval', 'out'], POINTER(MsoFileFindListBy), 'penmListBy' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'SelectedFile',
              ( ['retval', 'out'], POINTER(c_int), 'pintSelectedFile' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'Results',
              ( ['retval', 'out'], POINTER(POINTER(IFoundFiles)), 'pdisp' )),
    COMMETHOD([dispid(1610743829)], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(c_int), 'pRows' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'SearchPath',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743809), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'SubDir',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(1610743811), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'Author',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'Keywords',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Subject',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743815), 'propput'], HRESULT, 'Options',
              ( ['in'], MsoFileFindOptions, 'penmOptions' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'MatchCase',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(1610743817), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'PatternMatch',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(1610743819), 'propput'], HRESULT, 'DateSavedFrom',
              ( ['in'], VARIANT, 'pdatSavedFrom' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'DateSavedTo',
              ( ['in'], VARIANT, 'pdatSavedTo' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'SavedBy',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'DateCreatedFrom',
              ( ['in'], VARIANT, 'pdatCreatedFrom' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'DateCreatedTo',
              ( ['in'], VARIANT, 'pdatCreatedTo' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'View',
              ( ['in'], MsoFileFindView, 'penmView' )),
    COMMETHOD([dispid(1610743825), 'propput'], HRESULT, 'SortBy',
              ( ['in'], MsoFileFindSortBy, 'penmSortBy' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'ListBy',
              ( ['in'], MsoFileFindListBy, 'penmListBy' )),
    COMMETHOD([dispid(1610743827), 'propput'], HRESULT, 'SelectedFile',
              ( ['in'], c_int, 'pintSelectedFile' )),
    COMMETHOD([dispid(1610743850)], HRESULT, 'Execute'),
    COMMETHOD([dispid(1610743851)], HRESULT, 'Load',
              ( ['in'], BSTR, 'bstrQueryName' )),
    COMMETHOD([dispid(1610743852)], HRESULT, 'Save',
              ( ['in'], BSTR, 'bstrQueryName' )),
    COMMETHOD([dispid(1610743853)], HRESULT, 'Delete',
              ( ['in'], BSTR, 'bstrQueryName' )),
    COMMETHOD([dispid(1610743854), 'propget'], HRESULT, 'FileType',
              ( ['retval', 'out'], POINTER(c_int), 'plFileType' )),
    COMMETHOD([dispid(1610743854), 'propput'], HRESULT, 'FileType',
              ( ['in'], c_int, 'plFileType' )),
]
################################################################
## code template for IFind implementation
##class IFind_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return penmView
##    def _set(self, penmView):
##        '-no docstring-'
##    View = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pdatCreatedTo
##    def _set(self, pdatCreatedTo):
##        '-no docstring-'
##    DateCreatedTo = property(_get, _set, doc = _set.__doc__)
##
##    def Load(self, bstrQueryName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pdatCreatedFrom
##    def _set(self, pdatCreatedFrom):
##        '-no docstring-'
##    DateCreatedFrom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Author = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return plFileType
##    def _set(self, plFileType):
##        '-no docstring-'
##    FileType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SubDir = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SearchPath = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return penmSortBy
##    def _set(self, penmSortBy):
##        '-no docstring-'
##    SortBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PatternMatch = property(_get, _set, doc = _set.__doc__)
##
##    def Save(self, bstrQueryName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Keywords = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return penmOptions
##    def _set(self, penmOptions):
##        '-no docstring-'
##    Options = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pdatSavedTo
##    def _set(self, pdatSavedTo):
##        '-no docstring-'
##    DateSavedTo = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return penmListBy
##    def _set(self, penmListBy):
##        '-no docstring-'
##    ListBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    SavedBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pdatSavedFrom
##    def _set(self, pdatSavedFrom):
##        '-no docstring-'
##    DateSavedFrom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self, bstrQueryName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Results(self):
##        '-no docstring-'
##        #return pdisp
##
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Show(self):
##        '-no docstring-'
##        #return pRows
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MatchCase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pintSelectedFile
##    def _set(self, pintSelectedFile):
##        '-no docstring-'
##    SelectedFile = property(_get, _set, doc = _set.__doc__)
##

class PropertyTest(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0333-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
PropertyTest._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRetVal' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Condition',
              ( ['retval', 'out'], POINTER(MsoCondition), 'pConditionRetVal' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvargRetVal' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'SecondValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvargRetVal2' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Connector',
              ( ['retval', 'out'], POINTER(MsoConnector), 'pConnector' )),
]
################################################################
## code template for PropertyTest implementation
##class PropertyTest_Impl(object):
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return pConnector
##
##    @property
##    def Condition(self):
##        '-no docstring-'
##        #return pConditionRetVal
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrRetVal
##
##    @property
##    def SecondValue(self):
##        '-no docstring-'
##        #return pvargRetVal2
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return pvargRetVal
##

class SharedWorkspaceFolders(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C037E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceFolders._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceFolder)), 'ppidisp' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FolderName' ),
              ( ['in', 'optional'], VARIANT, 'ParentFolder' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceFolder)), 'ppFolder' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ItemCountExceeded',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pf' )),
]
################################################################
## code template for SharedWorkspaceFolders implementation
##class SharedWorkspaceFolders_Impl(object):
##    @property
##    def ItemCountExceeded(self):
##        '-no docstring-'
##        #return pf
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Add(self, FolderName, ParentFolder):
##        '-no docstring-'
##        #return ppFolder
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcItems
##

class BalloonCheckboxes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0326-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
BalloonCheckboxes._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pccbx' )),
    COMMETHOD([dispid(1610809347), 'propput'], HRESULT, 'Count',
              ( ['in'], c_int, 'pccbx' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
]
################################################################
## code template for BalloonCheckboxes implementation
##class BalloonCheckboxes_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def _get(self):
##        '-no docstring-'
##        #return pccbx
##    def _set(self, pccbx):
##        '-no docstring-'
##    Count = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##

class SharedWorkspaceLink(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C037F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceLink._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'URL',
              ( ['retval', 'out'], POINTER(BSTR), 'URL' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'URL',
              ( ['in'], BSTR, 'URL' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'Description' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'Description' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Notes',
              ( ['retval', 'out'], POINTER(BSTR), 'Notes' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Notes',
              ( ['in'], BSTR, 'Notes' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'CreatedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'CreatedBy' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'CreatedDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'CreatedDate' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ModifiedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'ModifiedBy' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ModifiedDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'ModifiedDate' )),
    COMMETHOD([dispid(7)], HRESULT, 'Save'),
    COMMETHOD([dispid(8)], HRESULT, 'Delete'),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for SharedWorkspaceLink implementation
##class SharedWorkspaceLink_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return URL
##    def _set(self, URL):
##        '-no docstring-'
##    URL = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Description
##    def _set(self, Description):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Notes
##    def _set(self, Notes):
##        '-no docstring-'
##    Notes = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CreatedDate(self):
##        '-no docstring-'
##        #return CreatedDate
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CreatedBy(self):
##        '-no docstring-'
##        #return CreatedBy
##
##    def Save(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ModifiedBy(self):
##        '-no docstring-'
##        #return ModifiedBy
##
##    @property
##    def ModifiedDate(self):
##        '-no docstring-'
##        #return ModifiedDate
##

class SharedWorkspaceLinks(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0380-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspaceLinks._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceLink)), 'ppidisp' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'URL' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'Notes' ),
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceLink)), 'ppLink' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ItemCountExceeded',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pf' )),
]
################################################################
## code template for SharedWorkspaceLinks implementation
##class SharedWorkspaceLinks_Impl(object):
##    @property
##    def ItemCountExceeded(self):
##        '-no docstring-'
##        #return pf
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Add(self, URL, Description, Notes):
##        '-no docstring-'
##        #return ppLink
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcItems
##


# values for enumeration 'MsoShadowStyle'
msoShadowStyleMixed = -2
msoShadowStyleInnerShadow = 1
msoShadowStyleOuterShadow = 2
MsoShadowStyle = c_int # enum
class SharedWorkspace(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0385-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SharedWorkspace._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Members',
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceMembers)), 'ppMembers' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Tasks',
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceTasks)), 'ppTasks' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Files',
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceFiles)), 'ppFiles' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Folders',
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceFolders)), 'ppFolders' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Links',
              ( ['retval', 'out'], POINTER(POINTER(SharedWorkspaceLinks)), 'ppLinks' )),
    COMMETHOD([dispid(6)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(7)], HRESULT, 'CreateNew',
              ( ['in', 'optional'], VARIANT, 'URL' ),
              ( ['in', 'optional'], VARIANT, 'Name' )),
    COMMETHOD([dispid(8)], HRESULT, 'Delete'),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'URL',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrUrl' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Connected',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfConnected' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LastRefreshed',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarLastRefreshed' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'SourceURL',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrSourceURL' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'SourceURL',
              ( ['in'], BSTR, 'pbstrSourceURL' )),
    COMMETHOD([dispid(14)], HRESULT, 'RemoveDocument'),
    COMMETHOD([dispid(15)], HRESULT, 'Disconnect'),
]
################################################################
## code template for SharedWorkspace implementation
##class SharedWorkspace_Impl(object):
##    @property
##    def URL(self):
##        '-no docstring-'
##        #return pbstrUrl
##
##    @property
##    def Folders(self):
##        '-no docstring-'
##        #return ppFolders
##
##    def Disconnect(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def LastRefreshed(self):
##        '-no docstring-'
##        #return pvarLastRefreshed
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tasks(self):
##        '-no docstring-'
##        #return ppTasks
##
##    @property
##    def Files(self):
##        '-no docstring-'
##        #return ppFiles
##
##    @property
##    def Links(self):
##        '-no docstring-'
##        #return ppLinks
##
##    def CreateNew(self, URL, Name):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Members(self):
##        '-no docstring-'
##        #return ppMembers
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrSourceURL
##    def _set(self, pbstrSourceURL):
##        '-no docstring-'
##    SourceURL = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveDocument(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Connected(self):
##        '-no docstring-'
##        #return pfConnected
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##

IMsoTickLabels._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'ppval' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'pval' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'pval' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'NumberFormatLinked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(XlTickLabelOrientation), 'pval' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Orientation',
              ( ['in'], XlTickLabelOrientation, 'pval' )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'pval' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'pval' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'Depth',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'Offset',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'Offset',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'Alignment',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'Alignment',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'MultiLevel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'MultiLevel',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoTickLabels implementation
##class IMsoTickLabels_Impl(object):
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    MultiLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return pval
##
##    def Delete(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Offset = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Depth(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppval
##

IMsoChartArea._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(111)], HRESULT, 'Clear',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(113)], HRESULT, 'ClearContents',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(ChartFont)), 'ppfont' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pf' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'pf' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'ppfill' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'pd' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'pd' )),
    COMMETHOD([dispid(1525), 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1525), 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'pvar' )),
    COMMETHOD([dispid(1610743831), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoChartArea implementation
##class IMsoChartArea_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pf
##    def _set(self, pf):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvar
##    def _set(self, pvar):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppfill
##
##    def ClearContents(self):
##        '-no docstring-'
##        #return pvar
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    def _get(self):
##        '-no docstring-'
##        #return pd
##    def _set(self, pd):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return pvar
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return pvar
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppfont
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    def Copy(self):
##        '-no docstring-'
##        #return pvar
##


# values for enumeration 'MsoFlipCmd'
msoFlipHorizontal = 0
msoFlipVertical = 1
MsoFlipCmd = c_int # enum
class Adjustments(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0310-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoBlackWhiteMode'
msoBlackWhiteMixed = -2
msoBlackWhiteAutomatic = 1
msoBlackWhiteGrayScale = 2
msoBlackWhiteLightGrayScale = 3
msoBlackWhiteInverseGrayScale = 4
msoBlackWhiteGrayOutline = 5
msoBlackWhiteBlackTextAndLine = 6
msoBlackWhiteHighContrast = 7
msoBlackWhiteBlack = 8
msoBlackWhiteWhite = 9
msoBlackWhiteDontShow = 10
MsoBlackWhiteMode = c_int # enum
class CalloutFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0311-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class ShapeNodes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0319-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class TextEffectFormat(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoShapeType'
msoShapeTypeMixed = -2
msoAutoShape = 1
msoCallout = 2
msoChart = 3
msoComment = 4
msoFreeform = 5
msoGroup = 6
msoEmbeddedOLEObject = 7
msoFormControl = 8
msoLine = 9
msoLinkedOLEObject = 10
msoLinkedPicture = 11
msoOLEControlObject = 12
msoPicture = 13
msoPlaceholder = 14
msoTextEffect = 15
msoMedia = 16
msoTextBox = 17
msoScriptAnchor = 18
msoTable = 19
msoCanvas = 20
msoDiagram = 21
msoInk = 22
msoInkComment = 23
msoSmartArt = 24
MsoShapeType = c_int # enum
class IMsoDiagram(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C036D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class DiagramNode(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0370-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoShapeStyleIndex'
msoShapeStyleMixed = -2
msoShapeStyleNotAPreset = 0
msoShapeStylePreset1 = 1
msoShapeStylePreset2 = 2
msoShapeStylePreset3 = 3
msoShapeStylePreset4 = 4
msoShapeStylePreset5 = 5
msoShapeStylePreset6 = 6
msoShapeStylePreset7 = 7
msoShapeStylePreset8 = 8
msoShapeStylePreset9 = 9
msoShapeStylePreset10 = 10
msoShapeStylePreset11 = 11
msoShapeStylePreset12 = 12
msoShapeStylePreset13 = 13
msoShapeStylePreset14 = 14
msoShapeStylePreset15 = 15
msoShapeStylePreset16 = 16
msoShapeStylePreset17 = 17
msoShapeStylePreset18 = 18
msoShapeStylePreset19 = 19
msoShapeStylePreset20 = 20
msoShapeStylePreset21 = 21
msoShapeStylePreset22 = 22
msoShapeStylePreset23 = 23
msoShapeStylePreset24 = 24
msoShapeStylePreset25 = 25
msoShapeStylePreset26 = 26
msoShapeStylePreset27 = 27
msoShapeStylePreset28 = 28
msoShapeStylePreset29 = 29
msoShapeStylePreset30 = 30
msoShapeStylePreset31 = 31
msoShapeStylePreset32 = 32
msoShapeStylePreset33 = 33
msoShapeStylePreset34 = 34
msoShapeStylePreset35 = 35
msoShapeStylePreset36 = 36
msoShapeStylePreset37 = 37
msoShapeStylePreset38 = 38
msoShapeStylePreset39 = 39
msoShapeStylePreset40 = 40
msoShapeStylePreset41 = 41
msoShapeStylePreset42 = 42
msoLineStylePreset1 = 10001
msoLineStylePreset2 = 10002
msoLineStylePreset3 = 10003
msoLineStylePreset4 = 10004
msoLineStylePreset5 = 10005
msoLineStylePreset6 = 10006
msoLineStylePreset7 = 10007
msoLineStylePreset8 = 10008
msoLineStylePreset9 = 10009
msoLineStylePreset10 = 10010
msoLineStylePreset11 = 10011
msoLineStylePreset12 = 10012
msoLineStylePreset13 = 10013
msoLineStylePreset14 = 10014
msoLineStylePreset15 = 10015
msoLineStylePreset16 = 10016
msoLineStylePreset17 = 10017
msoLineStylePreset18 = 10018
msoLineStylePreset19 = 10019
msoLineStylePreset20 = 10020
msoLineStylePreset21 = 10021
MsoShapeStyleIndex = c_int # enum
Shape._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'Apply'),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12)], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Duplicate' )),
    COMMETHOD([dispid(13)], HRESULT, 'Flip',
              ( ['in'], MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([dispid(14)], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(15)], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'PickUp'),
    COMMETHOD([dispid(18)], HRESULT, 'RerouteConnections'),
    COMMETHOD([dispid(19)], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(20)], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(21)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' )),
    COMMETHOD([dispid(22)], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([dispid(23)], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'Ungroup' )),
    COMMETHOD([dispid(24)], HRESULT, 'ZOrder',
              ( ['in'], MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Adjustments',
              ( ['retval', 'out'], POINTER(POINTER(Adjustments)), 'Adjustments' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'AutoShapeType',
              ( ['retval', 'out'], POINTER(MsoAutoShapeType), 'AutoShapeType' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], MsoAutoShapeType, 'AutoShapeType' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BlackWhiteMode',
              ( ['retval', 'out'], POINTER(MsoBlackWhiteMode), 'BlackWhiteMode' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BlackWhiteMode',
              ( ['in'], MsoBlackWhiteMode, 'BlackWhiteMode' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Callout',
              ( ['retval', 'out'], POINTER(POINTER(CalloutFormat)), 'Callout' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ConnectionSiteCount',
              ( ['retval', 'out'], POINTER(c_int), 'ConnectionSiteCount' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Connector',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Connector' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ConnectorFormat',
              ( ['retval', 'out'], POINTER(POINTER(ConnectorFormat)), 'ConnectorFormat' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(FillFormat)), 'Fill' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'GroupItems',
              ( ['retval', 'out'], POINTER(POINTER(GroupShapes)), 'GroupItems' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HorizontalFlip',
              ( ['retval', 'out'], POINTER(MsoTriState), 'HorizontalFlip' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(POINTER(LineFormat)), 'Line' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'LockAspectRatio',
              ( ['retval', 'out'], POINTER(MsoTriState), 'LockAspectRatio' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], MsoTriState, 'LockAspectRatio' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Nodes',
              ( ['retval', 'out'], POINTER(POINTER(ShapeNodes)), 'Nodes' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Rotation',
              ( ['retval', 'out'], POINTER(c_float), 'Rotation' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'Rotation' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'PictureFormat',
              ( ['retval', 'out'], POINTER(POINTER(PictureFormat)), 'Picture' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(POINTER(ShadowFormat)), 'Shadow' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextEffect',
              ( ['retval', 'out'], POINTER(POINTER(TextEffectFormat)), 'TextEffect' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'TextFrame',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame)), 'TextFrame' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'ThreeD' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoShapeType), 'Type' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'VerticalFlip',
              ( ['retval', 'out'], POINTER(MsoTriState), 'VerticalFlip' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Vertices',
              ( ['retval', 'out'], POINTER(VARIANT), 'Vertices' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Visible' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Visible',
              ( ['in'], MsoTriState, 'Visible' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'ZOrderPosition',
              ( ['retval', 'out'], POINTER(c_int), 'ZOrderPosition' )),
    COMMETHOD([dispid(130), 'hidden', 'propget'], HRESULT, 'Script',
              ( ['retval', 'out'], POINTER(POINTER(Script)), 'Script' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'AlternativeText',
              ( ['retval', 'out'], POINTER(BSTR), 'AlternativeText' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'AlternativeText' )),
    COMMETHOD([dispid(132), 'hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['retval', 'out'], POINTER(MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(133), 'hidden', 'propget'], HRESULT, 'Diagram',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDiagram)), 'Diagram' )),
    COMMETHOD([dispid(134), 'hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['retval', 'out'], POINTER(MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(135), 'hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'DiagramNode' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'Child',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Child' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ParentGroup',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Parent' )),
    COMMETHOD([dispid(138), 'hidden', 'propget'], HRESULT, 'CanvasItems',
              ( ['retval', 'out'], POINTER(POINTER(CanvasShapes)), 'CanvasShapes' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(140), 'hidden'], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(141), 'hidden'], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(142), 'hidden'], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(143), 'hidden'], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(144), 'hidden', 'propput'], HRESULT, 'RTF',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(145), 'propget'], HRESULT, 'TextFrame2',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame2)), 'Frame' )),
    COMMETHOD([dispid(146)], HRESULT, 'Cut'),
    COMMETHOD([dispid(147)], HRESULT, 'Copy'),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'HasChart',
              ( ['retval', 'out'], POINTER(MsoTriState), 'pHasChart' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Chart',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChart)), 'Chart' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'ShapeStyle',
              ( ['retval', 'out'], POINTER(MsoShapeStyleIndex), 'ShapeStyle' )),
    COMMETHOD([dispid(150), 'propput'], HRESULT, 'ShapeStyle',
              ( ['in'], MsoShapeStyleIndex, 'ShapeStyle' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['retval', 'out'], POINTER(MsoBackgroundStyleIndex), 'BackgroundStyle' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], MsoBackgroundStyleIndex, 'BackgroundStyle' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'SoftEdge',
              ( ['retval', 'out'], POINTER(POINTER(SoftEdgeFormat)), 'SoftEdge' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Glow',
              ( ['retval', 'out'], POINTER(POINTER(GlowFormat)), 'Glow' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'Reflection',
              ( ['retval', 'out'], POINTER(POINTER(ReflectionFormat)), 'Reflection' )),
]
################################################################
## code template for Shape implementation
##class Shape_Impl(object):
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return Glow
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return Nodes
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return ConnectionSiteCount
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return Vertices
##
##    def _get(self):
##        '-no docstring-'
##        #return LockAspectRatio
##    def _set(self, LockAspectRatio):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BackgroundStyle
##    def _set(self, BackgroundStyle):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return DiagramNode
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return VerticalFlip
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return pHasChart
##
##    def _set(self, rhs):
##        '-no docstring-'
##    RTF = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return TextFrame
##
##    def _get(self):
##        '-no docstring-'
##        #return Rotation
##    def _set(self, Rotation):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return CanvasShapes
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return Diagram
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return HorizontalFlip
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return SoftEdge
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return Fill
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ThreeD
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return Callout
##
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return AlternativeText
##    def _set(self, AlternativeText):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return Connector
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return Picture
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return Shadow
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return ZOrderPosition
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return GroupItems
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return Reflection
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pid
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return ConnectorFormat
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BlackWhiteMode
##    def _set(self, BlackWhiteMode):
##        '-no docstring-'
##    BlackWhiteMode = property(_get, _set, doc = _set.__doc__)
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return Duplicate
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return Child
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return Chart
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShapeStyle
##    def _set(self, ShapeStyle):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return Line
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return TextEffect
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoShapeType
##    def _set(self, AutoShapeType):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return Frame
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return Adjustments
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return Ungroup
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Script(self):
##        '-no docstring-'
##        #return Script
##

class IMsoHiLoLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C172E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoHiLoLines._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Select'),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoHiLoLines implementation
##class IMsoHiLoLines_Impl(object):
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##

class IRibbonControl(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0395-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
IRibbonControl._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(BSTR), 'Id' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Context',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Context' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Tag',
              ( ['retval', 'out'], POINTER(BSTR), 'Tag' )),
]
################################################################
## code template for IRibbonControl implementation
##class IRibbonControl_Impl(object):
##    @property
##    def Tag(self):
##        '-no docstring-'
##        #return Tag
##
##    @property
##    def Context(self):
##        '-no docstring-'
##        #return Context
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return Id
##

class ShapeNode(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0318-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ShapeNodes._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ShapeNode)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(12)], HRESULT, 'Insert',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], MsoSegmentType, 'SegmentType' ),
              ( ['in'], MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], c_float, 'X2', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y2', 0.0 ),
              ( ['in', 'optional'], c_float, 'X3', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y3', 0.0 )),
    COMMETHOD([dispid(13)], HRESULT, 'SetEditingType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], MsoEditingType, 'EditingType' )),
    COMMETHOD([dispid(14)], HRESULT, 'SetPosition',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetSegmentType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], MsoSegmentType, 'SegmentType' )),
]
################################################################
## code template for ShapeNodes implementation
##class ShapeNodes_Impl(object):
##    def SetEditingType(self, Index, EditingType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self, Index):
##        '-no docstring-'
##        #return 
##
##    def SetSegmentType(self, Index, SegmentType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def SetPosition(self, Index, X1, Y1):
##        '-no docstring-'
##        #return 
##
##    def Insert(self, Index, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##

DocumentProperty._methods_ = [
    COMMETHOD(['propget'], POINTER(IDispatch), 'Parent'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRetVal' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'pbstrRetVal' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvargRetVal' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'pvargRetVal' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(MsoDocProperties), 'ptypeRetVal' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], MsoDocProperties, 'ptypeRetVal' )),
    COMMETHOD(['propget'], HRESULT, 'LinkToContent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfLinkRetVal' )),
    COMMETHOD(['propput'], HRESULT, 'LinkToContent',
              ( ['in'], VARIANT_BOOL, 'pfLinkRetVal' )),
    COMMETHOD(['propget'], HRESULT, 'LinkSource',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrSourceRetVal' )),
    COMMETHOD(['propput'], HRESULT, 'LinkSource',
              ( ['in'], BSTR, 'pbstrSourceRetVal' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'plCreator' )),
]
################################################################
## code template for DocumentProperty implementation
##class DocumentProperty_Impl(object):
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return pvargRetVal
##    def _set(self, lcid, pvargRetVal):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfLinkRetVal
##    def _set(self, pfLinkRetVal):
##        '-no docstring-'
##    LinkToContent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return pbstrRetVal
##    def _set(self, lcid, pbstrRetVal):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return ptypeRetVal
##    def _set(self, lcid, ptypeRetVal):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrSourceRetVal
##    def _set(self, pbstrSourceRetVal):
##        '-no docstring-'
##    LinkSource = property(_get, _set, doc = _set.__doc__)
##

SharedWorkspaceFile._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'URL',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrFilename' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'CreatedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCreatedBy' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'CreatedDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'CreatedDate' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ModifiedBy',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrModifiedBy' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ModifiedDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'ModifiedDate' )),
    COMMETHOD([dispid(5)], HRESULT, 'Delete'),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
]
################################################################
## code template for SharedWorkspaceFile implementation
##class SharedWorkspaceFile_Impl(object):
##    @property
##    def URL(self):
##        '-no docstring-'
##        #return pbstrFilename
##
##    @property
##    def ModifiedBy(self):
##        '-no docstring-'
##        #return pbstrModifiedBy
##
##    @property
##    def CreatedDate(self):
##        '-no docstring-'
##        #return CreatedDate
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CreatedBy(self):
##        '-no docstring-'
##        #return pbstrCreatedBy
##
##    @property
##    def ModifiedDate(self):
##        '-no docstring-'
##        #return ModifiedDate
##

ShapeRange._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10)], HRESULT, 'Align',
              ( ['in'], MsoAlignCmd, 'AlignCmd' ),
              ( ['in'], MsoTriState, 'RelativeTo' )),
    COMMETHOD([dispid(11)], HRESULT, 'Apply'),
    COMMETHOD([dispid(12)], HRESULT, 'Delete'),
    COMMETHOD([dispid(13)], HRESULT, 'Distribute',
              ( ['in'], MsoDistributeCmd, 'DistributeCmd' ),
              ( ['in'], MsoTriState, 'RelativeTo' )),
    COMMETHOD([dispid(14)], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'Duplicate' )),
    COMMETHOD([dispid(15)], HRESULT, 'Flip',
              ( ['in'], MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(18)], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(19)], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Group' )),
    COMMETHOD([dispid(20)], HRESULT, 'PickUp'),
    COMMETHOD([dispid(21)], HRESULT, 'Regroup',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Regroup' )),
    COMMETHOD([dispid(22)], HRESULT, 'RerouteConnections'),
    COMMETHOD([dispid(23)], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(24)], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(25)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' )),
    COMMETHOD([dispid(26)], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([dispid(27)], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'Ungroup' )),
    COMMETHOD([dispid(28)], HRESULT, 'ZOrder',
              ( ['in'], MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Adjustments',
              ( ['retval', 'out'], POINTER(POINTER(Adjustments)), 'Adjustments' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'AutoShapeType',
              ( ['retval', 'out'], POINTER(MsoAutoShapeType), 'AutoShapeType' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], MsoAutoShapeType, 'AutoShapeType' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BlackWhiteMode',
              ( ['retval', 'out'], POINTER(MsoBlackWhiteMode), 'BlackWhiteMode' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BlackWhiteMode',
              ( ['in'], MsoBlackWhiteMode, 'BlackWhiteMode' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Callout',
              ( ['retval', 'out'], POINTER(POINTER(CalloutFormat)), 'Callout' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ConnectionSiteCount',
              ( ['retval', 'out'], POINTER(c_int), 'ConnectionSiteCount' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Connector',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Connector' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ConnectorFormat',
              ( ['retval', 'out'], POINTER(POINTER(ConnectorFormat)), 'ConnectorFormat' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(FillFormat)), 'Fill' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'GroupItems',
              ( ['retval', 'out'], POINTER(POINTER(GroupShapes)), 'GroupItems' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HorizontalFlip',
              ( ['retval', 'out'], POINTER(MsoTriState), 'HorizontalFlip' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(POINTER(LineFormat)), 'Line' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'LockAspectRatio',
              ( ['retval', 'out'], POINTER(MsoTriState), 'LockAspectRatio' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], MsoTriState, 'LockAspectRatio' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Nodes',
              ( ['retval', 'out'], POINTER(POINTER(ShapeNodes)), 'Nodes' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Rotation',
              ( ['retval', 'out'], POINTER(c_float), 'Rotation' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'Rotation' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'PictureFormat',
              ( ['retval', 'out'], POINTER(POINTER(PictureFormat)), 'Picture' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(POINTER(ShadowFormat)), 'Shadow' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextEffect',
              ( ['retval', 'out'], POINTER(POINTER(TextEffectFormat)), 'TextEffect' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'TextFrame',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame)), 'TextFrame' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'ThreeD' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoShapeType), 'Type' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'VerticalFlip',
              ( ['retval', 'out'], POINTER(MsoTriState), 'VerticalFlip' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Vertices',
              ( ['retval', 'out'], POINTER(VARIANT), 'Vertices' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Visible' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Visible',
              ( ['in'], MsoTriState, 'Visible' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'ZOrderPosition',
              ( ['retval', 'out'], POINTER(c_int), 'ZOrderPosition' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'Script',
              ( ['retval', 'out'], POINTER(POINTER(Script)), 'Script' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'AlternativeText',
              ( ['retval', 'out'], POINTER(BSTR), 'AlternativeText' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'AlternativeText' )),
    COMMETHOD([dispid(132), 'hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['retval', 'out'], POINTER(MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(133), 'hidden', 'propget'], HRESULT, 'Diagram',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDiagram)), 'Diagram' )),
    COMMETHOD([dispid(134), 'hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['retval', 'out'], POINTER(MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(135), 'hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'DiagramNode' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'Child',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Child' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ParentGroup',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Parent' )),
    COMMETHOD([dispid(138), 'hidden', 'propget'], HRESULT, 'CanvasItems',
              ( ['retval', 'out'], POINTER(POINTER(CanvasShapes)), 'CanvasShapes' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Id',
              ( ['retval', 'out'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(140), 'hidden'], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(141), 'hidden'], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(142), 'hidden'], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(143), 'hidden'], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(144), 'hidden', 'propput'], HRESULT, 'RTF',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(145), 'propget'], HRESULT, 'TextFrame2',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame2)), 'Frame' )),
    COMMETHOD([dispid(146)], HRESULT, 'Cut'),
    COMMETHOD([dispid(147)], HRESULT, 'Copy'),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'HasChart',
              ( ['retval', 'out'], POINTER(MsoTriState), 'pHasChart' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Chart',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChart)), 'Chart' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'ShapeStyle',
              ( ['retval', 'out'], POINTER(MsoShapeStyleIndex), 'ShapeStyle' )),
    COMMETHOD([dispid(150), 'propput'], HRESULT, 'ShapeStyle',
              ( ['in'], MsoShapeStyleIndex, 'ShapeStyle' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['retval', 'out'], POINTER(MsoBackgroundStyleIndex), 'BackgroundStyle' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], MsoBackgroundStyleIndex, 'BackgroundStyle' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'SoftEdge',
              ( ['retval', 'out'], POINTER(POINTER(SoftEdgeFormat)), 'SoftEdge' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Glow',
              ( ['retval', 'out'], POINTER(POINTER(GlowFormat)), 'Glow' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'Reflection',
              ( ['retval', 'out'], POINTER(POINTER(ReflectionFormat)), 'Reflection' )),
]
################################################################
## code template for ShapeRange implementation
##class ShapeRange_Impl(object):
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return Glow
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return Nodes
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return ConnectionSiteCount
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return GroupItems
##
##    def _get(self):
##        '-no docstring-'
##        #return LockAspectRatio
##    def _set(self, LockAspectRatio):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BackgroundStyle
##    def _set(self, BackgroundStyle):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return DiagramNode
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return VerticalFlip
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return pHasChart
##
##    def _set(self, rhs):
##        '-no docstring-'
##    RTF = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return TextFrame
##
##    def _get(self):
##        '-no docstring-'
##        #return Rotation
##    def _set(self, Rotation):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return CanvasShapes
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return Diagram
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return HorizontalFlip
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return SoftEdge
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    def Distribute(self, DistributeCmd, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ThreeD
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return Callout
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return Chart
##
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return Fill
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def Regroup(self):
##        '-no docstring-'
##        #return Regroup
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return Vertices
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return Connector
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return Picture
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return Shadow
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return ZOrderPosition
##
##    def Align(self, AlignCmd, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return Reflection
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pid
##
##    def Group(self):
##        '-no docstring-'
##        #return Group
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return ConnectorFormat
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BlackWhiteMode
##    def _set(self, BlackWhiteMode):
##        '-no docstring-'
##    BlackWhiteMode = property(_get, _set, doc = _set.__doc__)
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return Duplicate
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return Child
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return ShapeStyle
##    def _set(self, ShapeStyle):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return Line
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return TextEffect
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoShapeType
##    def _set(self, AutoShapeType):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return Frame
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return Adjustments
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return AlternativeText
##    def _set(self, AlternativeText):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return Ungroup
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Script(self):
##        '-no docstring-'
##        #return Script
##

ShapeNode._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'EditingType',
              ( ['retval', 'out'], POINTER(MsoEditingType), 'EditingType' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Points',
              ( ['retval', 'out'], POINTER(VARIANT), 'Points' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'SegmentType',
              ( ['retval', 'out'], POINTER(MsoSegmentType), 'SegmentType' )),
]
################################################################
## code template for ShapeNode implementation
##class ShapeNode_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Points(self):
##        '-no docstring-'
##        #return Points
##
##    @property
##    def SegmentType(self):
##        '-no docstring-'
##        #return SegmentType
##
##    @property
##    def EditingType(self):
##        '-no docstring-'
##        #return EditingType
##

class EncryptionProvider(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000CD809-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
EncryptionProvider._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'GetProviderDetail',
              ( ['in'], EncryptionProviderDetail, 'encprovdet' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'NewSession',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' ),
              ( ['retval', 'out'], POINTER(c_int), 'SessionHandle' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Authenticate',
              ( ['in'], POINTER(IUnknown), 'ParentWindow' ),
              ( ['in'], POINTER(IUnknown), 'EncryptionData' ),
              ( ['out'], POINTER(c_uint), 'PermissionsMask' ),
              ( ['retval', 'out'], POINTER(c_int), 'SessionHandle' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'CloneSession',
              ( ['in'], c_int, 'SessionHandle' ),
              ( ['retval', 'out'], POINTER(c_int), 'SessionHandleClone' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'EndSession',
              ( ['in'], c_int, 'SessionHandle' )),
    COMMETHOD([dispid(1610743813)], HRESULT, 'Save',
              ( ['in'], c_int, 'SessionHandle' ),
              ( ['in'], POINTER(IUnknown), 'EncryptionData' ),
              ( ['retval', 'out'], POINTER(c_int), 'EncryptionDataSize' )),
    COMMETHOD([dispid(1610743814)], HRESULT, 'EncryptStream',
              ( ['in'], c_int, 'SessionHandle' ),
              ( ['in'], BSTR, 'StreamName' ),
              ( ['in'], POINTER(IUnknown), 'UnencryptedStream' ),
              ( ['in'], POINTER(IUnknown), 'EncryptedStream' )),
    COMMETHOD([dispid(1610743815)], HRESULT, 'DecryptStream',
              ( ['in'], c_int, 'SessionHandle' ),
              ( ['in'], BSTR, 'StreamName' ),
              ( ['in'], POINTER(IUnknown), 'EncryptedStream' ),
              ( ['in'], POINTER(IUnknown), 'UnencryptedStream' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'ShowSettings',
              ( ['in'], c_int, 'SessionHandle' ),
              ( ['in'], POINTER(IUnknown), 'ParentWindow' ),
              ( ['in'], VARIANT_BOOL, 'ReadOnly' ),
              ( ['out'], POINTER(VARIANT_BOOL), 'Remove' )),
]
################################################################
## code template for EncryptionProvider implementation
##class EncryptionProvider_Impl(object):
##    def GetProviderDetail(self, encprovdet):
##        '-no docstring-'
##        #return pvar
##
##    def NewSession(self, ParentWindow):
##        '-no docstring-'
##        #return SessionHandle
##
##    def Authenticate(self, ParentWindow, EncryptionData):
##        '-no docstring-'
##        #return PermissionsMask, SessionHandle
##
##    def DecryptStream(self, SessionHandle, StreamName, EncryptedStream, UnencryptedStream):
##        '-no docstring-'
##        #return 
##
##    def Save(self, SessionHandle, EncryptionData):
##        '-no docstring-'
##        #return EncryptionDataSize
##
##    def EndSession(self, SessionHandle):
##        '-no docstring-'
##        #return 
##
##    def ShowSettings(self, SessionHandle, ParentWindow, ReadOnly):
##        '-no docstring-'
##        #return Remove
##
##    def EncryptStream(self, SessionHandle, StreamName, UnencryptedStream, EncryptedStream):
##        '-no docstring-'
##        #return 
##
##    def CloneSession(self, SessionHandle):
##        '-no docstring-'
##        #return SessionHandleClone
##

_CommandBarComboBox._methods_ = [
    COMMETHOD([dispid(1610940416)], HRESULT, 'AddItem',
              ( ['in'], BSTR, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Index' )),
    COMMETHOD([dispid(1610940417)], HRESULT, 'Clear'),
    COMMETHOD([dispid(1610940418), 'propget'], HRESULT, 'DropDownLines',
              ( ['retval', 'out'], POINTER(c_int), 'pcLines' )),
    COMMETHOD([dispid(1610940418), 'propput'], HRESULT, 'DropDownLines',
              ( ['in'], c_int, 'pcLines' )),
    COMMETHOD([dispid(1610940420), 'propget'], HRESULT, 'DropDownWidth',
              ( ['retval', 'out'], POINTER(c_int), 'pdx' )),
    COMMETHOD([dispid(1610940420), 'propput'], HRESULT, 'DropDownWidth',
              ( ['in'], c_int, 'pdx' )),
    COMMETHOD([dispid(1610940422), 'propget'], HRESULT, 'List',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrItem' )),
    COMMETHOD([dispid(1610940422), 'propput'], HRESULT, 'List',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], BSTR, 'pbstrItem' )),
    COMMETHOD([dispid(1610940424), 'propget'], HRESULT, 'ListCount',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(1610940425), 'propget'], HRESULT, 'ListHeaderCount',
              ( ['retval', 'out'], POINTER(c_int), 'pcItems' )),
    COMMETHOD([dispid(1610940425), 'propput'], HRESULT, 'ListHeaderCount',
              ( ['in'], c_int, 'pcItems' )),
    COMMETHOD([dispid(1610940427), 'propget'], HRESULT, 'ListIndex',
              ( ['retval', 'out'], POINTER(c_int), 'pi' )),
    COMMETHOD([dispid(1610940427), 'propput'], HRESULT, 'ListIndex',
              ( ['in'], c_int, 'pi' )),
    COMMETHOD([dispid(1610940429)], HRESULT, 'RemoveItem',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(1610940430), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(MsoComboStyle), 'pstyle' )),
    COMMETHOD([dispid(1610940430), 'propput'], HRESULT, 'Style',
              ( ['in'], MsoComboStyle, 'pstyle' )),
    COMMETHOD([dispid(1610940432), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrText' )),
    COMMETHOD([dispid(1610940432), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstrText' )),
]
################################################################
## code template for _CommandBarComboBox implementation
##class _CommandBarComboBox_Impl(object):
##    @property
##    def ListCount(self):
##        '-no docstring-'
##        #return pcItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pcLines
##    def _set(self, pcLines):
##        '-no docstring-'
##    DropDownLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return pbstrItem
##    def _set(self, Index, pbstrItem):
##        '-no docstring-'
##    List = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrText
##    def _set(self, pbstrText):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pstyle
##    def _set(self, pstyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def AddItem(self, Text, Index):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pdx
##    def _set(self, pdx):
##        '-no docstring-'
##    DropDownWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pcItems
##    def _set(self, pcItems):
##        '-no docstring-'
##    ListHeaderCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pi
##    def _set(self, pi):
##        '-no docstring-'
##    ListIndex = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def RemoveItem(self, Index):
##        '-no docstring-'
##        #return 
##

class _CommandBarActiveX(CommandBarControl):
    _case_insensitive_ = True
    _iid_ = GUID('{000C030D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_CommandBarActiveX._methods_ = [
    COMMETHOD([dispid(1610940416), 'propget'], HRESULT, 'ControlCLSID',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrClsid' )),
    COMMETHOD([dispid(1610940416), 'propput'], HRESULT, 'ControlCLSID',
              ( ['in'], BSTR, 'pbstrClsid' )),
    COMMETHOD([dispid(1610940418), 'propget'], HRESULT, 'QueryControlInterface',
              ( ['in'], BSTR, 'bstrIid' ),
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppUnk' )),
    COMMETHOD([dispid(1610940419)], HRESULT, 'SetInnerObjectFactory',
              ( ['in'], POINTER(IUnknown), 'pUnk' )),
    COMMETHOD([dispid(1610940420)], HRESULT, 'EnsureControl'),
    COMMETHOD([dispid(1610940421), 'propput'], HRESULT, 'InitWith',
              ( ['in'], POINTER(IUnknown), 'rhs' )),
]
################################################################
## code template for _CommandBarActiveX implementation
##class _CommandBarActiveX_Impl(object):
##    def SetInnerObjectFactory(self, pUnk):
##        '-no docstring-'
##        #return 
##
##    @property
##    def QueryControlInterface(self, bstrIid):
##        '-no docstring-'
##        #return ppUnk
##
##    def _set(self, rhs):
##        '-no docstring-'
##    InitWith = property(fset = _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrClsid
##    def _set(self, pbstrClsid):
##        '-no docstring-'
##    ControlCLSID = property(_get, _set, doc = _set.__doc__)
##
##    def EnsureControl(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoPictureColorType'
msoPictureMixed = -2
msoPictureAutomatic = 1
msoPictureGrayscale = 2
msoPictureBlackAndWhite = 3
msoPictureWatermark = 4
MsoPictureColorType = c_int # enum

# values for enumeration 'DocProperties'
offPropertyTypeNumber = 1
offPropertyTypeBoolean = 2
offPropertyTypeDate = 3
offPropertyTypeString = 4
offPropertyTypeFloat = 5
DocProperties = c_int # enum
IMsoErrorBars._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EndStyle',
              ( ['retval', 'out'], POINTER(XlEndStyleCap), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EndStyle',
              ( ['in'], XlEndStyleCap, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoErrorBars implementation
##class IMsoErrorBars_Impl(object):
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EndStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##

IMsoChartGroup._methods_ = [
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'AxisGroup',
              ( ['in'], c_int, 'piGroup' )),
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'AxisGroup',
              ( ['retval', 'out'], POINTER(c_int), 'piGroup' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'DoughnutHoleSize',
              ( ['in'], c_int, 'pDoughnutHoleSize' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'DoughnutHoleSize',
              ( ['retval', 'out'], POINTER(c_int), 'pDoughnutHoleSize' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'DownBars',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDownBars)), 'ppdownbars' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'DropLines',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDropLines)), 'ppdroplines' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'FirstSliceAngle',
              ( ['in'], c_int, 'pFirstSliceAngle' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'FirstSliceAngle',
              ( ['retval', 'out'], POINTER(c_int), 'pFirstSliceAngle' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'GapWidth',
              ( ['in'], c_int, 'pGapWidth' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'GapWidth',
              ( ['retval', 'out'], POINTER(c_int), 'pGapWidth' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'HasDropLines',
              ( ['in'], VARIANT_BOOL, 'pfHasDropLines' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'HasDropLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfHasDropLines' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'HasHiLoLines',
              ( ['in'], VARIANT_BOOL, 'pfHasHiLoLines' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'HasHiLoLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfHasHiLoLines' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'HasRadarAxisLabels',
              ( ['in'], VARIANT_BOOL, 'pfHasRadarAxisLabels' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'HasRadarAxisLabels',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfHasRadarAxisLabels' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'HasSeriesLines',
              ( ['in'], VARIANT_BOOL, 'pfHasSeriesLines' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'HasSeriesLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfHasSeriesLines' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'HasUpDownBars',
              ( ['in'], VARIANT_BOOL, 'pfHasUpDownBars' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'HasUpDownBars',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfHasUpDownBars' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'HiLoLines',
              ( ['retval', 'out'], POINTER(POINTER(IMsoHiLoLines)), 'ppHiLoLines' )),
    COMMETHOD([dispid(1610743829), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'pIndex' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'Overlap',
              ( ['in'], c_int, 'pOverlap' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'Overlap',
              ( ['retval', 'out'], POINTER(c_int), 'pOverlap' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'RadarAxisLabels',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppRadarAxisLabels' )),
    COMMETHOD([dispid(1610743833)], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppSeriesCollection' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'SeriesLines',
              ( ['retval', 'out'], POINTER(POINTER(IMsoSeriesLines)), 'ppSeriesLines' )),
    COMMETHOD([dispid(1610743835), 'hidden', 'propput'], HRESULT, 'SubType',
              ( ['in'], c_int, 'pSubType' )),
    COMMETHOD([dispid(1610743835), 'hidden', 'propget'], HRESULT, 'SubType',
              ( ['retval', 'out'], POINTER(c_int), 'pSubType' )),
    COMMETHOD([dispid(1610743837), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'ptype' )),
    COMMETHOD([dispid(1610743837), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'ptype' )),
    COMMETHOD([dispid(1610743839), 'propget'], HRESULT, 'UpBars',
              ( ['retval', 'out'], POINTER(POINTER(IMsoUpBars)), 'ppUpBars' )),
    COMMETHOD([dispid(1610743840), 'propput'], HRESULT, 'VaryByCategories',
              ( ['in'], VARIANT_BOOL, 'pfVaryByCategories' )),
    COMMETHOD([dispid(1610743840), 'propget'], HRESULT, 'VaryByCategories',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfVaryByCategories' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'SizeRepresents',
              ( ['retval', 'out'], POINTER(XlSizeRepresents), 'pXlSizeRepresents' )),
    COMMETHOD([dispid(1610743842), 'propput'], HRESULT, 'SizeRepresents',
              ( ['in'], XlSizeRepresents, 'pXlSizeRepresents' )),
    COMMETHOD([dispid(1610743844), 'propput'], HRESULT, 'BubbleScale',
              ( ['in'], c_int, 'pbubblescale' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'BubbleScale',
              ( ['retval', 'out'], POINTER(c_int), 'pbubblescale' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'ShowNegativeBubbles',
              ( ['in'], VARIANT_BOOL, 'pfShowNegativeBubbles' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'ShowNegativeBubbles',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfShowNegativeBubbles' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'SplitType',
              ( ['in'], XlChartSplitType, 'pChartSplitType' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'SplitType',
              ( ['retval', 'out'], POINTER(XlChartSplitType), 'pChartSplitType' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'SplitValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'pSplitValue' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'SplitValue',
              ( ['in'], VARIANT, 'pSplitValue' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'SecondPlotSize',
              ( ['retval', 'out'], POINTER(c_int), 'pSecondPlotSize' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'SecondPlotSize',
              ( ['in'], c_int, 'pSecondPlotSize' )),
    COMMETHOD([dispid(1610743854), 'propget'], HRESULT, 'Has3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1610743854), 'propput'], HRESULT, 'Has3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IMsoChartGroup implementation
##class IMsoChartGroup_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    def _get(self):
##        '-no docstring-'
##        #return ptype
##    def _set(self, ptype):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pfHasSeriesLines
##    def _set(self, pfHasSeriesLines):
##        '-no docstring-'
##    HasSeriesLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pDoughnutHoleSize
##    def _set(self, pDoughnutHoleSize):
##        '-no docstring-'
##    DoughnutHoleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pSecondPlotSize
##    def _set(self, pSecondPlotSize):
##        '-no docstring-'
##    SecondPlotSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RadarAxisLabels(self):
##        '-no docstring-'
##        #return ppRadarAxisLabels
##
##    def _get(self):
##        '-no docstring-'
##        #return piGroup
##    def _set(self, piGroup):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfHasRadarAxisLabels
##    def _set(self, pfHasRadarAxisLabels):
##        '-no docstring-'
##    HasRadarAxisLabels = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SeriesLines(self):
##        '-no docstring-'
##        #return ppSeriesLines
##
##    def _get(self):
##        '-no docstring-'
##        #return pfHasDropLines
##    def _set(self, pfHasDropLines):
##        '-no docstring-'
##    HasDropLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pSubType
##    def _set(self, pSubType):
##        '-no docstring-'
##    SubType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfHasHiLoLines
##    def _set(self, pfHasHiLoLines):
##        '-no docstring-'
##    HasHiLoLines = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DropLines(self):
##        '-no docstring-'
##        #return ppdroplines
##
##    def _get(self):
##        '-no docstring-'
##        #return pChartSplitType
##    def _set(self, pChartSplitType):
##        '-no docstring-'
##    SplitType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfShowNegativeBubbles
##    def _set(self, pfShowNegativeBubbles):
##        '-no docstring-'
##    ShowNegativeBubbles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfHasUpDownBars
##    def _set(self, pfHasUpDownBars):
##        '-no docstring-'
##    HasUpDownBars = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfVaryByCategories
##    def _set(self, pfVaryByCategories):
##        '-no docstring-'
##    VaryByCategories = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pOverlap
##    def _set(self, pOverlap):
##        '-no docstring-'
##    Overlap = property(_get, _set, doc = _set.__doc__)
##
##    def SeriesCollection(self, Index):
##        '-no docstring-'
##        #return ppSeriesCollection
##
##    def _get(self):
##        '-no docstring-'
##        #return pFirstSliceAngle
##    def _set(self, pFirstSliceAngle):
##        '-no docstring-'
##    FirstSliceAngle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DownBars(self):
##        '-no docstring-'
##        #return ppdownbars
##
##    @property
##    def UpBars(self):
##        '-no docstring-'
##        #return ppUpBars
##
##    @property
##    def HiLoLines(self):
##        '-no docstring-'
##        #return ppHiLoLines
##
##    def _get(self):
##        '-no docstring-'
##        #return pSplitValue
##    def _set(self, pSplitValue):
##        '-no docstring-'
##    SplitValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return pIndex
##
##    def _get(self):
##        '-no docstring-'
##        #return pGapWidth
##    def _set(self, pGapWidth):
##        '-no docstring-'
##    GapWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbubblescale
##    def _set(self, pbubblescale):
##        '-no docstring-'
##    BubbleScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pXlSizeRepresents
##    def _set(self, pXlSizeRepresents):
##        '-no docstring-'
##    SizeRepresents = property(_get, _set, doc = _set.__doc__)
##

class Permission(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0376-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Permission._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(UserPermission)), 'UserPerm' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'EnableTrustedBrowser',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Enable' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'EnableTrustedBrowser',
              ( ['in'], VARIANT_BOOL, 'Enable' )),
    COMMETHOD([dispid(3)], HRESULT, 'Add',
              ( ['in'], BSTR, 'UserId' ),
              ( ['in', 'optional'], VARIANT, 'Permission' ),
              ( ['in', 'optional'], VARIANT, 'ExpirationDate' ),
              ( ['retval', 'out'], POINTER(POINTER(UserPermission)), 'UserPerm' )),
    COMMETHOD([dispid(4)], HRESULT, 'ApplyPolicy',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(6)], HRESULT, 'RemoveAll'),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Enabled' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'Enabled' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'RequestPermissionURL',
              ( ['retval', 'out'], POINTER(BSTR), 'Contact' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'RequestPermissionURL',
              ( ['in'], BSTR, 'Contact' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'PolicyName',
              ( ['retval', 'out'], POINTER(BSTR), 'PolicyName' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'PolicyDescription',
              ( ['retval', 'out'], POINTER(BSTR), 'PolicyDescription' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'StoreLicenses',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Enabled' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'StoreLicenses',
              ( ['in'], VARIANT_BOOL, 'Enabled' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'DocumentAuthor',
              ( ['retval', 'out'], POINTER(BSTR), 'Author' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'DocumentAuthor',
              ( ['in'], BSTR, 'Author' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'PermissionFromPolicy',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'FromPolicy' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for Permission implementation
##class Permission_Impl(object):
##    def RemoveAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PermissionFromPolicy(self):
##        '-no docstring-'
##        #return FromPolicy
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def _get(self):
##        '-no docstring-'
##        #return Enabled
##    def _set(self, Enabled):
##        '-no docstring-'
##    StoreLicenses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Contact
##    def _set(self, Contact):
##        '-no docstring-'
##    RequestPermissionURL = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Enabled
##    def _set(self, Enabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def Add(self, UserId, Permission, ExpirationDate):
##        '-no docstring-'
##        #return UserPerm
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return UserPerm
##
##    def ApplyPolicy(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Author
##    def _set(self, Author):
##        '-no docstring-'
##    DocumentAuthor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Enable
##    def _set(self, Enable):
##        '-no docstring-'
##    EnableTrustedBrowser = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PolicyDescription(self):
##        '-no docstring-'
##        #return PolicyDescription
##
##    @property
##    def PolicyName(self):
##        '-no docstring-'
##        #return PolicyName
##

class DiagramNodes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C036E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IMsoDiagram._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Nodes',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNodes)), 'Nodes' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoDiagramType), 'Type' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'AutoLayout',
              ( ['retval', 'out'], POINTER(MsoTriState), 'AutoLayout' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'AutoLayout',
              ( ['in'], MsoTriState, 'AutoLayout' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Reverse',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Reverse' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Reverse',
              ( ['in'], MsoTriState, 'Reverse' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'AutoFormat',
              ( ['retval', 'out'], POINTER(MsoTriState), 'AutoFormat' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'AutoFormat',
              ( ['in'], MsoTriState, 'AutoFormat' )),
    COMMETHOD([dispid(10)], HRESULT, 'Convert',
              ( ['in'], MsoDiagramType, 'Type' )),
    COMMETHOD([dispid(11)], HRESULT, 'FitText'),
]
################################################################
## code template for IMsoDiagram implementation
##class IMsoDiagram_Impl(object):
##    def Convert(self, Type):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return Nodes
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoFormat
##    def _set(self, AutoFormat):
##        '-no docstring-'
##    AutoFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Reverse
##    def _set(self, Reverse):
##        '-no docstring-'
##    Reverse = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoLayout
##    def _set(self, AutoLayout):
##        '-no docstring-'
##    AutoLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def FitText(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##


# values for enumeration 'XlPivotFieldOrientation'
xlColumnField = 2
xlDataField = 4
xlHidden = 0
xlPageField = 3
xlRowField = 1
XlPivotFieldOrientation = c_int # enum
PictureFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementBrightness',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementContrast',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Brightness',
              ( ['retval', 'out'], POINTER(c_float), 'Brightness' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'Brightness' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ColorType',
              ( ['retval', 'out'], POINTER(MsoPictureColorType), 'ColorType' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'ColorType',
              ( ['in'], MsoPictureColorType, 'ColorType' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Contrast',
              ( ['retval', 'out'], POINTER(c_float), 'Contrast' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'Contrast',
              ( ['in'], c_float, 'Contrast' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'CropBottom',
              ( ['retval', 'out'], POINTER(c_float), 'CropBottom' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'CropBottom',
              ( ['in'], c_float, 'CropBottom' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'CropLeft',
              ( ['retval', 'out'], POINTER(c_float), 'CropLeft' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'CropLeft',
              ( ['in'], c_float, 'CropLeft' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CropRight',
              ( ['retval', 'out'], POINTER(c_float), 'CropRight' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'CropRight',
              ( ['in'], c_float, 'CropRight' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'CropTop',
              ( ['retval', 'out'], POINTER(c_float), 'CropTop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'CropTop',
              ( ['in'], c_float, 'CropTop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'TransparencyColor',
              ( ['retval', 'out'], POINTER(MsoRGBType), 'TransparencyColor' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'TransparencyColor',
              ( ['in'], MsoRGBType, 'TransparencyColor' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'TransparentBackground',
              ( ['retval', 'out'], POINTER(MsoTriState), 'TransparentBackground' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'TransparentBackground',
              ( ['in'], MsoTriState, 'TransparentBackground' )),
]
################################################################
## code template for PictureFormat implementation
##class PictureFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Contrast
##    def _set(self, Contrast):
##        '-no docstring-'
##    Contrast = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementBrightness(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return CropRight
##    def _set(self, CropRight):
##        '-no docstring-'
##    CropRight = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementContrast(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return TransparencyColor
##    def _set(self, TransparencyColor):
##        '-no docstring-'
##    TransparencyColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return CropLeft
##    def _set(self, CropLeft):
##        '-no docstring-'
##    CropLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TransparentBackground
##    def _set(self, TransparentBackground):
##        '-no docstring-'
##    TransparentBackground = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropTop
##    def _set(self, CropTop):
##        '-no docstring-'
##    CropTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ColorType
##    def _set(self, ColorType):
##        '-no docstring-'
##    ColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Brightness
##    def _set(self, Brightness):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropBottom
##    def _set(self, CropBottom):
##        '-no docstring-'
##    CropBottom = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoReflectionType'
msoReflectionTypeMixed = -2
msoReflectionTypeNone = 0
msoReflectionType1 = 1
msoReflectionType2 = 2
msoReflectionType3 = 3
msoReflectionType4 = 4
msoReflectionType5 = 5
msoReflectionType6 = 6
msoReflectionType7 = 7
msoReflectionType8 = 8
msoReflectionType9 = 9
MsoReflectionType = c_int # enum
ReflectionFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoReflectionType), 'Type' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoReflectionType, 'Type' )),
]
################################################################
## code template for ReflectionFormat implementation
##class ReflectionFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##

Adjustments._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(c_float), 'Val' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'Val' )),
]
################################################################
## code template for Adjustments implementation
##class Adjustments_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return Val
##    def _set(self, Index, Val):
##        '-no docstring-'
##    Item = property(_get, _set, doc = _set.__doc__)
##

class PropertyTests(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0334-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
PropertyTests._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(PropertyTest)), 'ppIDocProp' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pc' )),
    COMMETHOD([dispid(5)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], MsoCondition, 'Condition' ),
              ( ['in', 'optional'], VARIANT, 'Value' ),
              ( ['in', 'optional'], VARIANT, 'SecondValue' ),
              ( ['in', 'optional'], MsoConnector, 'Connector', 1 )),
    COMMETHOD([dispid(6)], HRESULT, 'Remove',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for PropertyTests implementation
##class PropertyTests_Impl(object):
##    def Remove(self, Index):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pc
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Add(self, Name, Condition, Value, SecondValue, Connector):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Item(self, Index, lcid):
##        '-no docstring-'
##        #return ppIDocProp
##

class FileSearch(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0332-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
class SearchScopes(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0366-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
class SearchFolders(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C036A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
FileSearch._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'SearchSubFolders',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'SearchSubFoldersRetVal' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'SearchSubFolders',
              ( ['in'], VARIANT_BOOL, 'SearchSubFoldersRetVal' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'MatchTextExactly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'MatchTextRetVal' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'MatchTextExactly',
              ( ['in'], VARIANT_BOOL, 'MatchTextRetVal' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'MatchAllWordForms',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'MatchAllWordFormsRetVal' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'MatchAllWordForms',
              ( ['in'], VARIANT_BOOL, 'MatchAllWordFormsRetVal' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'FileName',
              ( ['retval', 'out'], POINTER(BSTR), 'FileNameRetVal' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'FileName',
              ( ['in'], BSTR, 'FileNameRetVal' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'FileType',
              ( ['retval', 'out'], POINTER(MsoFileType), 'FileTypeRetVal' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'FileType',
              ( ['in'], MsoFileType, 'FileTypeRetVal' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'LastModified',
              ( ['retval', 'out'], POINTER(MsoLastModified), 'LastModifiedRetVal' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'LastModified',
              ( ['in'], MsoLastModified, 'LastModifiedRetVal' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'TextOrProperty',
              ( ['retval', 'out'], POINTER(BSTR), 'TextOrProperty' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'TextOrProperty',
              ( ['in'], BSTR, 'TextOrProperty' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'LookIn',
              ( ['retval', 'out'], POINTER(BSTR), 'LookInRetVal' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'LookIn',
              ( ['in'], BSTR, 'LookInRetVal' )),
    COMMETHOD([dispid(9)], HRESULT, 'Execute',
              ( ['in', 'optional'], MsoSortBy, 'SortBy', 1 ),
              ( ['in', 'optional'], MsoSortOrder, 'SortOrder', 1 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'AlwaysAccurate', True ),
              ( ['retval', 'out'], POINTER(c_int), 'pRet' )),
    COMMETHOD([dispid(10)], HRESULT, 'NewSearch'),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'FoundFiles',
              ( ['retval', 'out'], POINTER(POINTER(FoundFiles)), 'FoundFilesRet' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'PropertyTests',
              ( ['retval', 'out'], POINTER(POINTER(PropertyTests)), 'PropTestsRet' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'SearchScopes',
              ( ['retval', 'out'], POINTER(POINTER(SearchScopes)), 'SearchScopesRet' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'SearchFolders',
              ( ['retval', 'out'], POINTER(POINTER(SearchFolders)), 'SearchFoldersRet' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'FileTypes',
              ( ['retval', 'out'], POINTER(POINTER(FileTypes)), 'FileTypesRet' )),
    COMMETHOD([dispid(17)], HRESULT, 'RefreshScopes'),
]
################################################################
## code template for FileSearch implementation
##class FileSearch_Impl(object):
##    def RefreshScopes(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PropertyTests(self):
##        '-no docstring-'
##        #return PropTestsRet
##
##    def _get(self):
##        '-no docstring-'
##        #return LookInRetVal
##    def _set(self, LookInRetVal):
##        '-no docstring-'
##    LookIn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FileTypes(self):
##        '-no docstring-'
##        #return FileTypesRet
##
##    @property
##    def SearchScopes(self):
##        '-no docstring-'
##        #return SearchScopesRet
##
##    def _get(self):
##        '-no docstring-'
##        #return TextOrProperty
##    def _set(self, TextOrProperty):
##        '-no docstring-'
##    TextOrProperty = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SearchFolders(self):
##        '-no docstring-'
##        #return SearchFoldersRet
##
##    def _get(self):
##        '-no docstring-'
##        #return FileNameRetVal
##    def _set(self, FileNameRetVal):
##        '-no docstring-'
##    FileName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FileTypeRetVal
##    def _set(self, FileTypeRetVal):
##        '-no docstring-'
##    FileType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LastModifiedRetVal
##    def _set(self, LastModifiedRetVal):
##        '-no docstring-'
##    LastModified = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MatchAllWordFormsRetVal
##    def _set(self, MatchAllWordFormsRetVal):
##        '-no docstring-'
##    MatchAllWordForms = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FoundFiles(self):
##        '-no docstring-'
##        #return FoundFilesRet
##
##    def NewSearch(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return MatchTextRetVal
##    def _set(self, MatchTextRetVal):
##        '-no docstring-'
##    MatchTextExactly = property(_get, _set, doc = _set.__doc__)
##
##    def Execute(self, SortBy, SortOrder, AlwaysAccurate):
##        '-no docstring-'
##        #return pRet
##
##    def _get(self):
##        '-no docstring-'
##        #return SearchSubFoldersRetVal
##    def _set(self, SearchSubFoldersRetVal):
##        '-no docstring-'
##    SearchSubFolders = property(_get, _set, doc = _set.__doc__)
##

CustomXMLNode._methods_ = [
    COMMETHOD([dispid(1610809344), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispParent' )),
    COMMETHOD([dispid(1610809345), 'propget'], HRESULT, 'Attributes',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNodes)), 'ppAttributes' )),
    COMMETHOD([dispid(1610809346), 'propget'], HRESULT, 'BaseName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrBaseName' )),
    COMMETHOD([dispid(1610809347), 'propget'], HRESULT, 'ChildNodes',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNodes)), 'ppChildNodes' )),
    COMMETHOD([dispid(1610809348), 'propget'], HRESULT, 'FirstChild',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppFirstChild' )),
    COMMETHOD([dispid(1610809349), 'propget'], HRESULT, 'LastChild',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppLastChild' )),
    COMMETHOD([dispid(1610809350), 'propget'], HRESULT, 'NamespaceURI',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNamespaceURI' )),
    COMMETHOD([dispid(1610809351), 'propget'], HRESULT, 'NextSibling',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppNextSibling' )),
    COMMETHOD([dispid(1610809352), 'propget'], HRESULT, 'NodeType',
              ( ['retval', 'out'], POINTER(MsoCustomXMLNodeType), 'pNodeType' )),
    COMMETHOD([dispid(1610809353), 'propget'], HRESULT, 'NodeValue',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrNodeValue' )),
    COMMETHOD([dispid(1610809353), 'propput'], HRESULT, 'NodeValue',
              ( ['in'], BSTR, 'pbstrNodeValue' )),
    COMMETHOD([dispid(1610809355), 'propget'], HRESULT, 'OwnerDocument',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispDoc' )),
    COMMETHOD([dispid(1610809356), 'propget'], HRESULT, 'OwnerPart',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLPart)), 'ppOwnerPart' )),
    COMMETHOD([dispid(1610809357), 'propget'], HRESULT, 'PreviousSibling',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppPreviousSibling' )),
    COMMETHOD([dispid(1610809358), 'propget'], HRESULT, 'ParentNode',
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppParentNode' )),
    COMMETHOD([dispid(1610809359), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrText' )),
    COMMETHOD([dispid(1610809359), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstrText' )),
    COMMETHOD([dispid(1610809361), 'propget'], HRESULT, 'XPath',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrXPath' )),
    COMMETHOD([dispid(1610809362), 'propget'], HRESULT, 'XML',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrXML' )),
    COMMETHOD([dispid(1610809363)], HRESULT, 'AppendChildNode',
              ( ['in', 'optional'], BSTR, 'Name', '' ),
              ( ['in', 'optional'], BSTR, 'NamespaceURI', '' ),
              ( ['in', 'optional'], MsoCustomXMLNodeType, 'NodeType', 1 ),
              ( ['in', 'optional'], BSTR, 'NodeValue', '' )),
    COMMETHOD([dispid(1610809364)], HRESULT, 'AppendChildSubtree',
              ( ['in'], BSTR, 'XML' )),
    COMMETHOD([dispid(1610809365)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610809366)], HRESULT, 'HasChildNodes',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfHasChildNodes' )),
    COMMETHOD([dispid(1610809367)], HRESULT, 'InsertNodeBefore',
              ( ['in', 'optional'], BSTR, 'Name', '' ),
              ( ['in', 'optional'], BSTR, 'NamespaceURI', '' ),
              ( ['in', 'optional'], MsoCustomXMLNodeType, 'NodeType', 1 ),
              ( ['in', 'optional'], BSTR, 'NodeValue', '' ),
              ( ['in', 'optional'], POINTER(CustomXMLNode), 'NextSibling', 0 )),
    COMMETHOD([dispid(1610809368)], HRESULT, 'InsertSubtreeBefore',
              ( ['in'], BSTR, 'XML' ),
              ( ['in', 'optional'], POINTER(CustomXMLNode), 'NextSibling', 0 )),
    COMMETHOD([dispid(1610809369)], HRESULT, 'RemoveChild',
              ( ['in'], POINTER(CustomXMLNode), 'Child' )),
    COMMETHOD([dispid(1610809370)], HRESULT, 'ReplaceChildNode',
              ( ['in'], POINTER(CustomXMLNode), 'OldNode' ),
              ( ['in', 'optional'], BSTR, 'Name', '' ),
              ( ['in', 'optional'], BSTR, 'NamespaceURI', '' ),
              ( ['in', 'optional'], MsoCustomXMLNodeType, 'NodeType', 1 ),
              ( ['in', 'optional'], BSTR, 'NodeValue', '' )),
    COMMETHOD([dispid(1610809371)], HRESULT, 'ReplaceChildSubtree',
              ( ['in'], BSTR, 'XML' ),
              ( ['in'], POINTER(CustomXMLNode), 'OldNode' )),
    COMMETHOD([dispid(1610809372)], HRESULT, 'SelectNodes',
              ( ['in'], BSTR, 'XPath' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNodes)), 'ppNodes' )),
    COMMETHOD([dispid(1610809373)], HRESULT, 'SelectSingleNode',
              ( ['in'], BSTR, 'XPath' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomXMLNode)), 'ppNode' )),
]
################################################################
## code template for CustomXMLNode implementation
##class CustomXMLNode_Impl(object):
##    @property
##    def BaseName(self):
##        '-no docstring-'
##        #return pbstrBaseName
##
##    def ReplaceChildNode(self, OldNode, Name, NamespaceURI, NodeType, NodeValue):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OwnerDocument(self):
##        '-no docstring-'
##        #return ppdispDoc
##
##    @property
##    def LastChild(self):
##        '-no docstring-'
##        #return ppLastChild
##
##    @property
##    def OwnerPart(self):
##        '-no docstring-'
##        #return ppOwnerPart
##
##    @property
##    def ChildNodes(self):
##        '-no docstring-'
##        #return ppChildNodes
##
##    @property
##    def NodeType(self):
##        '-no docstring-'
##        #return pNodeType
##
##    def InsertSubtreeBefore(self, XML, NextSibling):
##        '-no docstring-'
##        #return 
##
##    @property
##    def FirstChild(self):
##        '-no docstring-'
##        #return ppFirstChild
##
##    def RemoveChild(self, Child):
##        '-no docstring-'
##        #return 
##
##    def ReplaceChildSubtree(self, XML, OldNode):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Attributes(self):
##        '-no docstring-'
##        #return ppAttributes
##
##    def AppendChildSubtree(self, XML):
##        '-no docstring-'
##        #return 
##
##    @property
##    def NamespaceURI(self):
##        '-no docstring-'
##        #return pbstrNamespaceURI
##
##    @property
##    def XPath(self):
##        '-no docstring-'
##        #return pbstrXPath
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrNodeValue
##    def _set(self, pbstrNodeValue):
##        '-no docstring-'
##    NodeValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NextSibling(self):
##        '-no docstring-'
##        #return ppNextSibling
##
##    def SelectSingleNode(self, XPath):
##        '-no docstring-'
##        #return ppNode
##
##    @property
##    def ParentNode(self):
##        '-no docstring-'
##        #return ppParentNode
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppdispParent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrText
##    def _set(self, pbstrText):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def XML(self):
##        '-no docstring-'
##        #return pbstrXML
##
##    def InsertNodeBefore(self, Name, NamespaceURI, NodeType, NodeValue, NextSibling):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PreviousSibling(self):
##        '-no docstring-'
##        #return ppPreviousSibling
##
##    def AppendChildNode(self, Name, NamespaceURI, NodeType, NodeValue):
##        '-no docstring-'
##        #return 
##
##    def HasChildNodes(self):
##        '-no docstring-'
##        #return pfHasChildNodes
##
##    def SelectNodes(self, XPath):
##        '-no docstring-'
##        #return ppNodes
##

IMsoChartData._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Workbook',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppdispWorkbook' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'Activate'),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'IsLinked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfIsLinked' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'BreakLink'),
]
################################################################
## code template for IMsoChartData implementation
##class IMsoChartData_Impl(object):
##    @property
##    def IsLinked(self):
##        '-no docstring-'
##        #return pfIsLinked
##
##    def BreakLink(self):
##        '-no docstring-'
##        #return 
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Workbook(self):
##        '-no docstring-'
##        #return ppdispWorkbook
##

DiagramNodes._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppdn' )),
    COMMETHOD([dispid(10)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'iDiagramNodes' )),
]
################################################################
## code template for DiagramNodes implementation
##class DiagramNodes_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iDiagramNodes
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppdn
##

class SearchScope(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0367-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
SearchScope._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoSearchIn), 'MsoSearchInRetVal' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ScopeFolder',
              ( ['retval', 'out'], POINTER(POINTER(ScopeFolder)), 'ScopeFolderRet' )),
]
################################################################
## code template for SearchScope implementation
##class SearchScope_Impl(object):
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return MsoSearchInRetVal
##
##    @property
##    def ScopeFolder(self):
##        '-no docstring-'
##        #return ScopeFolderRet
##


# values for enumeration 'MsoRelativeNodePosition'
msoBeforeNode = 1
msoAfterNode = 2
msoBeforeFirstSibling = 3
msoAfterLastSibling = 4
MsoRelativeNodePosition = c_int # enum

# values for enumeration 'MsoDiagramNodeType'
msoDiagramNode = 1
msoDiagramAssistant = 2
MsoDiagramNodeType = c_int # enum
class DiagramNodeChildren(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C036F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
DiagramNode._methods_ = [
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], MsoRelativeNodePosition, 'Pos', 2 ),
              ( ['in', 'optional'], MsoDiagramNodeType, 'NodeType', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'NewNode' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12)], HRESULT, 'MoveNode',
              ( ['in'], POINTER(DiagramNode), 'TargetNode' ),
              ( ['in'], MsoRelativeNodePosition, 'Pos' )),
    COMMETHOD([dispid(13)], HRESULT, 'ReplaceNode',
              ( ['in'], POINTER(DiagramNode), 'TargetNode' )),
    COMMETHOD([dispid(14)], HRESULT, 'SwapNode',
              ( ['in'], POINTER(DiagramNode), 'TargetNode' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'SwapChildren', True )),
    COMMETHOD([dispid(15)], HRESULT, 'CloneNode',
              ( ['in'], VARIANT_BOOL, 'CopyChildren' ),
              ( ['in'], POINTER(DiagramNode), 'TargetNode' ),
              ( ['in', 'optional'], MsoRelativeNodePosition, 'Pos', 2 ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'Node' )),
    COMMETHOD([dispid(16)], HRESULT, 'TransferChildren',
              ( ['in'], POINTER(DiagramNode), 'ReceivingNode' )),
    COMMETHOD([dispid(17)], HRESULT, 'NextNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'NextNode' )),
    COMMETHOD([dispid(18)], HRESULT, 'PrevNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'PrevNode' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Children',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNodeChildren)), 'Children' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Root',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'Root' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Diagram',
              ( ['retval', 'out'], POINTER(POINTER(IMsoDiagram)), 'Diagram' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Layout',
              ( ['retval', 'out'], POINTER(MsoOrgChartLayoutType), 'Type' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Layout',
              ( ['in'], MsoOrgChartLayoutType, 'Type' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'TextShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Shape' )),
]
################################################################
## code template for DiagramNode implementation
##class DiagramNode_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Layout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def CloneNode(self, CopyChildren, TargetNode, Pos):
##        '-no docstring-'
##        #return Node
##
##    @property
##    def Children(self):
##        '-no docstring-'
##        #return Children
##
##    @property
##    def Root(self):
##        '-no docstring-'
##        #return Root
##
##    @property
##    def TextShape(self):
##        '-no docstring-'
##        #return Shape
##
##    def PrevNode(self):
##        '-no docstring-'
##        #return PrevNode
##
##    def MoveNode(self, TargetNode, Pos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return Shape
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return Diagram
##
##    def TransferChildren(self, ReceivingNode):
##        '-no docstring-'
##        #return 
##
##    def ReplaceNode(self, TargetNode):
##        '-no docstring-'
##        #return 
##
##    def NextNode(self):
##        '-no docstring-'
##        #return NextNode
##
##    def AddNode(self, Pos, NodeType):
##        '-no docstring-'
##        #return NewNode
##
##    def SwapNode(self, TargetNode, SwapChildren):
##        '-no docstring-'
##        #return 
##

class TabStop2(_IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C03BB-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoTabStopType'
msoTabStopMixed = -2
msoTabStopLeft = 1
msoTabStopCenter = 2
msoTabStopRight = 3
msoTabStopDecimal = 4
MsoTabStopType = c_int # enum
TabStops2._methods_ = [
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(TabStop2)), 'TabStop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], MsoTabStopType, 'Type' ),
              ( ['in'], c_float, 'Position' ),
              ( ['retval', 'out'], POINTER(POINTER(TabStop2)), 'TabStop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'DefaultSpacing',
              ( ['retval', 'out'], POINTER(c_float), 'Spacing' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'DefaultSpacing',
              ( ['in'], c_float, 'Spacing' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
]
################################################################
## code template for TabStops2 implementation
##class TabStops2_Impl(object):
##    def Add(self, Type, Position):
##        '-no docstring-'
##        #return TabStop
##
##    def _get(self):
##        '-no docstring-'
##        #return Spacing
##    def _set(self, Spacing):
##        '-no docstring-'
##    DefaultSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return TabStop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##


# values for enumeration 'MsoTextFontAlign'
msoFontAlignMixed = -2
msoFontAlignAuto = 0
msoFontAlignTop = 1
msoFontAlignCenter = 2
msoFontAlignBaseline = 3
msoFontAlignBottom = 4
MsoTextFontAlign = c_int # enum

# values for enumeration 'MsoColorType'
msoColorTypeMixed = -2
msoColorTypeRGB = 1
msoColorTypeScheme = 2
msoColorTypeCMYK = 3
msoColorTypeCMS = 4
msoColorTypeInk = 5
MsoColorType = c_int # enum

# values for enumeration 'MsoCalloutDropType'
msoCalloutDropMixed = -2
msoCalloutDropCustom = 1
msoCalloutDropTop = 2
msoCalloutDropCenter = 3
msoCalloutDropBottom = 4
MsoCalloutDropType = c_int # enum
TabStop2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2)], HRESULT, 'Clear'),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_float), 'Position' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Position',
              ( ['in'], c_float, 'Position' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoTabStopType), 'Type' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoTabStopType, 'Type' )),
]
################################################################
## code template for TabStop2 implementation
##class TabStop2_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoCalloutAngleType'
msoCalloutAngleMixed = -2
msoCalloutAngleAutomatic = 1
msoCalloutAngle30 = 2
msoCalloutAngle45 = 3
msoCalloutAngle60 = 4
msoCalloutAngle90 = 5
MsoCalloutAngleType = c_int # enum
IMsoWalls._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(IMsoBorder)), 'ppborder' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(IMsoInterior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'ppfill' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'pvar' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste'),
    COMMETHOD([dispid(162), 'propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(162), 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], VARIANT, 'pvar' )),
    COMMETHOD([dispid(2419), 'propget'], HRESULT, 'Thickness',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2419), 'propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(IMsoChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
]
################################################################
## code template for IMsoWalls implementation
##class IMsoWalls_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pvar
##    def _set(self, pvar):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvar
##    def _set(self, pvar):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return pvar
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppfill
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##

TextEffectFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'ToggleVerticalText'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Alignment',
              ( ['retval', 'out'], POINTER(MsoTextEffectAlignment), 'Alignment' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Alignment',
              ( ['in'], MsoTextEffectAlignment, 'Alignment' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'FontBold',
              ( ['retval', 'out'], POINTER(MsoTriState), 'FontBold' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'FontBold',
              ( ['in'], MsoTriState, 'FontBold' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'FontItalic',
              ( ['retval', 'out'], POINTER(MsoTriState), 'FontItalic' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'FontItalic',
              ( ['in'], MsoTriState, 'FontItalic' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FontName',
              ( ['retval', 'out'], POINTER(BSTR), 'FontName' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'FontName',
              ( ['in'], BSTR, 'FontName' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'FontSize',
              ( ['retval', 'out'], POINTER(c_float), 'FontSize' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'FontSize',
              ( ['in'], c_float, 'FontSize' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'KernedPairs',
              ( ['retval', 'out'], POINTER(MsoTriState), 'KernedPairs' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'KernedPairs',
              ( ['in'], MsoTriState, 'KernedPairs' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'NormalizedHeight',
              ( ['retval', 'out'], POINTER(MsoTriState), 'NormalizedHeight' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'NormalizedHeight',
              ( ['in'], MsoTriState, 'NormalizedHeight' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetShape',
              ( ['retval', 'out'], POINTER(MsoPresetTextEffectShape), 'PresetShape' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetShape',
              ( ['in'], MsoPresetTextEffectShape, 'PresetShape' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTextEffect',
              ( ['retval', 'out'], POINTER(MsoPresetTextEffect), 'Preset' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'PresetTextEffect',
              ( ['in'], MsoPresetTextEffect, 'Preset' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotatedChars',
              ( ['retval', 'out'], POINTER(MsoTriState), 'RotatedChars' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotatedChars',
              ( ['in'], MsoTriState, 'RotatedChars' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Tracking',
              ( ['retval', 'out'], POINTER(c_float), 'Tracking' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Tracking',
              ( ['in'], c_float, 'Tracking' )),
]
################################################################
## code template for TextEffectFormat implementation
##class TextEffectFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RotatedChars
##    def _set(self, RotatedChars):
##        '-no docstring-'
##    RotatedChars = property(_get, _set, doc = _set.__doc__)
##
##    def ToggleVerticalText(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return FontName
##    def _set(self, FontName):
##        '-no docstring-'
##    FontName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Preset
##    def _set(self, Preset):
##        '-no docstring-'
##    PresetTextEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Text
##    def _set(self, Text):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return FontItalic
##    def _set(self, FontItalic):
##        '-no docstring-'
##    FontItalic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontBold
##    def _set(self, FontBold):
##        '-no docstring-'
##    FontBold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Tracking
##    def _set(self, Tracking):
##        '-no docstring-'
##    Tracking = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NormalizedHeight
##    def _set(self, NormalizedHeight):
##        '-no docstring-'
##    NormalizedHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Alignment
##    def _set(self, Alignment):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return KernedPairs
##    def _set(self, KernedPairs):
##        '-no docstring-'
##    KernedPairs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontSize
##    def _set(self, FontSize):
##        '-no docstring-'
##    FontSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetShape
##    def _set(self, PresetShape):
##        '-no docstring-'
##    PresetShape = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoShadowType'
msoShadowMixed = -2
msoShadow1 = 1
msoShadow2 = 2
msoShadow3 = 3
msoShadow4 = 4
msoShadow5 = 5
msoShadow6 = 6
msoShadow7 = 7
msoShadow8 = 8
msoShadow9 = 9
msoShadow10 = 10
msoShadow11 = 11
msoShadow12 = 12
msoShadow13 = 13
msoShadow14 = 14
msoShadow15 = 15
msoShadow16 = 16
msoShadow17 = 17
msoShadow18 = 18
msoShadow19 = 19
msoShadow20 = 20
msoShadow21 = 21
msoShadow22 = 22
msoShadow23 = 23
msoShadow24 = 24
msoShadow25 = 25
msoShadow26 = 26
msoShadow27 = 27
msoShadow28 = 28
msoShadow29 = 29
msoShadow30 = 30
msoShadow31 = 31
msoShadow32 = 32
msoShadow33 = 33
msoShadow34 = 34
msoShadow35 = 35
msoShadow36 = 36
msoShadow37 = 37
msoShadow38 = 38
msoShadow39 = 39
msoShadow40 = 40
msoShadow41 = 41
msoShadow42 = 42
msoShadow43 = 43
MsoShadowType = c_int # enum
ShadowFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementOffsetX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementOffsetY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Obscured',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Obscured' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Obscured',
              ( ['in'], MsoTriState, 'Obscured' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'OffsetX',
              ( ['retval', 'out'], POINTER(c_float), 'OffsetX' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'OffsetX',
              ( ['in'], c_float, 'OffsetX' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'OffsetY',
              ( ['retval', 'out'], POINTER(c_float), 'OffsetY' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'OffsetY',
              ( ['in'], c_float, 'OffsetY' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Transparency',
              ( ['retval', 'out'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoShadowType), 'Type' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoShadowType, 'Type' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Visible' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Visible',
              ( ['in'], MsoTriState, 'Visible' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(MsoShadowStyle), 'ShadowStyle' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Style',
              ( ['in'], MsoShadowStyle, 'ShadowStyle' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Blur',
              ( ['retval', 'out'], POINTER(c_float), 'Blur' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Blur',
              ( ['in'], c_float, 'Blur' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(c_float), 'Size' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'Size' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotateWithShape',
              ( ['retval', 'out'], POINTER(MsoTriState), 'RotateWithShape' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotateWithShape',
              ( ['in'], MsoTriState, 'RotateWithShape' )),
]
################################################################
## code template for ShadowFormat implementation
##class ShadowFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return OffsetX
##    def _set(self, OffsetX):
##        '-no docstring-'
##    OffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return OffsetY
##    def _set(self, OffsetY):
##        '-no docstring-'
##    OffsetY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Size
##    def _set(self, Size):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return RotateWithShape
##    def _set(self, RotateWithShape):
##        '-no docstring-'
##    RotateWithShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShadowStyle
##    def _set(self, ShadowStyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Blur
##    def _set(self, Blur):
##        '-no docstring-'
##    Blur = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Obscured
##    def _set(self, Obscured):
##        '-no docstring-'
##    Obscured = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementOffsetX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementOffsetY(self, Increment):
##        '-no docstring-'
##        #return 
##

CalloutFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'AutomaticLength'),
    COMMETHOD([dispid(11)], HRESULT, 'CustomDrop',
              ( ['in'], c_float, 'Drop' )),
    COMMETHOD([dispid(12)], HRESULT, 'CustomLength',
              ( ['in'], c_float, 'Length' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetDrop',
              ( ['in'], MsoCalloutDropType, 'DropType' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Accent',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Accent' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Accent',
              ( ['in'], MsoTriState, 'Accent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Angle',
              ( ['retval', 'out'], POINTER(MsoCalloutAngleType), 'Angle' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Angle',
              ( ['in'], MsoCalloutAngleType, 'Angle' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'AutoAttach',
              ( ['retval', 'out'], POINTER(MsoTriState), 'AutoAttach' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'AutoAttach',
              ( ['in'], MsoTriState, 'AutoAttach' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'AutoLength',
              ( ['retval', 'out'], POINTER(MsoTriState), 'AutoLength' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(MsoTriState), 'Border' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Border',
              ( ['in'], MsoTriState, 'Border' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Drop',
              ( ['retval', 'out'], POINTER(c_float), 'Drop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'DropType',
              ( ['retval', 'out'], POINTER(MsoCalloutDropType), 'DropType' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Gap',
              ( ['retval', 'out'], POINTER(c_float), 'Gap' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Gap',
              ( ['in'], c_float, 'Gap' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Length',
              ( ['retval', 'out'], POINTER(c_float), 'Length' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoCalloutType), 'Type' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoCalloutType, 'Type' )),
]
################################################################
## code template for CalloutFormat implementation
##class CalloutFormat_Impl(object):
##    @property
##    def AutoLength(self):
##        '-no docstring-'
##        #return AutoLength
##
##    def CustomDrop(self, Drop):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Gap
##    def _set(self, Gap):
##        '-no docstring-'
##    Gap = property(_get, _set, doc = _set.__doc__)
##
##    def PresetDrop(self, DropType):
##        '-no docstring-'
##        #return 
##
##    def CustomLength(self, Length):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Drop(self):
##        '-no docstring-'
##        #return Drop
##
##    def _get(self):
##        '-no docstring-'
##        #return Border
##    def _set(self, Border):
##        '-no docstring-'
##    Border = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DropType(self):
##        '-no docstring-'
##        #return DropType
##
##    def _get(self):
##        '-no docstring-'
##        #return Accent
##    def _set(self, Accent):
##        '-no docstring-'
##    Accent = property(_get, _set, doc = _set.__doc__)
##
##    def AutomaticLength(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return Length
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoAttach
##    def _set(self, AutoAttach):
##        '-no docstring-'
##    AutoAttach = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Angle
##    def _set(self, Angle):
##        '-no docstring-'
##    Angle = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoFarEastLineBreakLanguageID'
MsoFarEastLineBreakLanguageJapanese = 1041
MsoFarEastLineBreakLanguageKorean = 1042
MsoFarEastLineBreakLanguageSimplifiedChinese = 2052
MsoFarEastLineBreakLanguageTraditionalChinese = 1028
MsoFarEastLineBreakLanguageID = c_int # enum
ColorFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'RGB',
              ( ['retval', 'out'], POINTER(MsoRGBType), 'RGB' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'RGB',
              ( ['in'], MsoRGBType, 'RGB' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'SchemeColor',
              ( ['retval', 'out'], POINTER(c_int), 'SchemeColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'SchemeColor',
              ( ['in'], c_int, 'SchemeColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(MsoColorType), 'Type' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(c_float), 'pValue' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'TintAndShade',
              ( ['in'], c_float, 'pValue' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ObjectThemeColor',
              ( ['retval', 'out'], POINTER(MsoThemeColorIndex), 'ObjectThemeColor' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'ObjectThemeColor',
              ( ['in'], MsoThemeColorIndex, 'ObjectThemeColor' )),
]
################################################################
## code template for ColorFormat implementation
##class ColorFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return SchemeColor
##    def _set(self, SchemeColor):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return RGB
##    def _set(self, RGB):
##        '-no docstring-'
##    RGB = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ObjectThemeColor
##    def _set(self, ObjectThemeColor):
##        '-no docstring-'
##    ObjectThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pValue
##    def _set(self, pValue):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##

COMAddIn._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'RetValue' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ProgId',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Guid',
              ( ['retval', 'out'], POINTER(BSTR), 'RetValue' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Connect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RetValue' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Connect',
              ( ['in'], VARIANT_BOOL, 'RetValue' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Object',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RetValue' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Object',
              ( ['in'], POINTER(IDispatch), 'RetValue' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'retval' )),
]
################################################################
## code template for COMAddIn implementation
##class COMAddIn_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Guid(self):
##        '-no docstring-'
##        #return RetValue
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Object = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProgId(self):
##        '-no docstring-'
##        #return RetValue
##
##    def _get(self):
##        '-no docstring-'
##        #return RetValue
##    def _set(self, RetValue):
##        '-no docstring-'
##    Connect = property(_get, _set, doc = _set.__doc__)
##

DiagramNodeChildren._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'Node' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], VARIANT, 'Index', -1 ),
              ( ['in', 'optional'], MsoDiagramNodeType, 'NodeType', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'NewNode' )),
    COMMETHOD([dispid(11)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'iDiagramNodes' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FirstChild',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'First' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'LastChild',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'Last' )),
]
################################################################
## code template for DiagramNodeChildren implementation
##class DiagramNodeChildren_Impl(object):
##    @property
##    def FirstChild(self):
##        '-no docstring-'
##        #return First
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Node
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iDiagramNodes
##
##    @property
##    def LastChild(self):
##        '-no docstring-'
##        #return Last
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    def AddNode(self, Index, NodeType):
##        '-no docstring-'
##        #return NewNode
##

SearchScopes._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SearchScope)), 'SearchScopeRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'iCountRetVal' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for SearchScopes implementation
##class SearchScopes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iCountRetVal
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return SearchScopeRet
##

SearchFolders._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ScopeFolder)), 'ScopeFolderRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'iCountRetVal' )),
    COMMETHOD([dispid(3)], HRESULT, 'Add',
              ( ['in'], POINTER(ScopeFolder), 'ScopeFolder' )),
    COMMETHOD([dispid(4)], HRESULT, 'Remove',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
]
################################################################
## code template for SearchFolders implementation
##class SearchFolders_Impl(object):
##    def Remove(self, Index):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iCountRetVal
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Add(self, ScopeFolder):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ScopeFolderRet
##

ChartFillFormat._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'OneColorGradient',
              ( ['in'], c_int, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'TwoColorGradient',
              ( ['in'], c_int, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'PresetTextured',
              ( ['in'], c_int, 'PresetTexture' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'Solid'),
    COMMETHOD([dispid(1610743812)], HRESULT, 'Patterned',
              ( ['in'], c_int, 'Pattern' )),
    COMMETHOD([dispid(1610743813)], HRESULT, 'UserPicture',
              ( ['in'], VARIANT, 'PictureFile' ),
              ( ['in'], VARIANT, 'PictureFormat' ),
              ( ['in'], VARIANT, 'PictureStackUnit' ),
              ( ['in'], VARIANT, 'PicturePlacement' )),
    COMMETHOD([dispid(1610743814)], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([dispid(1610743815)], HRESULT, 'PresetGradient',
              ( ['in'], c_int, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_int, 'PresetGradientType' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'BackColor',
              ( ['retval', 'out'], POINTER(POINTER(ChartColorFormat)), 'pval' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ChartColorFormat)), 'pval' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'GradientColorType',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'GradientDegree',
              ( ['retval', 'out'], POINTER(c_float), 'pval' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'GradientStyle',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'GradientVariant',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'PresetGradientType',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'PresetTexture',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'TextureName',
              ( ['retval', 'out'], POINTER(BSTR), 'pval' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'TextureType',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'Visible',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for ChartFillFormat implementation
##class ChartFillFormat_Impl(object):
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return pval
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return pval
##
##    def UserPicture(self, PictureFile, PictureFormat, PictureStackUnit, PicturePlacement):
##        '-no docstring-'
##        #return 
##
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return pval
##
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BackColor(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return pval
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##

ScopeFolder._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPath' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ScopeFolders',
              ( ['retval', 'out'], POINTER(POINTER(ScopeFolders)), 'ScopeFoldersRet' )),
    COMMETHOD([dispid(4)], HRESULT, 'AddToSearchFolders'),
]
################################################################
## code template for ScopeFolder implementation
##class ScopeFolder_Impl(object):
##    @property
##    def ScopeFolders(self):
##        '-no docstring-'
##        #return ScopeFoldersRet
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def AddToSearchFolders(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return pbstrPath
##

__all__ = [ 'msoUnderlineWords', 'msoSortByNone',
           'msoElementPrimaryCategoryAxisTitleVertical',
           'msoBarTypeMenuBar', 'msoBlackWhiteWhite',
           'LanguageSettings', 'msoShapeFoldedCorner',
           'msoTextOrientationUpward', 'msoAllCaps', 'IMsoLegendKey',
           'msoElementDataLabelCenter',
           'msoLanguageIDSpanishArgentina',
           'msoFileDialogViewWebView', 'msoAutomationSecurityByUI',
           'msoGradientDesert', 'msoEncodingEBCDICDenmarkNorway',
           'msoEncodingKorean', 'msoShapeRoundedRectangle',
           'msoShapeStripedRightArrow', 'MsoSortBy',
           'msoOLEMenuGroupContainer', 'msoEncodingISCIIDevanagari',
           'msoCameraPerspectiveFront',
           'msoConditionFileTypeOutlookItems', 'xlHorizontal',
           'msoShapeMathNotEqual', 'xlRTL', 'msoBulletStyleMixed',
           'msoEncodingIA5Norwegian', 'msoLanguageIDXhosa',
           'msoElementErrorBarPercentage', 'msoThemeColorLight1',
           'msoThemeColorLight2', 'msoAnimationSearching',
           'XlChartPictureType', 'SignatureLineImage',
           'MsoArrowheadLength', 'msoLanguageIDHindi',
           'msoBulletMixed', 'msoGradientPeacock',
           'certdetExpirationDate', 'xlDiamond',
           'MsoMetaPropertyType', 'ThemeColor', 'msoStrikeMixed',
           'msoAnimationThinking', 'DocumentInspectors',
           'msoShapeRound2SameRectangle',
           'msoUnderlineDashLongHeavyLine', 'msoLanguageIDHebrew',
           'msoSignatureSubsetSignatureLinesSigned',
           'msoCameraIsometricOffAxis3Left', 'xlRowField',
           'msoLanguageIDQuechuaPeru',
           'msoElementTrendlineAddTwoPeriodMovingAverage',
           'msoShapeActionButtonCustom', 'certverresInvalid',
           'msoCaseTitle', 'msoConditionIsExactly',
           'xlCylinderBarStacked', 'msoLanguageIDFrenchCongoDRC',
           'msoUnderlineDashLongLine', 'MsoSyncVersionType',
           'msoPatternSmallConfetti', 'msoShapeStylePreset28',
           'msoConditionLastMonth', 'msoBulletArabicParenBoth',
           'msoBarNoCustomize', 'msoEditingSmooth',
           'MsoFileNewAction', 'msoDateTimeMMddyyHmm',
           'msoTargetBrowserV4', 'msoTargetBrowserV3',
           'msoLanguageIDEnglishAUS',
           'msoCameraIsometricOffAxis1Left',
           'msoSyncConflictClientWins',
           'msoShapeRoundedRectangularCallout',
           'msoShapeStylePreset23', 'msoLanguageIDLao',
           'msoTextEffectShapeArchDownPour', 'msoShapeCan',
           'msoShadow30', 'msoExtrusionLeft',
           'msoConditionFileTypeMailItem', 'msoShapeStylePreset26',
           'IMsoFloor', 'msoShapeStylePreset25', 'IMsoChartFormat',
           'xlColorIndexNone', 'msoShapeStylePreset24',
           'msoCameraLegacyObliqueBottomRight',
           'msoLanguageIDKashmiriDevanagari', 'CommandBar',
           'msoShapeRightArrowCallout', 'msoPermissionChange',
           'msoSyncErrorFileTooLarge', 'msoEncodingKOI8R',
           'msoPatternLightVertical', 'msoAlertIconWarning',
           'xlBarStacked', 'msoBulletTradChinPeriod',
           'msoControlPopup', 'XlReadingOrder',
           'msoLanguageIDSpanishHonduras',
           'msoCustomXMLNodeProcessingInstruction',
           'sigdetHashAlgorithm', 'msoButtonIconAndWrapCaption',
           'msoShapeMathMultiply', 'MsoBevelType',
           'msoFileTypeBinders', 'XlChartItem', 'xlShape',
           'msoBlogOneCategory',
           'msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese',
           'msoButtonSetCancel', 'msoBlackWhiteAutomatic',
           'msoElementSecondaryCategoryAxisThousands',
           'msoEncodingVietnamese', 'msoblogImageTypeJPEG',
           'ILicAgent', 'msoPatternDashedVertical',
           'MsoRelativeNodePosition', 'msoControlSplitButtonMRUPopup',
           'msoEncodingOEMPortuguese', 'ReflectionFormat',
           'msoCharacterSetCyrillic', 'xlColumnStacked',
           'MsoAlertCancelType', 'xlPyramidBarStacked100',
           'msoShapeDodecagon', 'msoFillPicture',
           'msoBlackWhiteInverseGrayScale', 'msoTrue',
           'msoElementDataLabelLeft', 'msoLanguageIDBengali',
           'IMsoWalls', 'msoCTPDockPositionRestrictNone',
           'WorkflowTask', 'msoWarpFormat29', 'msoWarpFormat28',
           'msoShapeParallelogram', 'msoWarpFormat21',
           'msoWarpFormat20', 'msoWarpFormat23', 'msoWarpFormat22',
           'msoWarpFormat25', 'msoWarpFormat24', 'msoWarpFormat27',
           'msoWarpFormat26', 'msoBevelCircle',
           'msoBalloonButtonCancel', 'msoGradientLateSunset',
           'SignatureProvider', 'msoConditionDoesNotEqual',
           'msoBalloonErrorOther', 'msoUnderlineDotDashHeavyLine',
           'msoElementChartFloorShow',
           'msoLanguageIDSpanishDominicanRepublic',
           'msoCameraIsometricOffAxis1Right', 'msoControlOCXDropdown',
           '_CustomTaskPaneEvents', 'CommandBarButton', 'xlThousands',
           'msoLanguageIDEnglishIndonesia', 'msoCalloutAngle30',
           'ConnectorFormat', 'xlConeBarStacked100',
           'msoSignatureSubsetSignaturesAllSigs', 'msoDateTimeHmmss',
           'msoElementTrendlineAddLinearForecast',
           'msoEncodingMacCyrillic', 'msoAlertButtonRetryCancel',
           'xlStockHLC', 'msoLanguageIDCzech',
           'msoLanguageIDInuktitut', 'Adjustments', 'msoCaseLower',
           'xlTickMarkInside',
           'msoElementSecondaryCategoryAxisTitleAdjacentToAxis',
           'IMsoLeaderLines', 'msoShapeHalfFrame',
           'msoTextEffectMixed', 'xlNextToAxis',
           'msoSyncStatusLocalChanges', 'msoLastModifiedLastMonth',
           'msoBarNoChangeVisible', 'msoReflectionType1',
           'msoPatternWideUpwardDiagonal', 'msoPropertyTypeNumber',
           'msoAlignDistribute',
           'msoLanguageIDSerbianBosniaHerzegovinaLatin',
           'msoTextEffectShapeFadeUp', 'msoBaselineAlignBaseline',
           'MsoAlertButtonType', 'MsoTextureType',
           'msoGradientRainbowII', 'msoShapeExplosion1',
           'msoShapeExplosion2', 'msoLineStylePreset14',
           'msoLineStylePreset15', 'xlHAlignFill',
           'msoLineStylePreset17',
           'msoElementSecondaryValueAxisTitleVertical',
           'msoLineStylePreset11', 'msoExtrusionTop', 'msoShapeMoon',
           'msoFreeform', 'msoLineStylePreset18',
           'msoLineStylePreset19', 'msoSyncErrorVirusDownload',
           'msoFeatureInstallOnDemandWithUI',
           'msoElementSecondaryCategoryAxisReverse',
           'msoLanguageIDTamazight', 'msoblogImageTypeGIF',
           'msoButtonSetBackClose',
           'msoElementSeriesAxisTitleHorizontal', 'msoBarTop',
           'msoLanguageIDEnglishIreland',
           'msoCTPDockPositionRestrictNoHorizontal',
           'xlColorIndexAutomatic', 'msoFileDialogViewDetails',
           'msoAnchorBottom', 'xlAxis', 'xlDataLabelsShowNone',
           'msoShapeCurvedUpArrow', 'msoScreenSize1920x1200',
           'msoLanguageIDEdo', 'xlOpaque', 'xlAreaStacked100',
           'msoLanguageIDMongolian', 'msoTextEffectShapeTriangleDown',
           'certverresRevoked', 'sigdetApplicationVersion',
           'xlBarOfPie', 'msoSharedWorkspaceTaskStatusCompleted',
           'sigdetIPFormHash', 'msoLanguageIDBasque', 'xlHairline',
           'xlRows', 'msoShapeUpArrowCallout',
           'msoShapeDoubleBracket', 'xl3DPieExploded',
           'msoShapeOvalCallout', 'msoEncodingOEMCyrillicII',
           'msoElementSecondaryValueAxisLogScale',
           'msoTextureParchment', 'msoPatternVertical',
           'msoControlOLEUsageClient',
           'msoShapeLeftRightArrowCallout',
           'msoElementPrimaryCategoryAxisTitleHorizontal',
           'msoViewSummaryInfo', 'msoCustomXMLNodeDocument',
           'msoShapeCornerTabs', 'msoCameraIsometricOffAxis2Left',
           'msoEncodingOEMUnitedStates', 'msoLastModifiedAnyTime',
           'msoShapeStylePreset22', 'MsoFileFindView',
           'SharedWorkspaceTask', 'msoAlertCancelFourth',
           'IMsoDataLabels', 'msoControlLabel',
           'msoElementSeriesAxisWithoutLabeling', 'msoBarRowLast',
           'msoBackgroundStylePreset8', 'MsoMixedType',
           'xlXErrorBars', 'encprovdetBlockCipher', 'IMsoEnvelopeVB',
           'msoShapeVerticalScroll', 'msoEncodingCyrillicAutoDetect',
           'msoBevelSlope', 'msoWarpFormat8', 'msoWarpFormat9',
           'msoAnimationPrinting', 'XlAxisType', 'msoLanguageIDMixed',
           'msoShapeNoSymbol', 'msoElementSeriesAxisReverse',
           'MsoPresetExtrusionDirection', 'msoWarpFormat1',
           'XlErrorBarInclude', 'msoWarpFormat3', 'msoWarpFormat4',
           'msoWarpFormat5', 'msoWarpFormat6', 'msoWarpFormat7',
           'MsoHTMLProjectOpen', 'sigtypeUnknown',
           'xlChartElementPositionAutomatic', 'msoMaterialPowder',
           'xlDisplayUnitNone', 'xlHigh', 'mfHTML',
           'msoEncodingOEMBaltic',
           'msoElementPrimaryCategoryAxisTitleAdjacentToAxis',
           'GlowFormat', '_CustomXMLPartsEvents',
           'msoLineStylePreset4', 'msoLineStylePreset5',
           'msoLineStylePreset6', 'msoLineStylePreset7',
           'msoShapeActionButtonEnd', 'msoLineStylePreset9',
           'xlHAlignCenterAcrossSelection', 'msoAnimationGetWizardy',
           'msoShapeLineCallout1AccentBar', 'sigdetIPCurrentView',
           'msoTextDirectionRightToLeft',
           'msoFilterComparisonIsNotBlank',
           'msoSyncEventUploadSucceeded', 'msoShapeRectangle',
           'msoModeModeless', 'msoLineDashStyleMixed',
           'xlErrorBarTypeStError', 'msoGradientWheat',
           'msoFontAlignTop', 'msoLanguageIDSomali',
           'msoCameraIsometricOffAxis3Right', 'msoShape24pointStar',
           'msoMetaPropertyTypeDateTime', 'xlLabelPositionCenter',
           'msoElementSecondaryCategoryGridLinesNone',
           'msoElementTrendlineAddLinear',
           'msoButtonSetYesAllNoCancel', 'XlTrendlineType',
           'msoShapeCloudCallout', 'msoBackgroundStyleNotAPreset',
           'msoSmallCaps', 'IFind', 'msoPresetMaterialMixed',
           'msoLanguageIDFinnish', 'xlErrorBarTypeCustom',
           'XlTimeUnit', 'msoPattern60Percent',
           'msoHTMLProjectOpenTextView', 'msoBulletArabicAbjadDash',
           'msoLanguageIDAfrikaans', 'IDocumentInspector',
           'msoHyperlinkInlineShape',
           'msoFilterComparisonGreaterThan', 'msoShapePieWedge',
           'MsoTextEffectAlignment', 'msoGradientFromCorner',
           'OfficeTheme', 'msoShapeCorner', 'FileDialogFilter',
           'xlCylinderCol', 'TextEffectFormat',
           'msoSyncErrorVirusUpload', 'msoClipboardFormatMixed',
           'msoShapeUTurnArrow', 'msoShapeActionButtonBackorPrevious',
           'msoEncodingSimplifiedChineseGBK', 'xlSplitByPercentValue',
           'msoLanguageIDArabicLibya', 'msoTabStopDecimal',
           'sigdetShouldShowViewWarning', 'msoAlignMiddles',
           'WebComponent', 'msoEncodingCyrillic',
           'msoFileTypeCalendarItem',
           'msoFileTypeDocumentImagingFiles',
           'msoConditionFileTypeOfficeFiles', 'xlVAlignJustify',
           'ShapeNode', 'msoElementPrimaryCategoryAxisThousands',
           'msoBulletSimpChinPlain', 'msoAnimationLookRight',
           'IMsoDownBars', 'msoSyncErrorCouldNotConnect',
           'msoControlDropdown',
           'msoMetaPropertyTypeMultiChoiceLookup',
           'MsoShapeStyleIndex', 'msoScriptAnchor',
           'msoTextEffectShapeCanUp', 'xlMarkerStyleX',
           'offPropertyTypeNumber',
           'msoCameraPerspectiveHeroicLeftFacing',
           'msoPermissionAllCommon', 'msoTextEffect',
           'msoElementSeriesAxisGridLinesMinor', 'BalloonLabels',
           'sigdetDelSuggSignerLine2Set',
           'msoCTPDockPositionRestrictNoVertical',
           'msoWizardMsgResuming', 'sigdetWindowsVersion',
           'msoBlackWhiteBlack', 'msoCameraIsometricOffAxis1Top',
           'msoFileTypeOfficeFiles', 'xlLegendEntry',
           'msoShapeSnip2SameRectangle', 'msoLanguageIDHawaiian',
           'msoSharedWorkspaceTaskPriorityLow', 'IMsoDiagram',
           'msoBarBottom', 'msoBackgroundStylePreset1',
           'msoBackgroundStylePreset2', 'msoBackgroundStylePreset3',
           'msoBackgroundStylePreset4', 'msoBackgroundStylePreset5',
           'msoBackgroundStylePreset6', 'msoBackgroundStylePreset7',
           'msoShadow5', 'msoShadow4', 'msoShadow7', 'msoShadow6',
           'msoShadow1', 'msoShadow3', 'msoShadow2', 'CustomXMLParts',
           'msoShadow9', 'msoLightRigThreePoint',
           'msoSortByLastModified', 'msoBulletNumbered',
           'msoLanguageIDDzongkhaBhutan',
           'msoShapeFlowchartMultidocument', 'msoLanguageIDMalaysian',
           'MsoCalloutDropType', 'msoSortBySize', 'msoMoveRowNext',
           'msoCharacterSetKorean', 'xl3DBar', 'msoEncodingTaiwanTCA',
           'msoConditionFileTypeTaskItem', 'xlVAlignCenter',
           'msoFileTypeDesignerFiles', 'msoFeatureInstallOnDemand',
           'msoTextEffectShapeDoubleWave1',
           'msoShadowStyleOuterShadow',
           'msoTextEffectShapeArchDownCurve',
           'msoTextEffectShapeDoubleWave2', 'XlAxisCrosses',
           'msoCalloutFour', 'msoSyncCompareAndMerge', 'xlBubble',
           'msoThemeLight1', 'msoScriptLanguageVisualBasic',
           'msoCameraObliqueRight', 'XlEndStyleCap',
           'msoLanguageIDArabicYemen', 'msoTextureWalnut',
           'msoElementSecondaryValueAxisMillions',
           'msoTextureBottomRight', 'msoLanguageIDMacedonian',
           'msoWizardActResume', 'xlPlus',
           'msoElementDataLabelInsideEnd', 'xlErrorBarIncludeBoth',
           'msoTriStateMixed', 'msoElementDataTableWithLegendKeys',
           'msoLanguageIDItalian', 'msoCameraIsometricOffAxis2Top',
           'SharedWorkspaceFiles', 'msoLanguageIDArmenian',
           'msoElementPrimaryCategoryAxisWithoutLabels',
           'msoLanguageIDSpanishGuatemala', 'msoBulletArabicPlain',
           'msoClipboardFormatPlainText',
           'msoBulletCircleNumWDWhitePlain',
           'msoConditionAnyNumberBetween', 'MsoMoveRow',
           'msoFileFindSortbyLastSavedBy', 'msoSyncAvailableOffline',
           'msoSoftEdgeTypeNone', 'MsoTextCharWrap', 'MsoOrientation',
           'msoEncodingISO88591Latin1', 'xlTenThousands',
           'offPropertyTypeFloat', 'msoBarTypePopup',
           'msoAnimationGetAttentionMinor',
           'msoElementPrimaryValueAxisTitleVertical',
           'msoConditionEqualsDeferred', 'msoGradientHorizontal',
           'msoExtrusionColorCustom', 'msoLightingTop',
           'certverresValid', 'msoElementDataLabelTop',
           'msoTextureFishFossil', 'msoLanguageIDDanish',
           'xlMarkerStyleSquare', 'xlScaleLinear',
           'msoLineStylePreset21', 'msoLineStylePreset20',
           'msoHTMLProjectStateDocumentLocked',
           'msoDistributeVertically', 'msoShadow19', 'msoShadow18',
           'msoShapeFlowchartStoredData',
           'msoAnimationCharacterSuccessMajor', 'msoShadow15',
           'msoShadow14', 'msoShadow13', 'msoShadow12', 'msoShadow11',
           'msoMetaPropertyTypeInteger',
           'msoCameraLegacyPerspectiveLeft', 'msoEncodingOEMTurkish',
           'FileDialogSelectedItems',
           'msoElementPrimaryCategoryGridLinesMinorMajor',
           'msoEncodingArabic', 'xlSeriesAxis',
           'msoBlackWhiteGrayScale', 'MsoMenuAnimation',
           'msoFillTextured', 'msoAnimationGestureUp',
           'MsoAppLanguageID', 'IMsoUpBars', 'msoBevelCross',
           'msoEncodingT61', 'msoShapeFunnel',
           'msoShapeUpDownArrowCallout',
           'msoElementPrimaryValueAxisTitleAdjacentToAxis',
           'msoElementSeriesAxisTitleNone', 'msoConnectorAnd',
           'msoTexturePaperBag', 'mfRTF', 'msoHyperlinkRange',
           'msoGradientChromeII', 'msoArrowheadLengthMedium',
           'msoElementPrimaryValueAxisNone', 'msoEditingSymmetric',
           'msoDateTimedMMMyy', 'xlConeColClustered',
           'msoBalloonButtonIgnore', 'msoEncodingMacUkraine',
           'msoPresetExtrusionDirectionMixed', 'msoShapeHeptagon',
           'msoEncodingISO6937NonSpacingAccent',
           'msoElementSecondaryValueAxisBillions',
           'msoTextureBlueTissuePaper', 'msoTextEffectShapeCurveDown',
           'msoAlertDefaultThird', 'msoLanguageIDFrench',
           'msoPattern10Percent', 'msoPatternDottedGrid',
           'msoThemeEastAsian', 'msoLanguageIDAssamese',
           'msoEncodingTaiwanEten', 'xlRight', 'ILicValidator',
           'msoAutoSizeShapeToFitText', 'msoBalloonErrorBadReference',
           'ShadowFormat', 'SharedWorkspaceMembers',
           'msoBulletHindiAlphaPeriod', 'MsoCTPDockPosition',
           'msoGradientOneColor', 'msoShapeChevron',
           'msoLanguageIDSwissFrench', 'xlBoth', 'msoOptionsNew',
           'msoElementSeriesAxisTitleVertical', 'msoConnectorCurve',
           'msoViewPreview', 'msoBringToFront', 'xlHidden',
           'MsoFarEastLineBreakLanguageJapanese', 'msoLineSysDot',
           'msoLanguageIDAzeriLatin', 'msoShapeRound1Rectangle',
           'msoDateTimehmmssAMPM', 'msoShapeDownArrow',
           'SignatureInfo', 'msoCalloutOne',
           'msoLanguageIDSwissItalian', 'msoSyncConflictServerWins',
           'msoConditionAtMost', 'msoSyncErrorFileInUse',
           'XlUnderlineStyle', 'SharedWorkspace', 'HTMLProjectItem',
           'msoBeforeNode', 'msoShapeTear', 'msoViewFileInfo',
           'msoFileTypeVisioFiles', 'msoGradientBrass',
           'msoSyncErrorOutOfSpace', 'msoShapeLeftRightArrow',
           'xlMovingAvg', 'XlBarShape',
           'msoConditionFileTypeVisioFiles',
           'msoFilterConjunctionAnd', 'msoBulletRomanLCParenBoth',
           'MsoPictureColorType', 'msoElementSeriesAxisGridLinesNone',
           'msoConditionInTheLast', 'msoComboNormal',
           'msoLanguageIDYoruba', 'msoBalloonErrorOutOfMemory',
           'msoLastModifiedToday', 'msoAnimationListensToComputer',
           'MsoTextureAlignment',
           'msoCameraPerspectiveHeroicExtremeRightFacing',
           'DiagramNodeChildren', 'msoShapeChartX',
           'msoControlSpinner',
           'msoElementSecondaryValueAxisTitleHorizontal',
           'XlScaleType', 'msoTextureAlignmentMixed',
           'offPropertyTypeDate', 'msoBalloonErrorCOMFailure',
           'msoLanguageIDFrenchSenegal', 'msoGradientFog',
           'msoLanguageIDFilipino', 'MsoSyncConflictResolutionType',
           'msoEncodingTaiwanIBM5550', 'xlMaximum',
           'msoCharacterSetTraditionalChinese',
           'msoTexturePurpleMesh', 'msoTextureCenter',
           'msoBlogMultipleCategories', 'msoPatternCross',
           'MsoGradientStyle', 'RibbonControlSize',
           'msoCameraLegacyPerspectiveBottom',
           'msoBulletArabicPeriod', 'xl3DArea', 'MsoScreenSize',
           'xlMillionMillions', 'msoEncodingAutoDetect',
           'msoShapeFlowchartInternalStorage', 'TabStop2',
           'msoElementDataLabelNone', 'msoShadow23',
           'msoTextOrientationMixed', 'MsoCharacterSet',
           'xlPyramidCol', 'msoTabStopRight', 'msoShadow24',
           'msoEncodingEBCDICLatinAmericaSpain', 'msoShadow28',
           'msoShadow29', 'msoElementPrimaryCategoryGridLinesMinor',
           'msoFileFindSortbyDateSaved', 'xlLegendPositionBottom',
           'msoLanguageIDGermanAustria',
           'msoSignatureSubsetSignatureLines', 'msoArrowheadNarrow',
           'msoElementSeriesAxisGridLinesMinorMajor',
           'msoCameraPerspectiveHeroicExtremeLeftFacing',
           'msoAutoSizeTextToFitShape', 'msoEncodingHebrew',
           'IMsoHyperlinks', 'msoBalloonButtonOK',
           'msoCTPDockPositionRestrictNoChange', 'XlMarkerStyle',
           'msoAutomationSecurityLow', 'msoEncodingISCIIGujarati',
           'msoBulletArabicDBPlain', 'msoLineDashDot',
           'msoTabAlignMixed', 'msoEncodingUTF7',
           'msoBalloonButtonAbort', 'XlErrorBarType',
           'msoEncodingUTF8', 'msoPatternDarkHorizontal',
           'msoShapeFlowchartMerge', 'msoBalloonButtonNo',
           'xlCylinderColClustered', 'msoEncodingGreek',
           'msoLanguageIDEnglishTrinidadTobago', 'msoColorTypeScheme',
           'msoExtrusionBottomLeft', 'msoDateTimeddddMMMMddyyyy',
           'xlLabelPositionInsideBase', 'msoControlGraphicDropdown',
           'msoEncodingEBCDICUSCanadaAndJapanese', 'msoLineSingle',
           'msoCameraIsometricOffAxis2Right', 'msoLightRigFreezing',
           'msoPatternDottedDiamond', 'msoShadow20', 'GradientStop',
           'xlJustify', 'msoShadow21', 'msoMaterialTranslucentPowder',
           'MsoSegmentType', 'EncryptionProviderDetail',
           'msoFlipVertical', 'MsoFileFindSortBy', 'msoShadow27',
           'msoControlButton', 'msoGradientPresetColors',
           'xlRadarAxisLabels', 'xlSurfaceTopViewWireframe',
           'msoShapeActionButtonInformation', 'Balloon',
           'msoShadow25', 'MsoLightRigType', 'WorkflowTemplate',
           'msoTextEffectShapeCircleCurve', 'msoBarNoHorizontalDock',
           'msoScreenSize1152x882', 'msoLanguageIDEstonian',
           'msoAnimationDisappear', 'msoGradientTwoColors',
           'XlChartOrientation', 'msoDiagram', 'xlTickMarkCross',
           'xlScale', 'xlMarkerStyleCircle',
           'xlErrorBarIncludePlusValues',
           'msoElementPrimaryValueAxisBillions', 'msoTextEffect7',
           'msoTextEffect6', 'msoTextEffect5', 'msoTextEffect4',
           'msoTextEffect3', 'msoTextEffect2', 'msoTextEffect1',
           'msoTextEffect9', 'msoTextEffect8',
           'sigdetDelSuggSignerLine2', 'msoPatternNarrowVertical',
           'xlSizeIsWidth', 'msoThemeColorMixed',
           'xlTickLabelPositionNone', 'msoLanguageIDCroatian',
           'sigdetColorDepth', 'msoDateTimeMMddyyhmmAMPM',
           'msoCharacterSetThai', 'msoAlertButtonOK', 'xlSeriesLines',
           'certverresUntrusted', 'msoSoftEdgeTypeMixed', 'xlGray50',
           'MsoScriptLanguage', 'FileSearch',
           'msoElementSecondaryCategoryGridLinesMajor',
           'msoPermissionEdit', 'MsoLanguageIDHidden',
           'msoShapeHeart', 'msoArrowheadLong', 'msoEncodingKOI8U',
           'msoButtonSetOkCancel', 'MsoBalloonErrorType',
           'xlAutomatic', 'msoShapeDownRibbon',
           'msoPresetGradientMixed', 'msoButtonIconAndCaptionBelow',
           'msoButtonSetBackNextSnooze', 'msoEncodingISO88599Turkish',
           'msoLanguageIDUIPrevious', 'msoBarNoResize',
           'msoFileTypeWebPages', 'xlGray25', 'msoSearchInOutlook',
           'msoCustomXMLValidationErrorAutomaticallyCleared',
           'msoShape8pointStar', 'msoEncodingISO88592CentralEurope',
           'msoCameraLegacyObliqueFront', 'xlNothing',
           'msoElementSecondaryCategoryAxisNone',
           'msoLanguageIDKannada', 'msoEncodingOEMNordic',
           'msoLightRigContrasting', 'msoBackgroundStyleMixed',
           'msoEncodingISCIITamil', 'msoLanguageIDSerbianLatin',
           'msoLanguageIDFaeroese', 'xl3DColumn',
           'msoElementSecondaryValueGridLinesMinor',
           'msoShapeStylePreset39', 'msoPresetLightingDirectionMixed',
           'msoShapeStylePreset34', 'msoShapeStylePreset35',
           'msoShapeStylePreset36', 'msoShapeStylePreset37',
           'msoShapeStylePreset30', 'msoCameraPerspectiveBelow',
           'msoShapeLeftArrowCallout', 'msoShapeStylePreset33',
           'xlTickLabelPositionNextToAxis', 'msoLanguageIDKyrgyz',
           'UserPermission', 'msoAutoSizeMixed',
           'msoLastModifiedThisMonth', 'msoCTPDockPositionRight',
           'msoNoCaps', 'msoOLEMenuGroupHelp', 'msoShapeMixed',
           'SharedWorkspaceFolder', 'msoAnimationLookDownLeft',
           'msoShapeFrame', 'msoTextEffect18', 'MsoScriptLocation',
           'msoWizardActInactive', 'msoTextEffect15',
           'msoTextEffect14', 'msoTextEffect17', 'msoTextEffect16',
           'msoTextEffect11', 'msoTextEffect10', 'msoTextEffect13',
           'msoTextEffect12', 'msoMaterialDarkEdge',
           'xlCategoryScale', 'msoCameraIsometricBottomDown',
           'msoSyncEventOffline', 'msoAfterNode', 'msoShapeBentArrow',
           'msoblogImageTypePNG', 'MsoSharedWorkspaceTaskPriority',
           'msoSharedWorkspaceTaskPriorityNormal',
           'msoLanguageIDNorwegianBokmol', 'Shapes',
           'msoLanguageIDBosnianBosniaHerzegovinaCyrillic',
           'msoConditionNextMonth', 'msoCameraIsometricOffAxis4Left',
           'msoTable', 'xlExponential', 'xlArea',
           'msoLanguageIDSpanish', 'msoAnchorCenter',
           'msoPattern25Percent', 'ThemeFont',
           'xlXYScatterLinesNoMarkers', 'xlCylinderColStacked100',
           'msoEncodingEBCDICKoreanExtendedAndKorean',
           'msoAnimationGestureLeft', 'msoEncodingEuropa3',
           'msoElementPrimaryCategoryAxisBillions',
           'msoShapeLineInverse', 'msoFileDialogFolderPicker',
           'xl3DBarStacked100', 'xlMinusValues',
           'msoElementSecondaryCategoryAxisWithoutLabels',
           'msoCameraPerspectiveRelaxed', 'msoArrowheadOpen',
           'msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese',
           'RibbonControlSizeLarge', 'msoFontAlignMixed',
           'msoGradientFire', 'msoShapeLeftRightCircularArrow',
           'msoDateTimeMdyy', 'msoGradientParchment',
           'msoEncodingISO2022KR', 'MsoEncoding',
           'msoShapeLineCallout4', 'msoShapeQuadArrowCallout',
           'msoShapeLineCallout3', 'msoShapeLineCallout1',
           'msoShapeFlowchartOfflineStorage', 'msoLightRigSunrise',
           'msoHorizontalAnchorMixed', 'msoShapeLeftCircularArrow',
           'msoBulletTradChinPlain', 'msoLanguageIDMexicanSpanish',
           'MsoScaleFrom', 'msoElementChartFloorNone',
           'msoLightRigLegacyHarsh4', 'msoThreeD20',
           'msoControlCustom', 'msoElementLineHiLoLine',
           'xlStackScale', 'msoShapePlaque', 'xlChartX', 'xlChartY',
           'msoBulletKanjiKoreanPlain',
           'msoBalloonErrorTooManyControls', 'msoShapeUpDownArrow',
           'xlLegend', 'msoFontAlignAuto', 'msoBulletThaiAlphaPeriod',
           'msoElementChartTitleCenteredOverlay', 'msoButtonCaption',
           'msoShapeFlowchartDisplay', 'msoArrowheadWidthMedium',
           'msoTextureRight', 'msoTextEffectShapeCurveUp',
           'msoFilterComparisonNotEqual', 'MsoPresetGradientType',
           'msoLanguageIDFrenchCotedIvoire', 'xlHundredThousands',
           'xlLightUp', 'msoLanguageIDSpanishModernSort',
           'msoOLEMenuGroupWindow', 'MsoFileDialogView',
           'msoEncodingCentralEuropean', 'msoLightRigHarsh',
           'msoElementLegendTop', 'CertificateVerificationResults',
           'xlTickMarkOutside', 'msoShadow40',
           'msoSharedWorkspaceTaskStatusDeferred', 'msoShadow42',
           'msoShadow43', 'MsoThemeColorSchemeIndex',
           'msoButtonSetYesNoCancel', 'msoLanguageIDUzbekLatin',
           'xlRadarMarkers', 'msoBalloonTypeBullets',
           'msoFileFindSortbyAuthor', 'xl3DColumnClustered',
           'msoLightRigBrightRoom', 'msoLanguageIDOriya',
           'xlDisplayUnitLabel', 'sigdetDelSuggSignerSet',
           'msoFilterComparisonContains', 'msoCustomXMLNodeComment',
           'XlDataLabelPosition', 'CustomXMLPart', 'msoBevelHardEdge',
           'msoAlignJustifyLow', 'xlSplitByValue',
           'msoAlertCancelFirst', 'msoShapeLineCallout3AccentBar',
           'msoControlSplitDropdown', 'msoControlGenericDropdown',
           'msoCameraLegacyPerspectiveTopRight', 'msoBarPopup',
           'xlAxisTitle', 'msoLanguageIDIcelandic', 'Sync', 'xlZero',
           'SeriesCollection', 'msoShapeDonut',
           'msoLanguageIDFrisianNetherlands', 'ODSOFilter',
           'msoConditionThisWeek', 'msoShapeTypeMixed',
           'xlConeBarStacked', 'msoLanguageIDSwissGerman',
           'msoEncodingTaiwanWang', 'msoLanguageIDKazakh',
           'msoLanguageIDIndonesian', 'xlBarStacked100',
           'msoControlPane', 'msoElementDataLabelShow',
           'CustomXMLSchema', 'msoSyncEventUploadInitiated',
           'msoBarLeft', 'cipherModeECB', 'TextFrame', 'msoThreeD19',
           'msoThreeD18', 'msoFileTypeAllFiles', 'msoThreeD16',
           'msoThreeD15', 'msoThreeD14', 'msoThreeD13', 'msoThreeD12',
           'msoThreeD11', 'msoThreeD10', 'MsoPresetThreeDFormat',
           'IMsoChartGroup', 'msoEncodingMacGreek1', 'ScopeFolders',
           'msoLanguageIDSpanishVenezuela', 'msoBulletRomanUCPeriod',
           'msoAnimationGreeting', 'xlValue', 'SearchScopes',
           'msoCameraLegacyObliqueTop', 'msoLanguageIDKonkani',
           'msoElementErrorBarNone', 'xlLabelPositionInsideEnd',
           'XlVAlign', 'SoftEdgeFormat',
           'msoBulletThaiAlphaParenBoth', 'msoUnderlineWavyHeavyLine',
           'xlLinear', 'IMsoDropLines', 'msoAnimationAppear',
           'MsoFilterComparison', 'COMAddIn', 'MsoShadowStyle',
           'msoDiagramRadial', 'msoLanguageIDUI',
           'MsoPresetLightingSoftness', 'msoLanguageIDBelgianFrench',
           'IFoundFiles', 'msoPattern50Percent', 'IConverter',
           'msoThemeColorAccent1', 'MsoFillType', 'msoEditingAuto',
           'msoReflectionType3', 'msoPatternSmallCheckerBoard',
           'msoBulletKanjiKoreanPeriod', 'msoThemeColorAccent3',
           'contverresError', 'msoConditionNotEqualToDeferred',
           'msoThemeColorAccent2', 'xlLabelPositionCustom',
           'msoShapeLeftArrow', 'msoDiagramNode',
           'msoThemeColorAccent4', 'msoWizardMsgLocalStateOn',
           'msoLanguageIDByelorussian', 'WebComponentFormat',
           'msoThemeColorAccent6', 'ServerPolicy',
           'msoConditionFileTypeContactItem', 'msoInkComment',
           'msoArrowheadTriangle', 'MsoAutoSize',
           'msoTextEffectShapeRingInside', 'MsoColorType',
           'msoBalloonButtonNext', 'msoLanguageIDEnglishTrinidad',
           'msoSharedWorkspaceTaskPriorityHigh',
           'msoElementPlotAreaShow', 'MsoComboStyle',
           'msoWizardActActive', 'xlTickLabelOrientationVertical',
           'SharedWorkspaceLink', 'msoCameraObliqueLeft',
           'msoConditionIsNot', 'msoFileDialogFilePicker',
           'msoLanguageIDArabicIraq',
           'msoConditionFileTypePublisherFiles',
           'msoCalloutAngleMixed', 'ODSOFilters',
           'msoArrowheadLengthMixed', 'MsoLastModified',
           'MsoEnvelope', 'msoLightRigLegacyNormal3',
           'msoConnectorTypeMixed', 'msoLightRigLegacyNormal2',
           'msoElementDataLabelBestFit', 'xlSecondary',
           'msoTextEffectShapeCirclePour', 'Shape',
           'xlAxisCrossesMinimum', 'xlXYScatter',
           'msoLanguageIDMalayBruneiDarussalam',
           'msoEncodingISO2022JPNoHalfwidthKatakana',
           'msoElementChartWallShow', 'msoTextEffectShapeMixed',
           'msoCTrue', 'msoElementPrimaryValueAxisThousands',
           'msoBevelTypeMixed', 'xlSplitByCustomSplit',
           'msoSortByFileName', 'msoEncodingOEMMultilingualLatinII',
           'xlLightHorizontal', 'msoTextureOak',
           'msoLanguageIDKirghiz', 'msoCalloutAngle60',
           'msoAnimationLookUpLeft', 'xlDays',
           'msoShapeLineCallout2NoBorder', 'msoLineSysDash',
           'xlPyramidColClustered', 'msoMetaPropertyTypeFillInChoice',
           'msoShapeFlowchartPunchedTape',
           'msoOrgChartLayoutBothHanging', 'msoBarTypeNormal',
           'msoBulletAlphaUCParenRight', 'ICustomXMLPartEvents',
           'msoFilterComparisonLessThan', 'msoLanguageIDKanuri',
           'msoElementDataTableShow', 'IConverterPreferences',
           'msoShapeDownArrowCallout', 'msoBarNoProtection',
           'xlLegendKey', 'MsoAutomationSecurity',
           'MsoButtonStyleHidden', 'msoShapeStylePreset29',
           'msoMaterialMetal', 'msoEncodingUSASCII',
           'msoFillPatterned', 'XlCategoryType',
           'sigdetOfficeVersion', 'msoShapeStylePreset21',
           'msoShapeStylePreset20', 'msoShapeStylePreset27',
           'msoLanguageIDDivehi',
           'msoElementPrimaryValueGridLinesMajor',
           'msoShapeChartPlus', 'MsoTextOrientation',
           'msoLanguageIDArabicTunisia', 'sigprovdetUseOfficeUI',
           'MsoWarpFormat', 'msoMetaPropertyTypeMultiChoice',
           'msoAlignLefts', 'msoGradientNightfall',
           'msoBulletPicture',
           'msoSharedWorkspaceTaskStatusInProgress',
           'msoEncodingOEMMultilingualLatinI',
           'msoSyncEventDownloadInitiated', 'msoShapeOctagon',
           'msoCameraIsometricRightDown', 'msoLastModifiedLastWeek',
           'msoBevelCoolSlant', 'msoMaterialPlastic2',
           'msoTextureBottomLeft', 'msoLanguageIDSpanishColombia',
           'msoButtonIconAndCaption', 'msoConditionToday',
           'msoConditionFileTypePowerPointPresentations',
           'msoPatternOutlinedDiamond', 'MsoPresetCamera',
           'msoTargetBrowserIE6', 'msoBulletThaiNumPeriod',
           'msoDocInspectorStatusError', 'BalloonLabel',
           'msoShapeActionButtonSound', 'msoEncodingMacArabic',
           'msoElementPrimaryValueGridLinesMinorMajor',
           'msoButtonIconAndWrapCaptionBelow', 'xlAxisCrossesCustom',
           'msoNoCharWrap', 'FreeformBuilder', 'msoDoubleStrike',
           'msoAlertCancelThird', 'msoGradientDiagonalUp',
           'msoAlertButtonAbortRetryIgnore',
           'msoEncodingEBCDICJapaneseLatinExtendedAndJapanese',
           'msoShapeLeftRightUpArrow', 'msoLineSolid',
           'msoAlertIconQuery', 'msoUnderlineMixed',
           'msoFilterComparisonIsBlank', 'MsoAutoShapeType',
           'BulletFormat2', 'msoConditionIncludesFormsOf',
           'msoCharacterSetVietnamese', 'msoWarpFormat10',
           'msoWarpFormat11', 'msoWarpFormat12', 'msoWarpFormat13',
           'msoWarpFormat14', 'msoWarpFormat15', 'msoWarpFormat16',
           'msoWarpFormat17', 'msoWarpFormat18', 'msoWarpFormat19',
           'msoLineSquareDot', 'msoShapeHexagon', 'msoPathTypeMixed',
           'msoShapeNotPrimitive', 'msoShapeTrapezoid',
           'cipherModeCBC', 'xlTickMarkNone', 'msoLanguageIDFarsi',
           'msoShape10pointStar', 'msoLanguageIDSutu',
           'msoTextureGreenMarble',
           'msoLanguageIDGermanLiechtenstein',
           'msoBalloonErrorBadCharacter',
           'xlChartElementPositionCustom',
           'msoElementSecondaryCategoryAxisBillions', 'ODSOColumn',
           'siglnimgSignedInvalid', 'msoTextEffectShapeFadeDown',
           'HTMLProjectItems', 'msoElementChartWallNone',
           'msoLanguageIDTajik', 'IMsoHiLoLines',
           'msoBalloonErrorButtonModeless', 'msoControlActiveX',
           'msoCameraPerspectiveContrastingLeftFacing',
           'msoBalloonButtonYes', 'MsoButtonStyle',
           'msoTabAlignDecimal', 'msoCameraObliqueTopLeft',
           'xlDistributed', 'msoConditionEquals', 'CustomTaskPane',
           'msoUnderlineDotDotDashHeavyLine', 'xlCombination',
           'msoLanguageIDPunjabi', 'msoButtonDown', 'msoCaseSentence',
           'msoLanguageIDFrenchMorocco', 'msoControlGrid',
           'xlMarkerStyleDot', 'msoUnderlineDashLine', 'xlSolid',
           'msoTextDirectionLeftToRight', 'msoCTPDockPositionTop',
           'msoTriStateToggle', 'msoElementDataTableNone',
           'xlInterpolated', 'xlMarkerStylePlus', 'MsoTabStopType',
           'msoElementSecondaryValueAxisTitleAdjacentToAxis',
           'xlUnderlineStyleDoubleAccounting', 'msoTextEffect28',
           'msoShadow26', 'IConverterUICallback',
           'msoEncodingISCIIMalayalam', 'msoSegmentCurve',
           'msoWizardMsgShowHelp', 'msoSyncStatusError',
           'msoLineThickThin', 'xlLegendPositionLeft',
           'msoControlSplitButtonPopup', 'msoBalloonTypeNumbers',
           'msoThemeColorText2', 'msoThemeColorText1',
           'MsoBarPosition', 'msoCameraOrthographicFront',
           'msoReflectionTypeNone', 'msoOrgChartLayoutStandard',
           'msoConditionFileTypeWordDocuments',
           '_CustomXMLSchemaCollection', 'certverresError',
           'msoControlGauge',
           'msoElementSecondaryValueAxisTitleBelowAxis',
           'msoCaseUpper', 'msoAnimationEmptyTrash',
           'ChartFillFormat', 'xlHAlignGeneral', 'certdetThumbprint',
           'msoPermissionFullControl', 'msoFillMixed', 'xlStack',
           'msoReflectionTypeMixed', 'msoStandardCharWrap',
           'msoThemeColorAccent5', 'msoScaleFromTopLeft',
           'msoConditionEqualsNotStarted', 'msoCaseToggle',
           'xlBarClustered', 'msoEncodingEUCChineseSimplifiedChinese',
           'xlCustom', 'msoEncodingISO2022CNSimplifiedChinese',
           'msoMenuAnimationRandom', 'msoLanguageIDFulfulde',
           'msoLanguageIDArabicSyria', 'msoShapeLeftUpArrow',
           'msoAlignBottoms', 'offPropertyTypeString', 'xlNoCap',
           'XlDataLabelsType', 'msoCameraIsometricOffAxis4Bottom',
           'msoShapeFlowchartData', 'IMsoDisplayUnitLabel',
           'MsoPresetTexture', 'msoControlComboBox',
           'ICustomTaskPaneConsumer', 'msoPicture',
           'msoMetaPropertyTypeChoice', 'xlRadarFilled',
           'msoShapeLeftRightRibbon', 'ODSOColumns',
           'msoTextEffectAlignmentMixed', 'msoLanguageIDMaltese',
           'ILicWizExternal', 'msoSyncErrorCouldNotUpdate',
           'msoShapeDiagonalStripe', 'msoPattern75Percent',
           'msoFileFindSortbyDateCreated',
           'msoEncodingISO88594Baltic', 'msoPermissionExtract',
           'msoFilterConjunctionOr', 'certdetSubject',
           'xlConeToPoint', 'xlMarkerStyleDiamond',
           'msoTextEffectShapeTriangleUp', 'msoShapeDoubleBrace',
           '_CommandBarComboBox', 'msoExtrusionRight',
           'xlDefaultAutoFormat', 'msoPatternDivot',
           'CertificateDetail', 'msoTextEffectShapeSlantDown',
           'MsoBaselineAlignment', 'msoSyncStatusConflict',
           'msoLanguageIDSpanishChile', 'FillFormat',
           'msoIconAlertCritical', 'msoEncodingJapaneseShiftJIS',
           'msoCameraIsometricLeftUp', 'XlConstants', 'xlCorner',
           'msoAlertCancelSecond', 'msoEncodingGreekAutoDetect',
           'msoOLEMenuGroupObject', 'msoSoftEdgeType6',
           'msoSoftEdgeType4', 'msoSoftEdgeType5', 'msoSoftEdgeType2',
           'msoSoftEdgeType3', 'msoSoftEdgeType1',
           'msoCustomXMLNodeElement', 'msoBevelDivot',
           'msoControlAutoCompleteCombo', 'msoBulletCircleNumDBPlain',
           'msoLanguageIDArabicOman', 'msoLanguageIDFrenchCameroon',
           'msoMetaPropertyTypeBusinessData', 'msoCalloutTwo',
           'msoTextureTop', 'MsoFarEastLineBreakLanguageKorean',
           'msoCameraLegacyPerspectiveRight', 'msoDiagramAssistant',
           'msoShapeCurvedUpRibbon', 'msoBaselineAlignFarEast50',
           'msoLanguageIDSamiLappish', 'MsoDiagramType', 'xlVertical',
           'msoTabStopLeft', 'MsoBlogImageType',
           'msoScreenSize1800x1440', 'xlLabelPositionLeft',
           'xlShowValue', 'msoCustomXMLNodeAttribute',
           'msoBalloonButtonSnooze', 'msoIconAlertQuery',
           'xlLegendPositionTop', 'msoConditionOn',
           'msoFilterComparisonEqual', 'msoAnchorTopBaseline',
           'IMsoSeriesLines', 'sigdetLocalSigningTime',
           'msoBaselineAlignCenter', 'msoCallout',
           'msoShapeFlowchartCollate', 'MsoExtraInfoMethod',
           'msoConditionNotEqualToNormal', 'xl3DPie',
           'msoLinkedPicture', 'msoOptionsAdd', 'siglnimgSignedValid',
           'msoPatternWave', 'XlDisplayBlanksAs',
           'msoShapeSwooshArrow', 'msoArrowheadStealth',
           'MsoLineStyle', 'xlErrorBarTypeStDev', 'MsoSearchIn',
           'msoElementSecondaryValueGridLinesNone',
           'msoLineStylePreset10',
           'msoEncodingTraditionalChineseBig5', 'xlWalls',
           'msoLanguageIDBrazilianPortuguese',
           'msoLanguageIDTraditionalChinese', 'msoBarNoVerticalDock',
           'msoAlignRights', 'xlMarkerStyleStar',
           'msoEncodingISO88598HebrewLogical',
           'msoShapeSnipRoundRectangle', 'msoPattern30Percent',
           'msoLineThinThin', 'ScopeFolder',
           'msoBulletArabicDBPeriod', 'msoDateTimeFigureOut',
           'msoThemeAccent3', 'msoThemeAccent2', 'msoThemeAccent1',
           'msoThemeAccent6', 'msoThemeAccent5', 'msoThemeAccent4',
           'msoPatternLightUpwardDiagonal', 'xlBox',
           'msoMetaPropertyTypeMultiChoiceFillIn', 'IRibbonControl',
           'msoEncodingArabicAutoDetect', 'TextFrame2', 'xlLow',
           'msoTextBox', 'msoTextEffectShapeFadeLeft',
           'msoSyncErrorCouldNotCompare', 'MsoChartElementType',
           'msoSyncStatusNoSharedWorkspace',
           'RibbonControlSizeRegular', 'MsoVerticalAnchor',
           'FoundFiles', 'msoElementErrorBarStandardDeviation',
           'msoEncodingExtAlphaLowercase', 'msoBevelNone',
           'msoPattern5Percent', 'MsoDocProperties',
           'msoTextEffectShapeFadeRight', 'msoCharacterSetHebrew',
           'msoListbyTitle', 'Trendlines',
           'msoPatternHorizontalBrick', 'msoLanguageIDArabicBahrain',
           'msoShapeActionButtonMovie', 'MsoIconType',
           'msoFileTypeExcelWorkbooks', 'msoShapeBlockArc',
           'msoCameraLegacyObliqueBottomLeft',
           'msoOrgChartLayoutRightHanging',
           'msoEncodingUnicodeBigEndian', 'FileDialog',
           'msoTextEffectShapeCanDown', 'msoTabAlignRight',
           'msoBulletRomanUCParenBoth', 'CommandBars',
           'msoLanguageIDTibetan', 'msoGradientDiagonalDown',
           'IMsoChartArea', 'WorkflowTemplates', 'MsoPresetMaterial',
           'MsoPermission', 'msoElementSeriesAxisShow',
           'msoTextEffectShapeChevronDown',
           'msoCameraLegacyPerspectiveFront',
           'msoLanguageIDLithuanian', 'msoBalloonButtonSearch',
           'msoIconNone', 'xlUpward', 'msoSyncAvailableAnywhere',
           'msoLanguageIDTelugu', 'msoLanguageIDNoProofing',
           'msoOrgChartLayoutLeftHanging', 'msoLightRigMixed',
           'msoLanguageIDEnglishUK', 'msoAnchorMiddle',
           'xlTickLabelOrientationDownward', 'msoLanguageIDEnglishUS',
           'xlPyramidToMax', 'msoPermissionSave',
           'xlLabelPositionBestFit', 'msoLanguageIDHungarian',
           'msoShapeMathPlus', 'msoSyncStatusSuspended',
           'msoSingleMixed', 'msoCalloutDropCenter', 'xlDataField',
           'msoFileDialogSaveAs', 'msoDateTimeMMMMdyyyy',
           'certdetIssuer', 'msoLanguageIDSpanishPuertoRico',
           'MsoSignatureSubset', 'msoEncodingUnicodeLittleEndian',
           'xlCorners', 'EncryptionProvider',
           'msoSyncEventDownloadNoChange', 'msoTextureSand',
           'msoLanguageIDHausa', 'ICommandBarComboBoxEvents',
           'MsoBarType', 'msoShapeUpRibbon',
           'msoPresetLightingSoftnessMixed', 'CustomXMLPrefixMapping',
           'Ruler2', 'IMsoErrorBars', 'msoGradientOcean', 'xlGray16',
           'msoMoveRowNbr', 'MsoLineDashStyle', 'msoPathTypeNone',
           'msoPatternDashedUpwardDiagonal', 'msoTextureLeft',
           'msoElementSecondaryCategoryAxisShow',
           'msoTextEffectShapeInflateBottom', 'msoPictureAutomatic',
           'msoShapeFlowchartSequentialAccessStorage',
           'IMsoTickLabels', 'msoLanguageIDTswana', 'xlPrimary',
           'msoLanguageIDArabicKuwait', 'msoFileFindSortbySize',
           'msoUnderlineWavyDoubleLine', 'MsoDebugOptions',
           'msoPatternNarrowHorizontal',
           'msoConditionFileTypeDatabases',
           'msoShapeCurvedDownRibbon', 'msoMaterialSoftEdge',
           'msoShapeFlowchartConnector', 'msoPattern40Percent',
           'msoMaterialMatte', 'msoTextureNewsprint', 'xlCross',
           'msoAlignTops', 'msoAlertButtonOKCancel',
           'msoGradientHorizon', 'msoLanguageIDGujarati',
           'msoDateTimedMMMMyyyy', 'msoEncodingIA5Swedish',
           'msoElementSeriesAxisNone', 'xlDropLines',
           'msoLanguageIDEnglishSouthAfrica',
           'msoEncodingISO88598Hebrew', 'MsoDocInspectorStatus',
           'msoSyncStatusNotRoaming', 'msoStrictCharWrap',
           'xlTriangle', 'msoConditionIncludesPhrase',
           'msoElementPlotAreaNone', 'msoAnimationWorkingAtSomething',
           'IMsoCorners',
           'msoHTMLProjectStateDocumentProjectUnlocked',
           'msoAlignThaiDistribute', 'msoCalloutAngle45',
           'msoShapeRightBrace', 'msoBlackWhiteMixed',
           'IRibbonExtensibility',
           'msoShapeFlowchartPredefinedProcess',
           'msoLanguageIDUkrainian', 'MsoDebugOptions_UT',
           'msoElementSecondaryValueAxisTitleRotated', '_IMsoDispObj',
           'MsoSortOrder', 'msoShapeMathEqual', 'msoEncodingBaltic',
           'msoEncodingMacIcelandic',
           'IConverterApplicationPreferences',
           'msoSyncErrorUnknownUpload',
           'msoPatternWideDownwardDiagonal', 'MsoShadowType',
           'msoEncodingEBCDICTurkish', 'xlColumnField',
           'msoArrowheadDiamond',
           'msoLanguageIDSerbianBosniaHerzegovinaCyrillic',
           'MsoAlertDefaultType', 'msoCameraIsometricOffAxis4Right',
           'msoMetaPropertyTypeMax',
           'msoConditionNotEqualToNotStarted',
           'msoTextureUserDefined', 'msoOrgChartLayoutMixed',
           '_CustomXMLParts', 'msoLineRoundDot', 'msoShapeBalloon',
           'xlYears', 'msoElementLineDropHiLoLine',
           'msoBulletHindiNumPeriod',
           'msoCharacterSetMultilingualUnicode',
           'xlUnderlineStyleSingle', 'msoMethodPost', 'xlColumns',
           'msoMetaPropertyTypeCalculated', 'MsoFileNewSection',
           'MsoSharedWorkspaceTaskStatus', 'msoBlackWhiteDontShow',
           'MsoBarRow', 'msoPresetTextureMixed',
           'MsoCalloutAngleType',
           'msoElementPrimaryCategoryGridLinesMajor',
           'msoBlackWhiteHighContrast', 'MsoFontLanguageIndex',
           'msoCameraLegacyPerspectiveTopLeft',
           'msoEncodingEUCJapanese', 'MsoHorizontalAnchor',
           'msoFileTypeOutlookItems', 'msoPatternUpwardDiagonal',
           'msoAlertIconCritical', 'msoShapeLeftBrace',
           'msoTextEffectAlignmentWordJustify', 'PictureFormat',
           'msoLightRigLegacyFlat3', 'msoLightRigLegacyFlat2',
           'msoLightRigLegacyFlat1', 'msoPatternHorizontal',
           'msoShapeCross', 'IMsoPlotArea',
           'msoConditionFileTypeDesignerFiles', 'msoLanguageIDKhmer',
           'msoWarpFormat36', 'msoWarpFormat37', 'msoWarpFormat34',
           'msoWarpFormat35', 'msoWarpFormat32', 'msoWarpFormat33',
           'msoWarpFormat30', 'msoWarpFormat31', 'IMsoDataTable',
           'msoTextureBrownMarble', 'offPropertyTypeBoolean',
           'msoLightRigBalanced', 'XlTickLabelOrientation',
           'msoConditionLastWeek', 'IMsoEServicesDialog',
           'msoElementSecondaryCategoryAxisLogScale',
           'msoSyncStatusLatest', 'xlPie', 'msoFontAlignBottom',
           'msoWizardActSuspend', 'msoNewfromExistingFile',
           'WebPageFont', 'msoAlertIconInfo',
           'msoBalloonButtonOptions', 'xlFloor', 'msoLanguageIDWelsh',
           'msoShape5pointStar', 'encprovdetAlgorithm',
           'msoBalloonButtonYesToAll', 'msoLanguageIDTurkmen',
           'msoDateTimeHmm', 'msoOpenFile', 'msoTextureMediumWood',
           'CustomXMLNode', 'msoTextureDenim', 'msoAnimationGetArtsy',
           'IAccessible', 'msoElementLegendBottom',
           'msoPatternLargeGrid', 'xl3DSurface',
           'msoElementChartTitleNone', 'sigdetDelSuggSignerEmail',
           'IMsoChart', 'msoLanguageIDTurkish', 'msoLightRigTwoPoint',
           'msoTextureCork', 'MsoShapeType', 'msoCTPDockPositionLeft',
           'msoLanguageIDMarathi', 'CommandBarComboBox',
           'msoConditionYesterday', 'msoLanguageIDArabic',
           'msoExtrusionTopLeft', 'XlErrorBarDirection',
           'DiagramNodes', 'mfPlainText', 'msoTabAlignLeft', 'xlCap',
           'msoPatternWeave', 'msoShapeStylePreset38',
           'msoConditionFileTypeBinders',
           'msoLanguageIDRomanianMoldova',
           'msoSharedWorkspaceTaskStatusNotStarted',
           'msoCharacterSetEnglishWesternEuropeanOtherLatinScript',
           'msoButtonTextBelow', 'xlColumnClustered',
           'xlTickLabelPositionLow', 'ThemeEffectScheme',
           'msoMaterialWireFrame', 'msoGradientFromCenter',
           'HTMLProject', 'msoComment', 'msoFeatureInstallNone',
           'xlVAlignBottom', 'msoLanguageIDEnglishBelize',
           'msoFormControl', 'msoShapeStylePreset31',
           'xlShowLabelAndPercent', 'msoShapeStylePreset32',
           'xlLineMarkers', 'msoThemeLight2',
           'msoElementDataLabelInsideBase', 'MsoCalloutType',
           'msoElementLegendLeft', 'msoTextEffectShapeInflateTop',
           'msoBarMenuBar', 'msoTextureGranite', 'RulerLevel2',
           'msoSyncErrorUnknown', 'xl3DAreaStacked100',
           'xlUnderlineStyleNone', 'msoScriptLocationInHead',
           'msoCameraIsometricRightUp', 'msoConditionTomorrow',
           'GridLines', 'msoBalloonErrorBadPictureRef',
           'msoElementErrorBarStandardError', 'msoGradientMahogany',
           'msoShapeCloud', 'msoBalloonButtonNull',
           'msoFileFindSortbyTitle', 'xlConeToMax',
           'msoBlogNoCategories', 'sigdetHorizResolution',
           'MsoTriState', 'msoMetaPropertyTypeComputed',
           'msoAnchorTop', 'msoButtonSetRetryCancel',
           'msoShapeIsoscelesTriangle', 'msoThemeComplexScript',
           'msoUnderlineDottedHeavyLine', 'msoBulletThaiNumParenBoth',
           'msoEncodingISO885915Latin9',
           'msoLanguageIDTigrignaEritrea', 'xlTop',
           'msoEncodingOEMCyrillic', 'msoTextEffect19', 'msoShadow22',
           'msoFileTypeNoteItem', 'XlBorderWeight', 'msoBringForward',
           'MsoAnimationType', 'msoShapeFlowchartDelay',
           'ThemeFontScheme', 'msoShapeStyleNotAPreset',
           'msoAfterLastSibling', 'DocProperties',
           'msoSyncVersionServer', 'msoCameraLegacyObliqueTopRight',
           'msoLanguageIDMalayalam', 'Assistant', 'MsoOLEMenuGroup',
           'msoTextEffectShapeStop', 'MsoFileType',
           'msoElementPrimaryCategoryAxisMillions', 'msoLightingNone',
           'xlMarkerStyleTriangle', 'msoTextEffectShapeButtonCurve',
           'BalloonCheckboxes', 'msoBarFloating',
           'msoLightRigLegacyHarsh3', 'msoLightRigLegacyHarsh2',
           'msoLightRigLegacyHarsh1', 'msoLanguageIDFrenchHaiti',
           'xlAxisCrossesMaximum', 'msoShapeWave',
           'msoBalloonButtonClose', 'msoElementDataLabelRight',
           'encprovdetCipherMode', 'msoTexturePapyrus',
           'msoElementSecondaryValueAxisNone', 'xlLogarithmic',
           'msoCameraPerspectiveContrastingRightFacing',
           'msoBulletAlphaLCParenBoth', 'msoCalloutDropCustom',
           'msoDateTimeFormatMixed', 'msoPatternSphere',
           'msoLanguageIDArabicAlgeria', 'msoMaterialClear',
           'MsoNumberedBulletStyle', 'msoEncodingEUCKorean',
           'MsoBackgroundStyleIndex',
           'msoElementPrimaryValueAxisTitleRotated',
           'msoEncodingHZGBSimplifiedChinese', 'msoShapeSquareTabs',
           'msoGradientEarlySunset', 'msoPathType1', 'msoPathType2',
           'msoPathType3', 'msoPathType4', 'xlPyramidToPoint',
           'xlSurfaceTopView', 'Points', 'msoLightingBottomRight',
           'xlAutomaticScale', 'msoPatternLightDownwardDiagonal',
           'msoAlignLeft', 'msoSendToBack', 'msoTabStopMixed',
           'xlColumn', 'msoElementPrimaryValueGridLinesNone',
           'xlPieExploded', 'msoDiagramCycle',
           'msoLineLongDashDotDot', 'SignatureDetail',
           'msoUnderlineDoubleLine',
           'msoElementPrimaryValueAxisLogScale', 'msoCreateNewFile',
           'msoTextEffect24', 'msoTextEffect25', 'msoTextEffect26',
           'msoTextEffect27', 'msoTextEffect20', 'msoTextEffect21',
           'msoTextEffect22', 'msoTextEffect23', 'msoLanguageIDTatar',
           'xlStockVOHLC', 'msoTextEffect29', 'msoGradientGoldII',
           'msoTabStopCenter', 'msoShapeFlowchartManualInput',
           'msoButtonSetAbortRetryIgnore',
           'msoShapeFlowchartAlternateProcess',
           'msoOrientationVertical',
           'MsoCustomXMLValidationErrorType', 'msoLightRigSoft',
           'msoGradientCalmWater', 'msoLanguageIDEnglishJamaica',
           'msoConditionFileTypeExcelWorkbooks',
           'msoCharacterSetArabic', 'msoDateTimeMMyy',
           'msoEncodingISCIIOriya', 'msoEncodingEBCDICHebrew',
           'msoListbyName', 'msoLineLongDashDot', 'msoBevelAngle',
           'msoTextEffectShapePlainText', 'xlMajorGridlines',
           'msoControlOLEUsageBoth', 'MsoConnector',
           'msoLanguageIDYi', 'xlLineStacked',
           'MsoExtrusionColorType', 'xlFixedValue', 'MsoPatternType',
           'msoPatternLargeCheckerBoard', 'msoMedia',
           'msoLanguageIDZulu', 'msoPatternLightHorizontal',
           'msoLanguageIDPashto', 'msoCameraLegacyObliqueRight',
           'xlLegendPositionCorner', 'xlErrorBars',
           'msoLanguageIDRomanian', 'MsoWizardMsgType',
           'msoShapeBentUpArrow', 'ICustomXMLPartsEvents',
           'msoBaselineAlignAuto', 'SharedWorkspaceLinks',
           'msoConnectorStraight', 'msoLineStylePreset2',
           'msoCameraIsometricTopDown', 'TextColumn2',
           'XlTickLabelPosition', 'SharedWorkspaceTasks',
           'msoLineStylePreset3', 'msoLanguageIDFrenchReunion',
           'msoElementPrimaryCategoryAxisLogScale',
           'msoEncodingMacJapanese', 'msoAnimationLookUp',
           'msoShapeHorizontalScroll', 'MsoRGBType',
           'sigdetVertResolution', 'msoEncodingMacKorean',
           'msoControlSplitExpandingGrid',
           'msoShapeNotchedRightArrow',
           'msoCameraLegacyPerspectiveBottomLeft',
           'msoLightingBottom',
           'msoElementSecondaryValueGridLinesMinorMajor',
           'xlErrorBarIncludeNone', 'xlBelow', 'MsoBlackWhiteMode',
           'msoShapeLineCallout4NoBorder', 'msoAlertIconNoIcon',
           'SharedWorkspaceFile', 'XlHAlign', 'xlPlotArea',
           'msoFileTypeDatabases', 'MsoSyncAvailableType',
           'msoCommandBarButtonHyperlinkNone',
           'msoLanguageIDSpanishPanama', 'ChartColorFormat',
           'msoOrientationHorizontal', 'xlOutside',
           'msoScreenSize1152x900', 'CustomXMLNodes',
           'msoBulletArabicParenRight', 'msoLanguageIDVenda',
           'msoShadowStyleInnerShadow', 'xlDataLabelsShowLabel',
           'XlSizeRepresents', 'msoLanguageIDExeMode', 'PolicyItem',
           'msoLanguageIDBurmese', 'msoFileTypeJournalItem',
           'certverresUnverified', 'msoColorTypeMixed',
           'msoSyncErrorNoNetwork', 'xlLightDown',
           'msoLanguageIDBulgarian', 'msoFileDialogViewList',
           'xl3DAreaStacked',
           'msoEncodingTraditionalChineseAutoDetect',
           'xlMarkerStyleNone', 'msoModeModal',
           'msoElementUpDownBarsNone', 'msoPropertyTypeString',
           'MsoBulletType', 'msoEncodingOEMHebrew',
           'msoElementPrimaryValueAxisTitleBelowAxis',
           'certverresVerifying',
           'msoTextOrientationHorizontalRotatedFarEast',
           'msoShapeDoubleWave',
           'msoSignatureSubsetSignaturesNonVisible',
           'xlUnderlineStyleSingleAccounting', 'MsoCondition',
           'msoLightRigGlow', 'msoMaterialFlat',
           'siglnimgSoftwareRequired', 'xlGeneral',
           'msoPattern20Percent', 'msoIconAlertWarning',
           'msoShapeRegularPentagon', 'DocumentLibraryVersions',
           'msoEncodingIA5IRV', 'msoBulletAlphaUCParenBoth',
           'MsoSyncCompareType', 'msoButtonSetYesNo', 'xlMedium',
           'msoButtonSetSearchClose', 'msoControlButtonPopup',
           'msoGradientMoss',
           'msoElementSecondaryCategoryAxisTitleBelowAxis',
           'xlMinimum', 'msoShapeFlowchartOffpageConnector',
           'msoDocInspectorStatusIssueFound', 'IMsoChartData',
           'xlGrid', 'msoShapeLightningBolt', 'xlPyramidColStacked',
           'MsoThemeColorIndex', 'msoTextOrientationVertical',
           'msoShapeStylePreset12', 'msoLastModifiedThisWeek',
           'msoShapeStylePreset10', '_CustomXMLPartEvents',
           'msoShapeStylePreset16', 'msoShapeStylePreset17',
           'msoShapeStylePreset14', 'msoShapeStylePreset15',
           'msoShapeFlowchartDocument', 'msoShapeStylePreset18',
           'msoLanguageIDSwahili',
           'msoTextEffectShapeDeflateInflateDeflate',
           'msoSyncEventDownloadFailed', 'msoOLEMenuGroupEdit',
           'msoShapeFlowchartSummingJunction', 'msoTextEffect30',
           'msoSyncErrorFileNotFound', 'msoEncodingMacRomania',
           'msoColorTypeCMS', 'IMsoAxis', 'WebPageFonts',
           'msoThreeD5', 'msoTextureWhiteMarble',
           'msoBringInFrontOfText', 'msoThreeD6', 'xlCategory',
           'msoThreeD3', 'msoThreeD2', 'msoThreeD9', 'msoThreeD8',
           'msoCalloutMixed', 'CustomXMLSchemaCollection', 'xlFill',
           'msoShapeRound2DiagRectangle', 'xlLabelPositionBelow',
           'xlShowPercent', 'msoConditionFileTypeAllFiles',
           'msoAlertDefaultFifth', 'msoLanguageIDQuechuaBolivia',
           'msoEncodingWestern', 'msoButtonWrapText',
           'xlColumnStacked100', 'msoSyncEventDownloadSucceeded',
           '_CustomXMLPart', 'msoLanguageIDIgbo',
           'msoConditionAtLeast', 'msoLanguageIDChineseHongKong',
           'xlSplitByPosition', 'msoAnimationBeginSpeaking',
           'msoConditionBeginsWith', 'msoBevelConvex',
           'msoThemeFollowedHyperlink', 'IRibbonUI',
           'msoLanguageIDAzeriCyrillic', 'msoDateTimehmmAMPM',
           'msoIntegerMixed', 'msoEncodingEBCDICFinlandSweden',
           'msoTextEffectShapeDeflateBottom',
           'msoBlackWhiteLightGrayScale',
           'msoConditionFileTypeTemplates', 'msoAlertButtonYesNo',
           'msoAlertButtonYesNoCancel', 'SharedWorkspaceFolders',
           'msoLanguageIDChineseMacaoSAR',
           'msoAlertButtonYesAllNoCancel', 'msoPattern70Percent',
           'msoShapeLineCallout2', 'msoFileTypePhotoDrawFiles',
           'msoLanguageIDSpanishNicaragua', 'msoShapePie',
           'CommandBarControls', 'MsoConnectorType',
           'msoLanguageIDUrdu', 'msoMaterialMatte2',
           'msoPatternSmallGrid', 'MetaProperties', 'xl3DLine',
           'sigprovdetHashAlgorithm', 'msoLanguageIDInstall',
           'msoLanguageIDJapanese', 'msoBalloonErrorNone',
           'msoMaterialPlastic', 'sigtypeSignatureLine',
           'WebComponentProperties', 'IMsoChartTitle',
           'msoBulletHebrewAlphaDash', 'msoCalloutAngle90',
           'msoTextureTopLeft', 'msoClipboardFormatRTF',
           'msoPatternDiagonalCross', 'msoTextEffectShapeRingOutside',
           'msoScriptLanguageJava', 'msoFileTypeContactItem',
           'msoBalloonErrorTooBig', 'msoExtrusionColorAutomatic',
           'msoElementPrimaryCategoryAxisTitleBelowAxis',
           'msoGradientGold', 'MsoBalloonButtonType',
           'DocumentInspector', 'msoLanguageIDNepali',
           'sigtypeNonVisible', 'msoExtrusionBottom',
           'msoPatternPlaid', 'MsoTextCaps',
           'msoSignatureSubsetSignatureLinesUnsigned',
           'msoNoUnderline', 'msoShapeStyleMixed',
           'msoShapeLineCallout4AccentBar', 'msoPermissionView',
           'xlThin', 'msoShapeStylePreset8', 'msoShapeStylePreset9',
           'certdetAvailable', 'msoShapeStylePreset2',
           'msoShapeStylePreset3', 'msoShapeStylePreset1',
           'msoShapeStylePreset6', 'msoShapeStylePreset7',
           'msoCameraObliqueBottom', 'COMAddIns',
           'xlSurfaceWireframe', 'xlTickLabelOrientationAutomatic',
           'xlSemiGray75',
           'msoElementSecondaryCategoryAxisTitleRotated',
           'MsoAlertIconType', 'msoLanguageIDKashmiri',
           'msoLanguageIDArabicMorocco',
           'msoLanguageIDNorwegianNynorsk', 'msoBevelSoftRound',
           'msoShapeActionButtonHome', 'xlYErrorBars',
           'msoAlertCancelDefault', 'msoLanguageIDSlovak',
           'msoShapeArc', 'msoConditionIncludes',
           'msoElementPrimaryCategoryGridLinesNone',
           'SignatureProviderDetail', 'msoShapeDecagon',
           'msoCustomXMLValidationErrorManual',
           'msoLanguageIDTamazightLatin', 'siglnimgUnsigned',
           'SharedWorkspaceMember', 'msoConditionAnytime',
           'CustomXMLPrefixMappings', 'XlColorIndex', 'ShapeNodes',
           'ContentVerificationResults', 'msoWizardMsgLocalStateOff',
           'msoShape32pointStar', 'msoIconAlertInfo',
           'msoEncodingEBCDICArabic', 'LegendEntries',
           'msoShape7pointStar', 'xlHAlignJustify',
           'msoWizardMsgSuspending', 'xlLabelPositionAbove',
           'MsoFarEastLineBreakLanguageSimplifiedChinese',
           'msoLineSysDashDot', 'msoEncodingEBCDICThai',
           'xlHAlignDistributed', 'xlHAlignRight',
           'msoFillBackground', 'msoOptionsWithin',
           'msoLanguageIDSwedishFinland', 'ICTPFactory',
           'msoControlOLEUsageNeither',
           'msoConditionNotEqualToCompleted', 'msoDiagramTarget',
           'XlTickMark', 'msoBulletUnnumbered', 'msoControlLabelEx',
           'MsoLanguageID', 'msoShapeLineCallout3BorderandAccentBar',
           'msoMetaPropertyTypeLookup', 'xlTimeScale',
           '_CustomTaskPane', 'TabStops2', 'MsoCustomXMLNodeType',
           'msoTabAlignCenter', 'xlChecker', 'msoArrowheadWidthMixed',
           'msoFileDialogViewProperties', 'MsoOrgChartLayoutType',
           'msoLanguageIDEnglishNewZealand', 'xlLeaderLines',
           'msoEncodingEBCDICGreek', 'msoShapeCurvedLeftArrow',
           'DocumentProperties', 'msoLanguageIDSimplifiedChinese',
           'msoElementPrimaryValueAxisMillions',
           'xlCylinderBarClustered', 'xlLTR', 'msoAlignCenter',
           'msoReflectionType8', 'msoReflectionType9',
           'msoShapeChord', 'msoReflectionType4',
           'msoReflectionType5', 'msoReflectionType6',
           'msoReflectionType7', 'msoTexturePinkTissuePaper',
           'msoShapeMathMinus', 'msoReflectionType2',
           'msoLanguageIDAmharic', 'msoMaterialMetal2',
           'XlPivotFieldOrientation', 'msoConditionOnOrAfter',
           'msoLanguageIDArabicEgypt', 'msoShapeLineCallout1NoBorder',
           'msoCalloutAngleAutomatic', 'msoEncodingMacTurkish',
           'msoSyncCompareSideBySide', 'xl3DBarClustered', 'XlRowCol',
           'msoShapeStylePreset13', 'xlConeCol',
           'msoCameraPerspectiveAbove', 'msoDiagramMixed',
           'MsoDebugOptions_UTs', 'msoEncodingEBCDICGreekModern',
           'xlLabelPositionMixed', 'msoGradientDaybreak',
           'MsoModeType', 'msoMaterialSoftMetal',
           'msoAnimationLookUpRight', 'msoLanguageIDMacedonianFYROM',
           'msoTextureWaterDroplets', 'contverresUnverified',
           'msoEncodingEBCDICRussian', 'Font2', 'msoLineStylePreset8',
           'sigprovdetUseOfficeStampUI', 'msoCameraObliqueTop',
           'msoShapeLineCallout4BorderandAccentBar', 'msoMoveRowPrev',
           'msoPatternMixed', 'msoElementDataLabelBottom',
           'msoPresetThreeDFormatMixed', 'msoLanguageIDSpanishPeru',
           'msoAnchorNone', 'msoCameraObliqueBottomLeft',
           'msoEncodingMacHebrew', 'MsoFarEastLineBreakLanguageID',
           'xlStretch', 'msoElementChartTitleAboveChart',
           'msoButtonSetNextClose', 'msoPattern90Percent',
           'XlChartElementPosition', 'msoLanguageIDSanskrit',
           'msoBeforeFirstSibling', 'msoPatternDarkUpwardDiagonal',
           'msoFileTypePublisherFiles',
           'msoLanguageIDEnglishPhilippines', 'msoLanguageIDKorean',
           'IMsoBorder', 'msoElementLineNone', 'xlRadar',
           'msoCTPDockPositionBottom',
           'msoElementPrimaryValueAxisShow', 'msoAlignJustify',
           'msoLanguageIDGeorgian', 'ColorFormat',
           'msoCameraLegacyObliqueLeft', 'certverresExpired',
           'msoShapeFlowchartPreparation', 'msoFontAlignCenter',
           'msoElementPrimaryCategoryAxisReverse',
           'msoLanguageIDGalician', 'msoSmartArt',
           'msoConditionNotEqualToHigh',
           'msoCameraPerspectiveHeroicRightFacing',
           'msoTextureTypeMixed', 'MsoParagraphAlignment',
           'sigdetDocPreviewImg', 'msoLightingLeft',
           'msoTextEffectShapeDeflate', 'msoBevelRelaxedInset',
           'msoFileTypeTaskItem',
           'msoShapeLineCallout2BorderandAccentBar',
           'msoElementSecondaryCategoryGridLinesMinorMajor',
           'msoShapeActionButtonBeginning', 'xlVAlignTop',
           'msoThreeD4', 'msoCTPDockPositionFloating', 'msoNew',
           'msoLastModifiedYesterday', 'msoThreeD7',
           'sigdetDelSuggSigner', 'msoLanguageIDSpanishCostaRica',
           'msoShapeFlowchartMagneticDisk', 'GradientStops',
           'msoTextEffectShapeCascadeUp', 'msoAnimationGestureDown',
           'msoThreeD1', 'msoElementPrimaryCategoryAxisNone',
           'MsoFileFindListBy', 'RulerLevels2',
           'msoSyncErrorCouldNotOpen', 'msoDiagramVenn',
           'MsoTextStrike', 'msoCommandBarButtonHyperlinkOpen',
           'msoShapeLeftBracket', 'msoLine', 'xlSizeIsArea',
           'msoElementSecondaryValueAxisTitleNone',
           'msoButtonSetNone', 'xlNotPlotted', 'xlContext',
           'msoLanguageIDEnglishCaribbean',
           'msoThemeColorFollowedHyperlink', 'xlLineStacked100',
           'msoFileDialogViewLargeIcons', 'encprovdetUrl',
           'SmartDocument', 'IMsoDataLabel', 'msoTextureCanvas',
           'msoShapePentagon', 'xlLegendPositionRight',
           'msoShapeBevel', 'xlInside', 'msoPropertyTypeBoolean',
           'msoFileFindSortbyFileName', 'msoMetaPropertyTypeUnknown',
           'msoSyncAvailableNone', 'xl3DColumnStacked100',
           'MsoFileFindOptions', 'MailFormat', 'msoLineStylePreset16',
           'msoCameraIsometricTopUp', 'msoAlignCenters',
           'MsoPresetTextEffectShape', 'msoGradientSilver',
           'msoLanguageIDFrenchCanadian', 'msoLanguageIDNone',
           'msoElementPrimaryValueGridLinesMinor',
           'msoTextEffectShapeCascadeDown',
           'xlErrorBarIncludeMinusValues',
           'msoCameraLegacyPerspectiveBottomRight',
           'msoUnderlineDotDashLine', 'msoLanguageIDSinhalese',
           'msoPermissionObjModel', 'msoOrientationMixed',
           'msoBulletNone', 'msoLightRigChilly', 'msoEditFile',
           'MsoOrgChartOrientation', 'xlPercent',
           'msoTargetBrowserIE5', 'msoTargetBrowserIE4',
           'msoArrowheadShort', 'MsoBalloonType',
           'msoConditionFileTypeNoteItem',
           'msoHTMLProjectOpenSourceView', 'SearchScope',
           'msoShapeRectangularCallout', 'xlPieOfPie',
           'msoConditionFileTypeDataConnectionFiles',
           'msoLightRigFlood', 'msoLightingBright',
           'msoConnectorElbow', 'IBlogPictureExtensibility',
           'msoLanguageIDGuarani', 'msoElementLegendNone',
           'msoEncodingISO2022JPJISX02021984',
           'msoCameraPerspectiveRight', 'msoLanguageIDGreek',
           'msoConditionFileTypePhotoDrawFiles', 'CalloutFormat',
           'msoLineStylePreset12', 'CustomXMLValidationError',
           'msoComboLabel', 'xlUpBars', 'MsoTargetBrowser',
           'msoBarRowFirst', 'msoLanguageIDThai', 'msoArrowheadNone',
           'msoLineStylePreset13', 'msoPatternZigZag', 'xlBottom',
           'xlCylinderBarStacked100', 'msoLanguageIDSerbianCyrillic',
           'msoFillGradient', 'msoButtonAutomatic', 'msoShadow31',
           'msoShapeLineCallout2AccentBar',
           'msoShapeLineCallout1BorderandAccentBar',
           'MsoTextChangeCase', 'msoShapeOval', 'ThreeDFormat',
           'msoSyncErrorUnauthorizedUser',
           'msoAutomationSecurityForceDisable',
           'msoBulletAlphaLCParenRight', 'XlDisplayUnit',
           'xlConeColStacked', 'msoShapeFlowchartSort', 'ChartFont',
           'msoElementSecondaryValueGridLinesMajor', 'xlHAlignLeft',
           'MsoTextUnderlineType', 'msoLanguageIDLatvian',
           'msoElementPrimaryValueAxisTitleHorizontal',
           'msoLanguageIDFrenchMonaco', 'msoShadow38', 'msoIconAlert',
           'xlDataLabelsShowValue',
           'msoShapeActionButtonForwardorNext',
           'msoLanguageIDPortuguese', 'msoAlertDefaultSecond',
           'msoButtonWrapCaption',
           'msoTextEffectAlignmentLetterJustify',
           'msoLineThickBetweenThin', 'msoLanguageIDGerman',
           'msoTextOrientationDownward', 'xlStockOHLC',
           'msoMetaPropertyTypeUserMulti', 'msoPatternTrellis',
           'msoCalloutDropBottom',
           'msoEncodingEBCDICSerbianBulgarian', 'msoCalloutThree',
           'msoFalse', 'msoGradientMixed', 'xlAreaStacked',
           'msoAnimationRestPose', 'msoShapeStylePreset5',
           'msoLineDash', 'msoConditionIncludesNearEachOther',
           'msoLanguageIDSorbian', 'msoLightRigFlat', 'Script',
           'msoLanguageIDFrenchMali',
           'msoHTMLProjectStateProjectLocked',
           'msoArrowheadStyleMixed', 'msoSingleStrike',
           'msoPatternShingle', 'xlTrendline', 'xlLeft',
           'msoColorTypeCMYK', 'xlDoughnutExploded', 'xlHAlignCenter',
           'AnswerWizard', 'msoCharWrapMixed',
           'xlDataLabelsShowBubbleSizes', 'msoEncodingISCIIBengali',
           'IMsoEnvelopeVBEvents', 'msoCameraIsometricOffAxis3Bottom',
           'msoConditionLessThan', 'OfficeDataSourceObject',
           'msoSearchInMyNetworkPlaces', 'msoControlGraphicCombo',
           'msoBulletThaiAlphaParenRight', 'MsoSyncErrorType',
           'xlLineMarkersStacked100', 'MsoFileDialogType',
           'msoButtonIcon', 'msoLanguageIDFrenchZaire',
           'msoBackgroundStylePreset9', 'MsoTextFontAlign',
           'msoLightRigMorning',
           'msoTextEffectAlignmentStretchJustify',
           'msoGradientMultiColor', 'msoLanguageIDSlovenian',
           'LineFormat', 'msoEncodingEBCDICInternational',
           'CommandBarPopup', 'xlConeBarClustered',
           'xlBubble3DEffect', 'FileDialogFilters', 'xlStockVHLC',
           'msoEncodingMacTraditionalChineseBig5',
           'msoConditionThisMonth', 'msoAnimationGoodbye',
           'msoClipboardFormatHTML', 'xlErrorBarTypeFixedValue',
           'msoEncodingSimplifiedChineseGB18030',
           'msoShapeStylePreset11', 'msoPatternDashedHorizontal',
           'xlPivotChartFieldButton', 'msoUnderlineWavyLine',
           'msoExtrusionNone', 'xlXYScatterSmoothNoMarkers',
           'xlCrissCross', 'msoShapeCircularArrow',
           'msoBlackWhiteGrayOutline', 'msoTextEffectShapeDeflateTop',
           'AnswerWizardFiles', 'msoBulletAlphaLCPeriod',
           'MsoSyncStatusType', 'msoEncodingOEMArabic',
           'msoShapeFlowchartCard', 'msoShapeFlowchartTerminator',
           'xlCylinderColStacked', 'msoCapsMixed',
           'msoConditionEqualsLow', 'msoTextEffectShapeArchUpCurve',
           'msoBalloonButtonBack', 'MsoDebugOptions_UTRunResult',
           'MsoSoftEdgeType', 'msoLanguageIDSwedish',
           'msoLanguageIDDutch',
           'msoConditionEqualsWaitingForSomeoneElse',
           'msoAnchorBottomBaseLine', 'msoPresetCameraMixed',
           'msoLanguageIDLatin', 'msoBarNoChangeDock', 'msoShadow8',
           '_CommandBarComboBoxEvents', 'msoAlignRight',
           'msoBulletHindiNumParenRight', 'ThemeFonts',
           'msoTextEffectShapeButtonPour',
           'msoSyncErrorCouldNotResolve', 'msoGradientRainbow',
           'msoLanguageIDChineseHongKongSAR',
           'msoEncodingEBCDICMultilingualROECELatin2',
           'msoFileDialogViewPreview', 'msoBulletThaiNumParenRight',
           'xlXYScatterLines', '_CommandBarButtonEvents',
           '_CommandBarButton', 'xlPageField',
           'msoAnimationSendingMail', 'msoLanguageIDCatalan',
           'msoAnimationWritingNotingSomething',
           'msoElementTrendlineNone', 'msoShadow35', 'msoShadow34',
           'msoShadow37', 'msoShadow36', 'msoScreenSize640x480',
           'xlPyramidColStacked100', 'msoShadow33', 'msoShadow32',
           'msoTextureTopRight', 'msoShapeRightArrow', 'msoShadow39',
           'ParagraphFormat2', 'msoShapePlaqueTabs',
           'msoSyncStatusNewerAvailable',
           'msoBlackWhiteBlackTextAndLine', 'msoEncodingKoreanJohab',
           'msoCanvas', 'xlDataTable', 'msoSendBackward',
           'msoConditionEqualsCompleted', 'GroupShapes',
           'BalloonCheckbox', 'msoVerticalAnchorMixed',
           'msoButtonSetOK', 'msoConditionNotEqualToLow',
           'msoFileTypeMailItem', 'msoBaselineAlignTop',
           'msoBaselineAlignMixed', 'msoEncodingTurkish',
           'msoPictureBlackAndWhite', 'msoShapeUpArrow',
           'msoElementPrimaryCategoryAxisShow',
           'msoLanguageIDAlbanian',
           'MsoFarEastLineBreakLanguageTraditionalChinese',
           'msoBackgroundStylePreset10', 'msoBackgroundStylePreset11',
           'msoFileTypeTemplates', 'msoLanguageIDTsonga',
           'msoDateTimeMMMMyy', 'xlShowLabel',
           'msoShapeStylePreset19', 'msoLightingTopRight',
           'msoMetaPropertyTypeGuid', 'msoLanguageIDBosnian',
           'msoBarNoMove', 'msoSearchInCustom', 'Signature',
           'MsoWizardActType', 'msoHyperlinkShape',
           'msoSendBehindText', 'msoTextEffectShapeInflate',
           'msoBackgroundStylePreset12', 'Scripts',
           'msoEncodingISCIIAssamese', 'msoFontAlignBaseline',
           'msoEncodingThai', 'msoMenuAnimationUnfold', 'MsoFlipCmd',
           'msoExtrusionColorTypeMixed',
           'msoConditionNotEqualToWaitingForSomeoneElse',
           'msoLanguageIDSpanishParaguay', 'msoEncodingISCIIPunjabi',
           'msoShapeQuadArrow', 'msoShape12pointStar', 'msoShapeCube',
           'SignatureSet', 'sigdetDelSuggSignerEmailSet',
           'msoTextEffectShapeChevronUp', 'MsoHTMLProjectState',
           'msoBulletCircleNumWDBlackPlain', 'xlAbove',
           'msoConditionEqualsNormal',
           'msoOrgChartOrientationVertical', 'xlMillions',
           'xlTenMillions', 'msoEncodingEBCDICIcelandic',
           'msoLineLongDash', 'msoThemeDark2', 'msoThemeDark1',
           'MsoArrowheadWidth', 'msoShapeSnip2DiagRectangle',
           'sigprovdetUrl', 'msoFileDialogViewThumbnail',
           'msoEncodingMacLatin2', 'msoLanguageIDUzbekCyrillic',
           'msoIconTip', 'msoConditionInTheNext',
           'msoElementUpDownBarsShow', 'msoChart',
           'msoControlExpandingGrid', 'msoShapeFlowchartOr',
           'msoAutoShape', 'msoLanguageIDMaori', 'MsoButtonSetType',
           'MsoDateTimeFormat', 'contverresModified',
           'msoAnimationGetTechy', 'msoCameraIsometricBottomUp',
           'siglnimgSigned', 'msoConditionFreeText',
           'msoLanguageIDChineseSingapore', 'msoShapeSnip1Rectangle',
           'MsoEditingType', 'msoPlaceholder',
           'msoBalloonErrorButtonlessModal', 'WorkflowTasks',
           'MsoFeatureInstall', 'msoOpenDocument',
           'msoFilterComparisonLessThanEqual',
           'msoShapeActionButtonDocument', 'msoLightRigSunset',
           'msoCameraPerspectiveAboveRightFacing',
           'msoLanguageIDRhaetoRomanic', 'xlDataLabel',
           'xlPivotChartDropZone', 'msoDiagramOrgChart',
           'msoEmbeddedOLEObject', 'msoConditionMoreThan',
           'msoPattern80Percent',
           'msoElementSecondaryCategoryAxisMillions',
           'msoCameraPerspectiveLeft', 'MsoBarProtection',
           'sigdetSignatureType', 'msoElementLineSeriesLine',
           'msoConditionIsYes', 'msoSyncErrorNone',
           'msoBalloonErrorCharNotTopmostForModal',
           'msoAlertCancelFifth', 'msoCameraObliqueBottomRight',
           'msoEncodingISO88593Latin3', 'MsoPresetTextEffect',
           'MsoControlOLEUsage', 'XlChartType',
           'xlMarkerStyleAutomatic', 'msoLanguageIDIbibio',
           'msoLightingBottomLeft',
           'msoEncodingMacSimplifiedChineseGB2312',
           'msoEncodingSimplifiedChineseAutoDetect',
           'msoLanguageIDCherokee', 'msoBalloonButtonTips',
           'msoLanguageIDSpanishUruguay', 'msoMaterialWarmMatte',
           'msoGradientColorMixed',
           'msoFileTypePowerPointPresentations',
           'msoConditionFileTypeCalendarItem', 'XlChartSplitType',
           'msoPropertyTypeDate', 'msoPatternDownwardDiagonal',
           'msoTextEffectAlignmentCentered', 'msoAnimationLookLeft',
           'msoTextDirectionMixed', 'msoAnimationLookDownRight',
           'msoConditionEqualsInProgress', 'SignatureType',
           'msoNotThemeColor', 'msoPatternLargeConfetti',
           'msoElementDataLabelOutSideEnd', 'msoShadow41', 'msoInk',
           'msoElementLegendRight', 'contverresValid',
           'msoShapeSmileyFace', 'msoOLEMenuGroupNone', 'xlLine',
           'msoMetaPropertyTypeNumber',
           'msoLanguageIDEnglishZimbabwe', 'xlLineMarkersStacked',
           'TextRange2', 'MsoTextTabAlign', 'msoLanguageIDVietnamese',
           'msoLanguageIDYiddish', 'msoEncodingISO88596Arabic',
           'msoElementSeriesAxisGridLinesMajor', 'CanvasShapes',
           'msoElementTrendlineAddExponential', 'xl3DColumnStacked',
           'msoBulletHindiAlpha1Period', 'msoLineStylePreset1',
           'msoLanguageIDHelp', 'msoMetaPropertyTypeNote',
           'msoShapeFlowchartDecision', 'msoUnderlineHeavyLine',
           '_CommandBarActiveX', 'msoScriptLanguageASP',
           'msoConditionNextWeek', 'xlStError',
           'msoSyncConflictMerge', 'msoScriptLanguageOther',
           'msoCameraObliqueTopRight',
           'msoShapeFlowchartManualOperation', 'msoTextureBouquet',
           'msoSyncEventUploadFailed', 'sigprovdetUIOnly',
           'msoShapeDiamond', 'msoScriptLocationInBody',
           'msoLineStyleMixed', 'xlErrorBarTypePercent',
           'msoShapeCurvedDownArrow', 'xlAxisCrossesAutomatic',
           'msoBevelRiblet', 'msoShapeFlowchartExtract',
           'xlThousandMillions', 'msoControlEdit',
           'msoBulletArabicAlphaDash', 'msoLanguageIDSesotho',
           'msoCustomXMLNodeText', 'msoSortByFileType',
           'msoOrgChartOrientationMixed',
           'msoCameraIsometricLeftDown', 'xlSquare',
           'msoArrowheadOval', 'msoConditionOnOrBefore', 'msoGroup',
           'msoTexturePreset', 'msoElementLineDropLine',
           'msoCustomXMLNodeCData', 'msoShapeNonIsoscelesTrapezoid',
           'msoUnderlineDotDotDashLine',
           'msoFilterComparisonGreaterThanEqual',
           'msoEncodingOEMGreek437G', 'msoMenuAnimationSlide',
           'MsoSyncEventType', 'msoCharacterSetJapanese', 'xlSeries',
           'msoLanguageIDArabicJordan', 'ICommandBarButtonEvents',
           'msoLanguageIDSpanishEcuador', 'msoScreenSize1600x1200',
           'msoPictureGrayscale', 'msoButtonUp',
           'EncryptionCipherMode', 'MsoCTPDockPositionRestrict',
           'msoFillSolid', 'msoEncodingEBCDICKoreanExtended',
           'msoMetaPropertyTypeUser', 'msoBalloonTypeButtons',
           'msoButtonSetTipsOptionsClose',
           'msoElementSecondaryCategoryAxisTitleVertical',
           'msoEncodingEBCDICUnitedKingdom',
           'msoShapeCurvedRightArrow', 'msoBarRight', 'xlHiLoLines',
           'msoButtonMixed', 'msoAnimationSaving', 'xlMonths',
           'msoBalloonButtonRetry', 'msoGradientChrome', 'xlCenter',
           'xlSurface', 'msoMetaPropertyTypeText', 'xlThick',
           'msoThemeHyperlink', 'msoFileTypeProjectFiles',
           'ICommandBarsEvents', 'msoEncodingOEMIcelandic',
           'msoLanguageIDTamil', 'msoEncodingISO88595Cyrillic',
           'msoBulletSimpChinPeriod', 'msoLanguageIDGaelicScotland',
           'xlMinorGridlines', 'xlPyramidBarStacked',
           'msoBevelArtDeco', 'msoConditionIsNo',
           'msoGradientVertical', 'msoCameraLegacyPerspectiveTop',
           'msoAnimationLookDown', 'msoScreenSize1024x768',
           'msoFileTypeWordDocuments', '_CommandBars',
           'msoPermissionPrint', 'xlDataLabelsShowPercent',
           'msoEncodingEBCDICUSCanada', 'xlChartArea',
           'msoLightRigLegacyNormal4', 'xlDoughnut',
           'msoLightRigLegacyNormal1', 'msoTextOrientationHorizontal',
           'xlHundreds', 'FileTypes', 'DocumentProperty',
           'MsoAlignCmd', 'sigdetNumberOfMonitors',
           'msoLanguageIDRussianMoldova', 'msoShapeStylePreset4',
           'msoElementSecondaryCategoryAxisTitleNone',
           'msoCustomCharWrap', 'msoScaleFromMiddle', 'xlNone',
           'msoAutoSizeNone', 'msoCameraPerspectiveAboveLeftFacing',
           'msoEncodingISO2022JPJISX02011989', 'MsoPathFormat',
           'xlUnderlineStyleDouble', 'msoTextureStationery',
           'xlTickLabelOrientationHorizontal', 'msoMethodGet',
           'msoShape16pointStar', 'msoTextureRecycledPaper',
           'msoConditionEndsWith', 'msoDocInspectorStatusDocOk',
           'xlSingle', 'msoGradientSapphire',
           'msoElementPrimaryValueAxisTitleNone',
           'msoScreenSize544x376', 'msoLanguageIDFrenchLuxembourg',
           'msoLanguageIDManipuri',
           'msoElementSecondaryCategoryAxisTitleHorizontal',
           'msoFileTypeDataConnectionFiles', 'msoArrowheadWide',
           'MsoBlogCategorySupport',
           'msoElementSecondaryValueAxisThousands',
           'msoFlipHorizontal', 'msoSegmentLine',
           'MsoPresetLightingDirection', 'xlGray75',
           'msoLightingNormal', 'xlLabelPositionRight',
           'msoUnderlineSingleLine', 'IAssistance',
           'msoShapeActionButtonReturn', 'msoShadowMixed',
           'msoGradientFromTitle', 'msoBulletRomanLCPeriod',
           'msoColorTypeInk', 'xlPlusValues',
           'msoPatternDarkVertical', 'msoLanguageIDSyriac',
           'msoLanguageIDTigrignaEthiopic',
           'msoEncodingArabicTransparentASMO',
           'msoEncodingMacCroatia', 'contverresVerifying',
           'msoLanguageIDArabicQatar', 'msoEncodingEBCDICItaly',
           'msoWarpFormatMixed', 'msoEditingCorner',
           'msoShapeRightTriangle', 'MsoTextDirection',
           'msoNewfromTemplate', 'msoAlignMixed',
           'msoLanguageIDEnglishCanadian', 'XlLegendPosition',
           'msoEncodingEBCDICFrance', 'msoLanguageIDChineseMacao',
           'msoSyncVersionLastViewed', 'xlBar',
           'msoEncodingISO88597Greek', 'msoLanguageIDArabicLebanon',
           'msoBulletAlphaUCPeriod',
           'msoElementSeriesAxisTitleRotated',
           'msoBulletRomanUCParenRight', 'msoPictureMixed',
           'msoWarpFormat2', 'msoShapeStylePreset41',
           'msoShapeStylePreset40', 'msoShapeStylePreset42',
           'msoConditionFileTypeDocumentImagingFiles',
           'WebComponentWindowExternal', 'msoEncodingTaiwanCNS',
           'msoElementLegendRightOverlay', 'msoExtrusionTopRight',
           'msoEncodingISCIIKannada', 'msoUnderlineDottedLine',
           'msoAnimationCheckingSomething',
           'msoEncodingEBCDICJapaneseKatakanaExtended',
           'msoLanguageIDOromo', 'xlCircle', 'XlAxisGroup',
           'encprovdetCipherBlockSize', 'msoDiagramPyramid',
           'msoExtrusionBottomRight', 'msoCalloutDropMixed',
           'msoLanguageIDBosnianBosniaHerzegovinaLatin',
           'msoLanguageIDSpanishElSalvador', 'SignatureSetup',
           'msoElementPrimaryCategoryAxisTitleNone', 'msoConnectorOr',
           'xlXYScatterSmooth', 'xlGray8',
           'msoLanguageIDGaelicIreland',
           'msoElementSecondaryValueAxisShow',
           'msoDistributeHorizontally', 'msoShadow17',
           'msoPatternDashedDownwardDiagonal', 'msoOLEControlObject',
           'msoShadow16', 'xlMarkerStylePicture', 'xlStar',
           'msoPatternDarkDownwardDiagonal', 'msoShapeChartStar',
           'msoCharacterSetSimplifiedChinese', 'xlTransparent',
           'msoConditionEqualsHigh', 'msoTextEffectShapeWave2',
           'msoTextEffectShapeWave1', 'msoControlGraphicPopup',
           'msoEncodingEBCDICUSCanadaAndTraditionalChinese',
           'msoAlertDefaultFirst', 'msoAnimationIdle',
           'msoModeAutoDown', 'sigtypeMax',
           'msoSyncErrorUnknownDownload', 'msoShadow10',
           'IMsoCharacters', 'msoEncodingIA5German',
           'msoSignatureSubsetAll', 'msoLightingTopLeft',
           'msoShape4pointStar', 'msoMetaPropertyTypeUrl',
           '_CommandBarsEvents', 'msoTextEffectShapeArchUpPour',
           'Axes', 'msoConditionFileTypeProjectFiles',
           'msoMetaPropertyTypeCurrency', 'msoLanguageIDPolish',
           'msoAlertDefaultFourth', 'MsoButtonState', 'DiagramNode',
           'msoEncodingOEMModernGreek', 'ShapeRange',
           'msoTextOrientationVerticalFarEast', 'msoTextureWovenMat',
           'IMsoSeries', 'msoElementLegendLeftOverlay',
           'xlScaleLogarithmic', 'MetaProperty', 'xlHundredMillions',
           'Permission', 'msoEncodingEUCTaiwaneseTraditionalChinese',
           'xlChartTitle', 'MsoDebugOptions_UTManager',
           'msoPatternSolidDiamond', 'msoSortOrderAscending',
           'msoCameraLegacyObliqueBottom',
           'msoCustomXMLValidationErrorSchemaGenerated',
           'xlLightVertical', 'IMsoAxisTitle',
           'msoEncodingEBCDICTurkishLatin5', 'xlMarkerStyleDash',
           'MsoHyperlinkType', 'xlPyramidBarClustered',
           'msoCameraLegacyObliqueTopLeft',
           'CustomXMLValidationErrors', 'xlDisplayUnitCustom',
           'msoAnimationGetAttentionMajor', 'msoLanguageIDArabicUAE',
           'msoTextEffectShapeSlantUp', 'msoLanguageIDSindhi',
           'xlPower', 'msoFilterComparisonNotContains',
           'msoConditionFileTypeWebPages', 'msoThemeLatin',
           'msoLineDashDotDot', 'msoSortOrderDescending',
           'msoAnimationGestureRight', 'msoBulletRomanLCParenRight',
           'msoEncodingOEMCanadianFrench', 'msoColorTypeRGB',
           'msoTextureBottom', 'IBlogExtensibility',
           'msoMoveRowFirst',
           'msoEncodingISO2022CNTraditionalChinese',
           'msoControlButtonDropdown',
           'msoSharedWorkspaceTaskStatusWaiting', 'msoPermissionRead',
           'sigdetSignedData', 'MsoArrowheadStyle',
           'msoPictureWatermark', 'msoLanguageIDRussian',
           'msoEncodingTaiwanTeleText', 'msoLinkedOLEObject',
           'msoShapeSun', 'msoThemeColorDark1', 'msoThemeColorDark2',
           'sigdetApplicationName', 'MsoDiagramNodeType',
           'msoCommandBarButtonHyperlinkInsertPicture',
           'IMsoInterior', 'msoLightRigLegacyFlat4',
           'MsoClipboardFormat', 'ChartPoint', 'CustomTaskPaneEvents',
           'msoShadowStyleMixed', 'msoEncodingEBCDICGermany',
           'xlPolynomial', 'msoClipboardFormatNative', 'NewFile',
           'DocumentLibraryVersion', 'xlCylinder',
           'MsoCommandBarButtonHyperlinkType',
           'msoEncodingArabicASMO', 'msoFileDialogViewSmallIcons',
           'msoShapeGear9', 'LegendEntry',
           'xlDataLabelsShowLabelAndPercent',
           'msoLanguageIDQuechuaEcuador', 'msoShapeGear6',
           'msoConditionFileTypeJournalItem',
           'msoPatternDiagonalBrick', 'PropertyTest',
           'xl3DBarStacked', 'msoFileDialogViewTiles', 'msoThreeD17',
           'xlConeColStacked100',
           'msoElementPrimaryCategoryAxisTitleRotated',
           'msoConditionNotEqualToInProgress', 'xlVAlignDistributed',
           'msoEncodingISCIITelugu', 'PropertyTests',
           'msoLanguageIDSpanishBolivia', 'msoShapeFlowchartProcess',
           'xlLegendPositionCustom', 'msoShapeMathDivide',
           'msoTextEffectShapeDeflateInflate',
           'msoConditionAnytimeBetween', 'SearchFolders',
           'msoBulletKanjiSimpChinDBPeriod', 'msoLanguageIDSepedi',
           'msoControlWorkPane', 'msoThemeColorBackground2',
           'msoThemeColorBackground1', 'msoTextEffectAlignmentRight',
           'msoShapeActionButtonHelp', 'MsoReflectionType',
           'xlTickLabelPositionHigh', 'ChartGroups',
           'msoEncodingKoreanAutoDetect',
           'msoShapeFlowchartDirectAccessStorage', 'MsoControlType',
           'msoShapeRightBracket', 'IMsoLegend', '_IMsoOleAccDispObj',
           'msoOLEMenuGroupFile', 'xlTickLabelOrientationUpward',
           'msoBottomSection', 'MsoFilterConjunction',
           'msoSearchInMyComputer', 'msoButtonSetBackNextClose',
           'ThemeColorScheme', 'MsoDistributeCmd',
           'msoEncodingMacRoman', 'IMsoTrendline', 'msoLightingDim',
           'xlLabelPositionOutsideEnd', 'msoCalloutDropTop',
           'msoCharacterSetGreek', 'IMsoDispCagNotifySink',
           'msoShapeLineCallout3NoBorder',
           'msoMetaPropertyTypeBoolean', 'msoControlOLEUsageServer',
           'msoScreenSize720x512',
           'msoCameraPerspectiveRelaxedModerately',
           'msoLanguageIDSindhiPakistan', 'msoScreenSize800x600',
           'msoShape6pointStar', 'msoLanguageIDBelgianDutch',
           'msoNoStrike', 'msoFileDialogOpen', 'xlDownBars',
           'msoTextEffectAlignmentLeft', 'msoScreenSize1280x1024',
           'msoUnderlineDashHeavyLine', 'msoLightingRight',
           'msoLineThinThick', 'xlDownward',
           'msoEncodingJapaneseAutoDetect', 'msoPropertyTypeFloat',
           'msoLanguageIDFrenchWestIndies', 'MsoGradientColorType',
           'CommandBarControl', 'msoLanguageIDGermanLuxembourg',
           'msoScaleFromBottomRight', 'msoMenuAnimationNone',
           'MsoZOrderCmd', 'msoThemeColorHyperlink',
           'msoElementSecondaryCategoryGridLinesMinor']
from comtypes import _check_version; _check_version('')
