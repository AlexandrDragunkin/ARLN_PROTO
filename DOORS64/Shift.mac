//-- Макропрограмма рисования одного комплектующего
//-- Входные параметры:
//-- x1,y1,z1 - координаты начала профиля, по которому расставлять комплектующие
//-- x2,y2,z2 - координаты конца профиля
//-- IDPrice - ID комплектующего из прайса
//-- Name - название типа комплектующего из таблицы Types_Komp базы DoorSys.mdb
//-- Shift - величина начального и конечного сдвига комплектующего по профилю
//-- Coeff - коеффициент сдвига по длине профиля
//-- MacroExtra - имя макропрограммы дополнительных преобразований
//-- Положение комплектующего определяется формулой Shift+lenght*Coeff,
//-- где Lenght - вычисляемая длина профиля
//-- Хотелось бы уметь двигать комплектующее вдоль профиля

nullout=getvarinst(2,"Doors64",Doors64,"Doors64.zmc|");

global ProtoPath  g_UserVar g_InstOpt  g_symx g_symy  g_holder g_Shift g_Coeff;
global g_ExName g_ExVal g_ExInf; // массивы дополнительных параметров  системы
global
PrfP_1   // Подрез начальной точки
PrfP_2   // Подрез конечной точки
PrfSd_X  // Сдвиг по Х ЛСК
PrfSd_Y  // Сдвиг по У ЛСК
PrfAngle // Угол поворота вокруг оси (град)
PrfAng_1 // Угол подрезки 1 стороны
PrfAng_2 // Угол подрезки 2 стороны
;
defarr aUnitC[20];
defarr trans[16], in[3], out[3]; // Задаем массивы
NULLOUT=Ohcunit(trans);          // Задаем единичную матрицу преобразований
if (!IsAttrdef("HoldUC")) {Attribute Create "HoldUC" "UnitCod владельца" string 15 35 ;}
getpar x1,y1,z1 x2,y2,z2 IDPrice,Name,Shift,Coeff,MacroExtra;

defarr Groups[10]; //-- Группы элементов
global g_result;
//-- Умолчания на направления оси OY
xp3=x1;
yp3=(y1+y2)/2+10;
zp3=z1;

//#OBJUCS box 0 0 0 1 1 1 ;
nulout=GetSnap();
setucs x1,y1,z1 oz x2,y2,z2 done ; //xp3,yp3,zp3;
//-- Находим количество элементов
dx=x1-x2;
dy=y1-y2;
dz=z1-z2;
lenght=sqrt(dx*dx+dy*dy+dz*dz);
posx=0;
posy=0;
Shift=iif(g_Shift==0,Shift,g_Shift);
Coeff=iif(g_Coeff==0,Coeff,g_Coeff);
posz=iif(coeff==-1,lenght-shift,shift+lenght*Coeff);
//putmsg(str(Coeff),1);
//putmsg(str(posz),1);
//- углы поворота
AnX=0
AnY=0
AnZ=0
//-

macro ProtoPath+"SetEnam.mac" Name ;

nulout=initarray(aUnitC,"*");
//- Обрабатываем ситуацию когда надо крутить вокруг оси сечения например прищепки для шлегеля
parName="PrcX";
gosub SetExParam;
SdvX=parVal*iif(g_symx==1,(-1),1)
parName="PrcY";
gosub SetExParam;
SdvY=parVal*iif(g_symy==1,(-1),1)
parName="PrcZ";
gosub SetExParam;
SdvZ=parVal
//- Параметр ifUnitCode строка со списком допустимых значений атрибута UnitCode  разделенных запятой
parName="ifUnitCode";
gosub SetExParam;
vUnitC=parVal;
// putmsg(vUnitC)
//- Ситуация обязательной установки. Нужен признак ставить не ставить возможны варианты InstallOption
// 0-всегда 1-никогда 2-вариант пользователя
//- В ряде случаев надо выбирать из всех возвожных вариантов какой то один из всех предложенных в IfUnitCode
//- так при устанвке замка  есть три варианта (к стати для ручек таже песня)
//" |- замок справа-|"
//" |- замок слева-|"
//" |- 2 замка -|"
//- вариант может определять система или пользователь
//- изначально мы можем поставить замок на обе стороны дверки  vUnitC=6302,6304  если vUnitC=6302-слева или vUnitC=6304-справа
//- заметим, что это условие касается характеристики положения профиля в створке и не касается его геометрических характеристик
//- Наличие параметра InstallOption говорит о неоднозначности установки комплектующего если его нет то ставим везде где можем vUnitC=6302,6304
//- в противном случае необходимо создать запись для редактирования через скрейч установки комплектующего g_UserVar
//- смотрим в скрейче наличие записи InstallOption 
//- Кроме того возможен вариант задания параметра Shift из скрейча параметр этот Shift
parName="InstallOption";
gosub SetExParam;
g_InstOpt=parVal;
macro Protopath+Doors64+"ScrKomplGetSub.mac";
// putmsg("shift g_InstOpt="+str(g_InstOpt),1);
//======================================================
if g_InstOpt==1
{
	// putmsg("g_InstOpt==1")
   goto end;
}
if g_InstOpt==2
{
   if isvardef("g_UserVar")==0
   {
		// putmsg("g_InstOpt==2&&isvardef("g_UserVar")==0")
      goto end;
   }
   vUnitC=iif(g_UserVar=="",vUnitC,g_UserVar);
}
//======================================================
UnitC=Getattr(g_holder,"UnitCode","*");
vUnitC=str(vUnitC);
// putmsg("vUnitC="+vUnitC,1);
// putmsg("UnitC="+UnitC,1);
// putmsg("IDPrice="+str(IDPrice),1);
if len(vUnitC)>1
{
   Nulout=SplitByDelim(vUnitC,",",aUnitC);
   fPos=findinarray(aUnitC,val(UnitC));
}
else
{
   fPos=0;
}
if fpos==0
{
	// putmsg("fpos==0")
   goto end;
}


NULLOUT=Otdrot(trans,3,PrfAngle);     // Заносим в эту матрицу поворот относительно оси Z на
out[1]=SdvX*trans[1]+SdvY*trans[2]+0*trans[3]+trans[4];   // Вычисляем координаты
out[2]=SdvX*trans[5]+SdvY*trans[6]+0*trans[7]+trans[8];
out[3]=SdvX*trans[9]+SdvY*trans[10]+0*trans[11]+trans[12];
//macro ProtoPath+"SetProfC.mac" IDPrice Shift Shift PrfSd_X+out[1] PrfSd_Y+out[2] PrfAngle 0 0 0;   //*iif(g_symx==1,1,-1)
//- Ситуация когда надо учитывать зеркальность профиля например для замка
parName="MirrY"
gosub SetExParam;
MirrY=parVal;
parName="MirrZ"
gosub SetExParam;
MirrZ=parVal;


Macro ProtoPath+"find_ind_gr.mac" IDPrice, Groups;
// putmsg("Shiftmac IDPrice="+str(IDPrice),1);
// putmsg("Shiftmac Groups[1]="+str(Groups[1]),1);
if (Groups[1]==0)
{
	putmsg("В Shift.mac для ID="+str(IDPrice)+" отказ в установке. Без группы");
	goto end;
}
macro ProtoPath+"GetMake.mac" Groups[2];
//putmsg("g_symx g_symy prfangle  mirrY mirrZ"+str(g_symx)+"   "+str(g_symy)+"   "+str(prfangle)+"   "+str(mirrY)+"   "+str(mirrZ),1);
// putmsg("MakeElem");
macro ProtoPath+"MakeElem.mac" g_result
								IDPrice
								posx+iif(g_symy,sdvy,sdvx)
								posy+iif(g_symy,-sdvx,sdvy)
								posz+SdvZ mirrZ*180
								iif(g_symx,mirrY,0)*180-90+prfangle
								iif(g_symx,mirrZ,0)*180;
objident last 1 obj;
if len(vUnitC)>1 
{
	;Attrobj Attach "HoldUC" Done obj str(vUnitC);
}
if (len(MacroExtra)!=0)
{
  macro ProtoPath+MacroExtra obj;
}
end:
// putmsg("end")
macro Protopath+Doors64+"ScrKomplAddSub.mac"  ;
nulout=ReSnap();
//setucs lcs OBJUCS ;
//delete OBJUCS ;
exit;
//========================================================
SetExParam:
        pos=FindInArray(g_ExName,parName);
        //putmsg("Shiftmac parName="+str(parName),1);

        //putmsg("pos="+str(pos),0);
        if pos>0
        {
                parVal=g_ExVal[pos];

        }
        else
        {
                parVal=0;
        }
        //putmsg("Shiftmac parVal="+str(parVal),1);
return;
