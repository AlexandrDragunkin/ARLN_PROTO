global ProtoPath;
global UndoMode;
global PKM_SP ;
if isvardef("PKM_SP")>0
{
   //Функция определяет, определена ли к данному моменту переменная, имя которой содержит строка variable. Функции возвращает:
   //0  – переменная не определена;
   //3  – переменная является массивом
   //5  – переменная числового типа
   //6  – переменная строкового типа
   //16  – переменная является ссылкой на объект
    macro ProtoPath+"Glob_Sp.mac" ; // Загружаем переменныые для макросов из   SUPPORT
}
if isvardef("UndoMode")!=5 { UndoMode=0; }
//LnTPath.mac
//*********************************************
//  установка длинномера на элемент контура
//              Драгункин А.Р.
//              ГеоС 2007-2011 г.
//*********************************************
global Xn Yn Zn Xk Yk Zk ;

defarr
First[3]  //Точка указатель
Vector[3] //нормаль контура
xmm[15]
xm[6]
bd[11]
Back[9]
PhArr[4] //для проверки статуса контура
;
onerror metend ;
setucs save "LnPath" ;
setucs gcs  ;
getpar auto ;
CurCollor=SysVar(40) ;
err=SysArr(41,Back);
CurColBack=Back[1];
If (CurCollor==CurColBack)
{
  CurCollor=1;
}
color CurColback;
//IdPoly=1;
if (auto==0)
{
  get "Укажите элемент контура (или нажмите Esc для прекращения работы)" point missing first[1] first[2] first[3] near :
}
if (auto==1)
{
//  getpar pnt;
   getpar first[1] first[2] first[3] ;
}
if (auto==2)
{
	getpar pnt pnt1 IdPoly;
	gosub SNormal;
//	defarr obj[N] ;
	Objects=Sysvar(60)
	IdPoly=iif(IdPoly>1,-1,1);

	goto labT2;
}
err=FltrType(7) ;
select ^first[1] first[2] first[3] done;
err=FltrType(0) ;
If (SysVar(61)==0)
{
  PutMsg("Ошибка! Указанный объект не контур",0) ;
  goto metend ;
}

pnt=GetSelNum(1);


//==Проверка статуса контура
//он должен быть плоским замкнутым не иметь самопересечений и лежать в плоскости параллельной XY
Err=ContStatus(pnt,PhArr) ; //Функция заполняет массив PhArr статусом указанного контура (в том числе отрезка,
//дуги, окружности и сплайна) с именем Obj. Arr - массив от одного до трех
//элементов. На выходе в массив Arr будет записано:
//PhArr[1] - 0 контур не плоский; 1 контур плоский
//PhArrArr[2] - 0 контур не замкнутый; 1 контур замкнутый
//PhArrArr[3] - 0 контур с самопересечениями; 1 контур без самопересечений
//Функция возвращает код ответа:
//0 - ошибка: Obj не является контуром
//1..3 - количество заполненных элементов массива Arr (зависит от размерности массива PhArr)
if (PhArr[1]!=1||PhArr[2]!=1||PhArr[3]!=1)
{
  if (PhArr[1]!=1)
  {
    PutMsg("Ошибка! Указанный контур не плоский.",0) ;
  }
  if (PhArr[2]!=1)
  {
    PutMsg("Ошибка! Указанный контур не замкнутый.",0) ;
  }
  if (PhArr[3]!=1)
  {
    PutMsg("Ошибка! Указанный контур с самопересечением.",0) ;
  }
  goto metend ;
}
gosub SNormal;

PtransCS(0,3,first[1],first[2],first[3],first[1],first[2],first[3]) ;
N=GetCntObjG(pnt);
defarr obj[N] ;
objects=Sysvar(60);
#pnt1 move pnt done 0 0 0 copy 1 ;
invisible pnt done ;

explode pnt1 done ;
err=FltrType(2) ;
err=FltrType(4) ;
Rendmode,,0
select ^first[1] first[2] first[3] done;
if (sysvar(61)==0)
{
  delete last Sysvar(60)-objects done ;
  visible pnt done ;
  goto metend; ;
}
pnt1=GetSelNum(1) ;

labT2:
err=FltrType(0) ;

Typ=GetObjType(pnt1) ;

NULLOUT=GetObjGeo(pnt1,xmm) ;
Objects=Sysvar(60)-Objects;
if Objects>0 { delete  last Objects ; }
Visible pnt done ;
#pnt2 Move pnt done 0 0 -10 copy 1 ;
#Tl Extrusion pnt2 done vector 0 0 20 ;
If (Typ==4)
{
  Xn=xmm[8];
  Yn=Xmm[9];
  Zn=xmm[10];
  Xk=xmm[11];
  Yk=Xmm[12];
  Zk=xmm[13];
  Xpcr=Xn+(Xk-Xn)/2;
  Ypcr=Yn+(Yk-Yn)/2;
  Zpcr=Zn+(Zk-Zn)/2;
  setucs Xn Yn Zn Xk Yk Zk xmm[5] xmm[6] xmm[7];
  PtransCS(3,0,Xpcr,Ypcr,Zpcr,xcp,ycp,zcp) ;
  setucs gcs ;
  InP=Inouttest(Tl,Xpcr,Ypcr,Zpcr)*IdPoly ;
  s=0;
  If (InP<0) //Значит R<0
  {
    R=-Xmm[1];
  }
  If (InP>=0) //Значит R>0
  {
    R=Xmm[1];
  }
  color CurCollor ;
  if (R>0&&((xmm[4]>0&&xmm[15]<0)||(xmm[4]<0&&xmm[15]>0)))||(R<0&&((xmm[4]>0&&xmm[15]>0)||(xmm[4]<0&&xmm[15]<0)))
  {
    macro ProtoPath+"BendPrkar.mac"  1 R Xk Yk Zk Xn Yn Zn Xk Yk Zk 0 0  ;
  }
  if (R>0&&((xmm[4]>0&&xmm[15]>0)||(xmm[4]<0&&xmm[15]<0)))||(R<0&&((xmm[4]>0&&xmm[15]<0)||(xmm[4]<0&&xmm[15]>0)))
  {
    macro ProtoPath+"BendPrkar.mac"  1 R Xn Yn Zn Xk Yk Zk Xn Yn Zn 0 0  ;
    GoSub NulCh;
  }
} //дуга
If (Typ==2)
{
  Xn=xmm[1];
  Yn=Xmm[2];
  Zn=xmm[3];
  Xk=xmm[4];
  Yk=Xmm[5];
  Zk=xmm[6];
  err=GetBentProf(bd) ;
  bd[1]=0;
  bd[2]=0;
  bd[3]=0;
  if (bd[10]==0)
  {
    bd[10]=50;
  }
  bd[11]=0;
  if (bd[3]>0)
  {
    bd[11]=1;
  }
  Result=SetBentProf(Bd);
  Visible pnt done ;
  color CurCollor ;
  Xpcr=Xn+(Xk-Xn)/2;
  Ypcr=Yn+(Yk-Yn)/2;
  Zpcr=Zn+(Zk-Zn)/2;
  Setucs Xn Yn Zn Xk Yk Zk Xn Yn Zn+1 ;
  setucs rotate 2points 0 0 0 1 0 0 -90 ;
  PtransCS(3,0,Xpcr,Ypcr,Zpcr,xcp,ycp,zcp) ;
  Ycp=Ycp-1;
  PtransCS(0,3,xcp,ycp,zcp,xcp,ycp,zcp) ;
  setucs gcs;
  InP=Inouttest(Tl,xcp,ycp,zcp)*IdPoly ;
  s=0;
  NULLOUT=GetPntPos(xcp,ycp,zcp,Tl,s);
  color CurCollor ;
  err=GetBentProf(bd) ;
  If InP<0
  {
//    if UndoMode==1 { Macromode Undo on; }
    longcreate   Xn Yn Zn Xk Yk Zk ;
//    if UndoMode==1 { Macromode Undo off; }
    GoSub NulCh ;
  }
  If (InP>0)
  {
//    if UndoMode==1 { Macromode Undo on; }
    longcreate   Xk Yk Zk Xn Yn Zn ;
//    if UndoMode==1 { Macromode Undo off; }
  }
}
Objident last 1 LnObj1 ;
metend:
Delete iif(isvardef("Tl")==16,Tl,"") iif(isvardef("pnt2")==16,pnt2,"") done;
if auto==2
{
	Delete iif(isvardef("pnt")==16,pnt,"") done;
}
color CurCollor ;
setucs restore "LnPath" ;
setucs delete "LnPath" ;
offerror;
redraw,,
exit ;
//=======================ПРОЦЕДУРЫ
NulCh:           //смена мест начала и конца
XKo=xk;
Xk=Xn;
Xn=XKo;
YKo=Yk;
Yk=Yn;
Yn=YKo;
ZKo=Zk;
Zk=Zn;
Zn=ZKo;
return;
//========================
SNormal:
	//===
	NULLOUT=ContNorm(pnt,Vector) ; //определяем нормаль контура
	//1)Функция ContNorm возвращает нормализованный вектор построенный с точностью 1.e-6
	//2) Плавающая арифметика никогда не была точной, поэтому ВСЕГДА надо учитывать погрешность вычисления
	NULLOUT=GetVarInst(2,"g_eps",g_eps,0.01); // Погрешность округления
	if (Abs(vector[3])<1-g_eps)
	{
	  //PutMsg("Vector Z="+str(vector[3]),1) ;
	  PutMsg("Ошибка! Указанный контур не параллелен XOY ГСК",0) ;
	  goto metend ;
	}
	If (vector[3]>1-g_eps)
	{
	  #pnt editpath pnt reorient ;
	}
	err=objgab3(pnt,xm) ;
	xcg=xm[1]+(xm[4]-xm[1])/2;
	ycg=xm[2]+(xm[5]-xm[2])/2;
	zcg=xm[3]+(xm[6]-xm[3])/2;
return;