//-- Авторазмер центров от базы.
defarr first[3], second[3], next[3];
defarr  xm[6] ;
defarr arr[14];
defarr xm1[500] xm2[500];
global TXT_cut;

NULLOUT=GetSnap();

objident prompt "Укажите базовый объект" : pnt ;

get "Первая точка" point missing  first[1] first[2] first[3]  :
get "Следующая точка" point first[1] first[2] first[3]
second[1] second[2] second[3]  :

get "Положение размерной линии" point first[1] first[2] first[3]
next[1] next[2] next[3]  :

dx=second[1]-first[1];
dy=second[2]-first[2];
dz=second[3]-first[3];

if ((abs(dx)>abs(dy))&&(abs(dx)>abs(dz))) //-- размер по X
{
  code=1;
}
else
{
  if ((abs(dy)>abs(dx))&&(abs(dy)>abs(dz))) //-- размер по Y
	{
    code=2;
  }
  else
	{
    if ((abs(dz)>abs(dy))&&(abs(dz)>abs(dx))) //-- размер по Z
		{
      code=3;
    }
  }
}
object_2=sysvar(60);
i=0;
j=0;

NEXT1:
i=i+1;
If (i<=object_2)
{
  point=getobjnum(i);
  name=getattr(point,"Posit",-1);
  If (name==10) {    goto NEXT1;  } // Игнорируем Каркас
  if (name==16) { goto NEXT1; } // Игнорируем ящики
  if (name==17) { goto NEXT1; } // Игнорируем двери
  if (name==20) { goto NEXT1; } // Игнорируем двери
  if (name==-1) { goto NEXT1; } // Игнорируем не мебельные эл-ты

	//-- Получаем информацию о текущем положении объекта
	rr=objgab3(point,xm);
	xmn1=xm[1];
	ymn1=xm[2];
	zmn1=xm[3];
	xmn2=xm[4];
	ymn2=xm[5];
	zmn2=xm[6];

	if (code==1) //-- Размер по оси X
	{
		if (name==14) { goto NEXT1; } //-- Игнорируем стенки
		if (name==13) { goto NEXT1; } //-- Игнорируем стенки
		//-- Если координата Z первой точки пересекает объект
		if (first[3]>zmn1)&&(first[3]<zmn2)
		{
		  //-- Берем объект в рассмотрение (заносим в массив его габариты)
			j=j+1;
			xm1[j]=(xmn2+xmn1)/2;
			xm2[j]=xmn2;
		}
	}
	if (code==2) //-- Размер по оси Y
	{
		if (name==11) { goto NEXT1; } //-- Игнорируем стойки
		if (name==12) { goto NEXT1; } //-- Игнорируем полки
		//-- Если координата Z первой точки пересекает объект
		if (first[3]>zmn1)&&(first[3]<zmn2)
		{
	    //-- Берем объект в рассмотрение (заносим в массив его габариты)
	    j=j+1;
		  xm1[j]=ymn1;
			xm2[j]=ymn2;
		}
	}
	if (code==3) //-- Размер по оси Z
	{
		if (name==14) { goto NEXT1; } //-- Игнорируем стенки
		if (name==13) { goto NEXT1; } //-- Игнорируем стенки
		//-- Если координата X первой точки пересекает объект
		if (first[1]>xmn1)&&(first[1]<xmn2)
		{
			//-- Берем объект в рассмотрение (заносим в массив его габариты)
	    j=j+1;
		  xm1[j]=(zmn2+zmn1)/2;
			xm2[j]=zmn2;
		}
	}
  goto NEXT1;
}

//-- Если объектов не нашлось, выходим
if (j==0)
{
	goto END_P;
}

minx=min(second[code],first[code]);
maxx=max(second[code],first[code]);

//-- Получаем информацию о текущем положении указанного объекта
rr=objgab3(pnt,xm);
xmn1=xm[1];
ymn1=xm[2];
zmn1=xm[3];
xmn2=xm[4];
ymn2=xm[5];
zmn2=xm[6];

if (second[code]<first[code])
{
   xmn1=xmn2;
   ymn1=ymn2;
   zmn1=zmn2;
}
x1=maxx;
NULLOUT=sysarr(43,arr);
grfcur=arr[3];    // Текущий граф.коэффициент
if (arr[3]<6)
{
  grfcoeff 6;
  grfcur=6;
}
NewLoop:
i=1;
n1=0;
Loopx1:
  if ((xm1[i]>minx)&&(xm1[i]<maxx)&&(xm1[i]<x1))
	{
    x1=xm1[i];
    n1=1;
    min_i=i;
  }
  i=i+1;
  if (i<=j)
	{
    goto Loopx1;
  }
  if (n1==0)
	{
		goto End_P;
	}
  x1=xm1[min_i];
  if (code==1)
	{
		level=x1-xmn1;
		xlev=x1;
		ylev=first[2];
		zlev=next[3];
		hlev=40  ;
		gosub metlevel;
  }
  if (code==2)
	{
    #Hdim LDim 3DDim first[1] x1 first[3] first[1] x1+100 first[3] next[1]  x1 next[3] ;
  }
  if (code==3)
	{
		level=x1-zmn1;
		xlev=next[1];
		ylev=first[2];
		zlev=x1;
		hlev=40
		gosub metlevel;
  }
minx=x1+1;
x1=maxx;
goto NewLoop;

END_P:
if (code==1)
{
	level=0;
	xlev=xmn1;
	ylev=first[2];
	zlev=next[3];
	hlev=40
	gosub metlevel;
}
if (code==2)
{
  #Hdim LDim 3DDim first[1] x1 first[3] first[1] x1+100 first[3] next[1] x1 next[3] ;
}
if (code==3)
{
	level=0;
	xlev=next[1]+60;
	ylev=first[2];
	zlev=zmn1;
	hlev=40
	gosub metlevel
}
NULLOUT=ReSnap();
grfcoeff arr[3];
exit
//============================
metlevel:
//-- Размер - уровень
dimarrows 10 0 // Стрелки
dimlnflags 6
dimtext 0 str(level) done
ldim 3ddim xlev ylev zlev xlev ylev zlev+hlev vcs @ 0.1 0 0
ldim edit place lider 1 vcs @ 0.1 0 0 done done
dimarrows auto
dimlnflags 0
dimtext 0 "<>" done
Attrobj Attach  "AutoPlace"  Done Last 1 1 ;
return
