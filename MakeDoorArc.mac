//-- Одна из основных Макропрограмм построения распашной дугообразной двери

global D_DxU D_DzU D_DxN D_DzN D_DxD;
global ProtoPath;
global g_FurnType;  //-- Тип мебельного объекта
KarkasNumb=getcarcnumb();
global HoldName;      //-- Имя хозяина
global MacroSw;       //-- Переключатель режимов работы 0 - в пар.макро 1 - разбор.

global		// Для фасадов и дверей
DoorKonst,            //-- Тип конструкции двери
DoorPlace, // Сторона открывания
DoorDuble, // Двойная/одинарная
DoorOpen,  // Открытая/закрытая
DoorType,  // Утопленная0/накладная1/Свободная2
DoorHinge, // Петля
DoorKorp,   // Толщина материала корпуса ниши
DoorAngle;  // Угол установки

global		// Для фасадов и дверей
DoorMater ,  // Материал панелей двери
DoorPict,    // тип фасада(рисунка)
DoorBCol ,   // Цвет кромки фасада
DoorBand ,   // Тип кромки фасада
DoorMatVS1 , // Материал вставки 1 фасада
DoorMatVS2 ; // Материал вставки 2 фасада

global		            //-- Для ручек
HandleType,           //-- Тип ручки
HandleX,              //-- Сдвиг ручки по x
HandleZ,              //-- Сдвиг ручки по z
HandleA,              //-- Поворот ручки
HandleD,	            //-- Двойная или одиночная ручка
HandleR;	            //-- Тип положения ручки (0-свободно 1-по центру 3-сверху 4-снизу)

global PanDir;	//-- Направление текстуры 1=D 2=B 0-игнорируется

getpar
x y z		//-- Правый нижний дальний угол
w d h     	//-- Размер по ширине, глубине и высоте
DY              // Прогиб
  R_Fas         // Изменения фасада: справа
  L_Fas         // Слева
  U_Fas         // Сверху
  D_Fas         //  Снизу
  Door_Zw       // Зазор по ширине
;
//-----------------------------------------------------------------

FurnType="230500";
NULLOUT=getsnap();
if MacroSw==0
{
  gosub SimpleDoor;
  
}
else
{
  protoobj create "Shkaf.ptl" 231
  "S" w
  "G" D
  "Hd" h
  "DY" DY  // прогиб
  "R_Fas" R_Fas
  "L_Fas" L_Fas
  "U_Fas" U_Fas
  "D_Fas" D_Fas
  "Door_Zw"  Door_Zw
  "Nshp"     PanDir
  "PrMater"  DoorMater
  "Face_col" DoorBCol
  "Rplace"   DoorPlace
  "Fasrtype" DoorPict
  "Double"   DoorDuble
  "Open"     DoorOpen
  "rx"       HandleX
  "rz"       HandleZ
  "ra"       HandleA
  "HanType"  HandleType
  "Rpl_r"	   HandleR
  "Doub_r"   HandleD
  "P_Type"   DoorHinge
  "Band" 	   DoorBand
  "PrMatVs1" DoorMatVS1
  "PrMatVs2" DoorMatVS2
  done
  x y z;
  MacroSw=1;
}
NULLOUT=resnap();
//-- Присваиваем объекту атрибут с порядковым номером каркаса
if (isassign("KarkasNumb",0))
{
  attrobj copy record "KarkasNumb" done last 1 done;
}
else
{
  attrobj attach "KarkasNumb" done last 1 KarkasNumb;
}
if (isassign("HoldName",0))
{
  attrobj copy record "HoldName" done last 1 done;
}
else
{
  attrobj attach "HoldName" done last 1 HoldName ;
}
//attrobj attach "Posit" done last 1 position;
attrobj attach "FurnType" done last 1 FurnType;
attrobj attach "Assembly" done last 1 1;        //-- Признак сборочной единицы
macro ProtoPath+"EndDoor.mac" x y z w h DoorKorp;
exit;
//=============================================================================
SimpleDoor:
defarr arr[7],arrout[5];

x1=x;
y1=y;
z1=z;
ALOpen=60;
object_0=sysvar(60);

if (DoorDuble==1) //-- Двойная дверь  Может открываться только справа и слева
{
  arr[1]=W;
  arr[2]=Dy;
  arr[3]=0.5;
  NULLOUT=Param2DFunc(1,arr,arrout);
  Length=arrout[1];
  Xn=(Length-Door_Zw)/2+Door_Zw;
  arr[3]=Xn/Length;
  NULLOUT=Param2DFunc(1,arr,arrout);
  Length=arrout[1];
  p1x=arrout[2];                 // Правая дверь
  p1y=arrout[3];
  p2x=w;
  p2y=0;
  W1=sqrt((p1x-p2x)*(p1x-p2x)+(p1y-p2y)*(p1y-p2y))
  radius=(W*W/4+Dy*Dy)/(2*abs(Dy));
  Dy1=radius-sqrt(radius*radius-W1*W1/4)
  H1=H;
  NULLOUT=getsnap();
  setucs p1x, p1y, 0, p2x, p2y, 0 ;
    Variant=2;
    //-- Строим Правая дверь
    object_1=sysvar(60);
    macro ProtoPath+"MakeArcWing.mac"
		0,0,0, //-- Положение
		W1, 0, H1,   //-- Ширина и высота
                DY1             // Прогиб
                0 //R_Fas         // Изменения фасада: справа
                L_Fas         // Слева
                 U_Fas         // Сверху
                D_Fas         //  Снизу
		Variant                 // вариант расположения
    ;
    object_2=sysvar(60)-object_1;
		NULLOUT=resnap();
    if (object_2>0)
    {
			move last object_2 done x1 y1 z1 nocopy ;
			objPosle=sysvar(60);
			objDo=object_1;
			macro ProtoPath+"SetCinemaFromObj.mac" byref HaveCinP byref ScrCinO1 DoorAngle objDo objPosle w 0 0 0 0;
			if (HaveCinP==1)
			{
				NULLOUT=AddScratch(ScrCinO1,"Main","Control",0);
				macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0000" ;
				NULLOUT=AddScratch(ScrCinO1,"Main","Control",2);
				macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0406" ;
				macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0408" ;
			}
      if (DoorOpen==1) //-- Если открытая дверь
      {
        rotate last object_2 done 2points x1+W y1 z1 x1+W y1 z1+10 -ALOpen nocopy;
      }
    }
//goto nodoor;
  Xn=(Length-Door_Zw)/2;
  arr[3]=Xn/Length;
  NULLOUT=Param2DFunc(1,arr,arrout);
  Length=arrout[1];
  p1x=0;
  p1y=0;
  p2x=arrout[2];                 //-- Строим левую дверь
  p2y=arrout[3];
  ULLOUT=getsnap();
  setucs p1x, p1y, 0, p2x, p2y, 0 ;
    Variant=1;

    object_1=sysvar(60);
    macro ProtoPath+"MakeArcWing.mac"
		0,0,0, //-- Положение
		W1, 0, H1,   //-- Ширина и высота
                DY1             // Прогиб
                R_Fas         // Изменения фасада: справа
                0 //L_Fas         // Слева
                U_Fas         // Сверху
                D_Fas         //  Снизу
		Variant                 // вариант расположения
    ;
     object_2=sysvar(60)-object_1;
		NULLOUT=resnap();
    if (object_2>0)
    {
			move last object_2 done x1 y1 z1 nocopy ;
			objPosle=sysvar(60);
			objDo=object_1;
			macro ProtoPath+"SetCinemaFromObj.mac" byref HaveCinP byref ScrCinO1 DoorAngle objDo objPosle d 0 0 0 0;
			if (HaveCinP==1)
			{
				NULLOUT=AddScratch(ScrCinO1,"Main","Control",0);
				macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0000" ;
				NULLOUT=AddScratch(ScrCinO1,"Main","Control",2);
				macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0406" ;
				macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0408" ;
			}
      if (DoorOpen==1) //-- Если открытая дверь
      {
        rotate last object_2 done 2points x1 y1 z1 x1 y1 z1+10 ALOpen nocopy;
      }
    }
nodoor:
}
else //-- Если дверь одинарная
{
  W1=W;
  H1=H;
  D1=d;
  z1=z;
  x1=x;
  Variant=DoorPlace;
  //-- Строим дверь

    object_1=sysvar(60);
    macro ProtoPath+"MakeArcWing.mac"
		x1,y1,z1, //-- Положение
		W1, D1, H1,   //-- Ширина и высота
                DY             // Прогиб
                R_Fas         // Изменения фасада: справа
                L_Fas         // Слева
                U_Fas         // Сверху
                D_Fas         //  Снизу
		Variant                 // вариант расположения
    ;
  object_2=sysvar(60)-object_1;
	objPosle=sysvar(60);
	objDo=object_1;
	macro ProtoPath+"SetCinemaFromObj.mac" byref HaveCinP byref ScrCinO1 DoorAngle objDo objPosle w 0 0 0 0;
	if (object_2>0&&HaveCinP==1)
	{
		NULLOUT=AddScratch(ScrCinO1,"Main","Control",0);
		macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0000" ;
		NULLOUT=AddScratch(ScrCinO1,"Main","Control",2);
		macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0406" ;
		macro ProtoPath+"SetCinemaByType.mac" objDo objPosle ScrCinO1 "0408" ;
	}
  if (object_2>0)
  {
    if (DoorOpen==1)
    {
      if (DoorPlace==1)
      {
	      rotate last object_2 done 2points x y 0 x y 10 ALOpen nocopy;
      }
      if (DoorPlace==2)
      {
	      rotate last object_2 done 2points x+W y 0 x+w y 10 -ALOpen nocopy;
      }
      if (DoorPlace==3)
      {
	      rotate last object_2 done 2points x y z1 x+1 y z1 -ALOpen nocopy;
      }
      if (DoorPlace==4)
      {
	      rotate last object_2 done 2points x y z1+H1 x+1 y z1+H1 ALOpen nocopy;
      }
     //-- Если дверь не имеет стороны окткрывания, ее не открываем
    }
  }
}
object_2=sysvar(60)-object_1;
#Door group last object_2 done;
Namescr="ProtoParams";
g_FurnType=FurnType;
ScrMod=InitScratch();
err=AddScratch(ScrMod,FurnType,"S",w);
err=AddScratch(ScrMod,FurnType,"Hd",H);
err=AddScratch(ScrMod,FurnType,"G",D);
err=AddScratch(ScrMod,FurnType,"DY",DY);
err=AddScratch(ScrMod,FurnType,"R_Fas",R_Fas);
err=AddScratch(ScrMod,FurnType,"L_Fas",L_Fas);
err=AddScratch(ScrMod,FurnType,"U_Fas",U_Fas);
err=AddScratch(ScrMod,FurnType,"D_Fas",D_Fas);
err=AddScratch(ScrMod,FurnType,"Door_Zw",Door_Zw);
err=AddScratch(ScrMod,FurnType,"Rplace",DoorPlace);
err=AddScratch(ScrMod,FurnType,"Fasrtype",DoorPict);
err=AddScratch(ScrMod,FurnType,"PrMater",DoorMater);
err=AddScratch(ScrMod,FurnType,"Band",DoorBand);
err=AddScratch(ScrMod,FurnType,"Face_col",DoorBCol);
err=AddScratch(ScrMod,FurnType,"HanType",HandleType);
err=AddScratch(ScrMod,FurnType,"Rpl_r",HandleR);
err=AddScratch(ScrMod,FurnType,"Doub_r",HandleD);
err=AddScratch(ScrMod,FurnType,"rx",HandleX);
err=AddScratch(ScrMod,FurnType,"rz",HandleZ);
err=AddScratch(ScrMod,FurnType,"ra",HandleA);
err=AddScratch(ScrMod,FurnType,"Double",DoorDuble);
err=AddScratch(ScrMod,FurnType,"Open",DoorOpen);
err=AddScratch(ScrMod,FurnType,"P_Type",DoorHinge);
err=AddScratch(ScrMod,FurnType,"PrMatVs1",DoorMatVS1);
err=AddScratch(ScrMod,FurnType,"PrMatVs2",DoorMatVS2);
err=AddScratch(ScrMod,FurnType,"Nshp",PanDir);
NULLOUT=writescratch(ScrMod,Namescr,0);
NULLOUT=TermScratch(ScrMod);
attrobj copy record Namescr done Door done;
NULLOUT=addattrpi(Door,1,231);
return;