//-- Макропрограмма устанавливает фигурную столешницу
defarr arr[3], Rad[6];
defarr BaseGab[5];
defarr basep[3];

NULLOUT=getvarinst(2,"ProtoPath",ProtoPath,getprotomac("Shkaf"));      //-- Путь к папке с макропрограммами
NULLOUT=getarrinst(2,"BaseGab",BaseGab);          //-- Габариты каркаса
NULLOUT=getvarinst(2,"Typ_Kro",Typ_Kro,0);        //-- Тип лицевой кромки
NULLOUT=getvarinst(2,"FDMater",PrMater,0);        //-- Умолчание для материалов фигурных столешниц
NULLOUT=getvarinst(2,"FRadius1",FRadius1,350);    //-- Радиус 1 фигурной столешницы
NULLOUT=getvarinst(2,"FRadius2",FRadius2,300);    //-- Радиус 2 фигурной столешницы
NULLOUT=getvarinst(2,"Fangle",Fangle,45);         //-- Угол стыковки радиусов фигурной столешницы

NULLOUT=setvarinst(2,"MacroSw",1);                //-- Текущий способ построения

Thick=priceinfo(PrMater,"Thickness",16);
onerror final;
NULLOUT=getsnap();
NULLOUT=pushinst(1);
defarr arrin[3], arrout[8];
arrin[1]=Thick;  // Высота резиновой панели
mbget "Укажите точку установки фигурной столешницы" shell arrin arrout :
basep[1]=arrout[1];
basep[2]=arrout[2];
basep[3]=arrout[3];
xgab=arrout[4];
ygab=arrout[5];
Numb=arrout[6];
Shift=arrout[7];
//mbget "Укажите точку установки фигурной столешницы" shell
//  basep[1] basep[2] basep[3] xgab ygab Numb Shift :

NULLOUT=sysarr(33,arr); //-- Запоминаем координаты точки
ptranscs(3,2,arr[1],arr[2],arr[3],arr[1],arr[2],arr[3]);
IsB=iif(arr[1]>BaseGab[1]/2,1,0); //-- По какой стороне угол

#ok_flag
setvar
"Фигурная столешница"
ProtoPath+"Tbl2rad_RAD.wmf"
left
"Введите значения параметров"
done
real default FRadius1 "Радиус 1:" FRadius1
real default FRadius2 "Радиус 2:" FRadius2
real default Fangle "Угол стыковки радиусов:" Fangle
done;
if (ok_flag==0)
{
  goto final;
}
macro ProtoPath+"SetMat.mac" PrMater ;
macro ProtoPath+"SetBand.mac" Typ_Kro Typ_Kro Typ_Kro Typ_Kro ;
macro ProtoPath+"SetFigur.mac" FRadius1, FRadius1, IsB, Fangle;
macro ProtoPath+"SetEnam.mac" "Фигурная столешница";
macromode undo off;
macro ProtoPath+"MakeFigur.mac" basep[1] basep[2] basep[3] xgab, ygab;

objident last 1 polka;
if (Numb>1)
{
  move multicopy Numb-1 polka done 0 0 shift;
}
final:
offerror;
if (isvardef("polka")==16)
{
  macromode undo on "Figur_stol.mac" polka ;
}
else
{
  macromode undo on;
}
NULLOUT=setvarinst(2,"FRadius1",FRadius1);        //-- Радиус 1 фигурной столешницы
NULLOUT=setvarinst(2,"FRadius2",FRadius2);        //-- Радиус 2 фигурной столешницы
NULLOUT=setvarinst(2,"Fangle",Fangle);            //-- Угол стыковки радиусов фигурной столешницы
NULLOUT=resnap();
NULLOUT=popinst(1);
exit;
