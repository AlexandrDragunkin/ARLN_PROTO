//-- Программа указывающая расположение объекта obj2 относительно ЛСК объекта obj1
//-- При этом считается, что слева - значит, что соответствующие координаты obj2 по оси меньше;
//-- справа - по оси больше.
//-- Входные параметры:
//-- obj1, obj2 - два объекта для проверки
global placeX,placeY,placeZ;
global D_DxU,Choise;
global g_eps;
defarr placeX[7],placeY[7],placeZ[7];
defarr gab1[6],gab2[6];
getpar obj1,obj2;
//-----------------------------------------------------
NULLOUT=initarray(placeX,0);
NULLOUT=initarray(placeY,0);
NULLOUT=initarray(placeZ,0);
NULLOUT=initarray(gab1,0);
NULLOUT=initarray(gab2,0);
g1=0;
g2=0;
g3=0;
err=1;
Choise=0;
//------------------------------------------------------
err=getprotoval(obj1,"HDSP_k",h_dsp1);
err=getprotoval(obj2,"HDSP_k",h_dsp2);
hdsp=max(h_dsp1,h_dsp2)+5;
//-- Устанавливаем ПСК в ЛСК объекта с которым сравниваем (obj1)
NULLOUT=getsnap();
setucs lcs obj2;
PTransCS(2,3,0,0,0,g1,g2,g3);
setucs lcs obj1;
PTransCS(3,2,g1,g2,g3,gab2[1],gab2[2],gab2[3]);

x1=GetAttr(obj1,"XUnit",0);
y1=GetAttr(obj1,"YUnit",0);
z1=GetAttr(obj1,"ZUnit",0);

x2=GetAttr(obj2,"XUnit",0);
y2=GetAttr(obj2,"YUnit",0);
z2=GetAttr(obj2,"ZUnit",0);

gab1[4]=gab1[1]+x1;
gab1[5]=gab1[2]+y1;
gab1[6]=gab1[3]+z1;

gab2[4]=gab2[1]+x2;
gab2[5]=gab2[2]+y2;
gab2[6]=gab2[3]+z2;
//-------------------------------------------------------------
//-- По оси X
if ((abs(gab2[1]-gab1[1])<g_eps)&&(abs(gab2[4]-gab1[4])<g_eps))
{
  placeX[1]=1; //-- Равен
  goto poy;
}
if ((gab2[1]>gab1[1])&&(gab2[4]<gab1[4]))
{
  placeX[2]=1;  //-- Меньше
  goto poy;
}
if ((gab2[1]<gab1[1])&&(gab2[4]>gab1[1])&&(gab2[4]<gab1[4]))
{
  placeX[3]=1;   //-- Перекрывает слева
  goto poy;
}
if ((gab2[1]>gab1[1])&&(gab2[1]<gab1[4])&&(gab2[4]>gab1[4]))
{
  placeX[4]=1;   //-- Перекрывает справа
  goto poy;
}
if ((gab2[1]<gab1[1])&&(gab2[4]>gab1[4]))
{
  placeX[5]=1;   //-- Полностью перекрывает
  goto poy;
}
if (gab2[4]<gab1[1])
{
  placeX[6]=1;    //-- Полностью слева
  if ((gab1[1]-gab2[4])<=(hdsp+2*D_DxU)) //-- Расстояние между ними в пределах одной ДСП
  {
    Choise=1;
  }
  goto poy;
}
if (gab2[1]>gab1[4])
{
  placeX[7]=1;   //-- Полностью справа
  if ((gab2[1]-gab1[4])<=(hdsp+2*D_DxU))
  {
    Choise=1;
  }
}
//---------------------------------------------------------------
//-- По оси Y
poy:
if ((abs(gab2[2]-gab1[2])<g_eps)&&(abs(gab2[5]-gab1[5])<g_eps))
{
  placeY[1]=1; //-- Равен
  goto poz;
}
if ((gab2[2]>gab1[2])&&(gab2[5]<gab1[5]))
{
  placeY[2]=1; //-- Меньше
  goto poz;
}
if ((gab2[2]<gab1[2])&&(gab2[5]>gab1[2])&&(gab2[5]<gab1[5]))
{
  placeY[3]=1; //-- Перекрывает слева
  goto poz;
}
if ((gab2[2]>gab1[2])&&(gab2[2]<gab1[5])&&(gab2[5]>gab1[5]))
{
  placeY[4]=1; //-- Перекрывает справа
  goto poz;
}
if ((gab2[2]<gab1[2])&&(gab2[5]>gab1[5]))
{
  placeY[5]=1; //-- Полностью перекрывает
  goto poz;
}
if (gab2[5]<gab1[2])
{
  placeY[6]=1; //-- Полностью слева
  goto poz;
}
if (gab2[2]>gab1[5])
{
  placeY[7]=1; //-- Полностью справа
}
//----------------------------------------------------------------
//-- По оси Z
poz:
if ((abs(gab2[3]-gab1[3])<g_eps)&&(abs(gab2[6]-gab1[6])<g_eps))
{
  placeZ[1]=1; //-- Равен
  goto end;
}
if ((gab2[3]>gab1[3])&&(gab2[6]<gab1[6]))
{
  placeZ[2]=1; //-- Меньше
  goto end;
}
if ((gab2[3]<gab1[3])&&(gab2[6]>gab1[3])&&(gab2[6]<gab1[6]))
{
  placeZ[3]=1; //-- Перекрывает слева
  goto end;
}
if ((gab2[3]>gab1[3])&&(gab2[3]<gab1[6])&&(gab2[6]>gab1[6]))
{
  placeZ[4]=1; //-- Перекрывает справа
  goto end;
}
if ((gab2[3]<gab1[3])&&(gab2[6]>gab1[6]))
{
  placeZ[5]=1; //-- Полностью перекрывает
  goto end;
}
if (gab2[6]<gab1[3])
{
  placeZ[6]=1; //-- Полностью слева
  goto end;
}
if (gab2[3]>gab1[6])
{
  placeZ[7]=1; //-- Полностью справа
}
end:
NULLOUT=resnap();
exit;